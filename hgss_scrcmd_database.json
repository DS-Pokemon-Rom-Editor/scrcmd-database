{
  "movements": {
    "0x0000": "LookUp",
    "0x0001": "LookDown",
    "0x0002": "LookLeft",
    "0x0003": "LookRight",
    "0x0004": "WalkUpSlow",
    "0x0005": "WalkDownSlow",
    "0x0006": "WalkLeftSlow",
    "0x0007": "WalkRightSlow",
    "0x0008": "WalkUp",
    "0x0009": "WalkDown",
    "0x000A": "WalkLeft",
    "0x000B": "WalkRight",
    "0x000C": "WalkUpFast",
    "0x000D": "WalkDownFast",
    "0x000E": "WalkLeftFast",
    "0x000F": "WalkRightFast",
    "0x0010": "WalkUpVeryFast",
    "0x0011": "WalkDownVeryFast",
    "0x0012": "WalkLeftVeryFast",
    "0x0013": "WalkRightVeryFast",
    "0x0014": "RunUp",
    "0x0015": "RunDown",
    "0x0016": "RunLeft",
    "0x0017": "RunRight",
    "0x0018": "WalkUpSlowSite",
    "0x0019": "WalkDownSlowSite",
    "0x001A": "WalkLeftSlowSite",
    "0x001B": "WalkRightSlowSite",
    "0x001C": "WalkUpSite",
    "0x001D": "WalkDownSite",
    "0x001E": "WalkLeftSite",
    "0x001F": "WalkRightSite",
    "0x0020": "WalkUpFastSite",
    "0x0021": "WalkDownFastSite",
    "0x0022": "WalkLeftFastSite",
    "0x0023": "WalkRightFastSite",
    "0x0024": "WalkUpVeryFastSite",
    "0x0025": "WalkDownVeryFastSite",
    "0x0026": "WalkLeftVeryFastSite",
    "0x0027": "WalkRightVeryFastSite",
    "0x0028": "RunUpSite",
    "0x0029": "RunDownSite",
    "0x002A": "RunLeftSite",
    "0x002B": "RunRightSite",
    "0x002C": "JumpUpSlow",
    "0x002D": "JumpDownSlow",
    "0x002E": "JumpLeftSlow",
    "0x002F": "JumpRightSlow",
    "0x0030": "JumpUpSite",
    "0x0031": "JumpDownSite",
    "0x0032": "JumpLeftSite",
    "0x0033": "JumpRightSite",
    "0x0034": "JumpUp",
    "0x0035": "JumpDown",
    "0x0036": "JumpLeft",
    "0x0037": "JumpRight",
    "0x0038": "JumpUp2",
    "0x0039": "JumpDown2",
    "0x003A": "JumpLeft2",
    "0x003B": "JumpRight2",
    "0x003C": "Freeze1",
    "0x003D": "Freeze2",
    "0x003E": "Freeze4",
    "0x003F": "Freeze8",
    "0x0040": "Freeze15",
    "0x0041": "Freeze16",
    "0x0042": "Freeze32",
    "0x0043": "TeleportUp",
    "0x0044": "TeleportDown",
    "0x0045": "DisappearTrue",
    "0x0046": "DisappearFalse",
    "0x0047": "LockDir",
    "0x0048": "ReleaseDir",
    "0x0049": "StopAnimation",
    "0x004A": "ResumeAnimation",
    "0x004B": "Exclamation",
    "0x004C": "WaitWalkUpSlow",
    "0x004D": "WaitWalkDownSlow",
    "0x004F": "WaitWalkRightSlow",
    "0x0050": "WaitWalkUp",
    "0x0051": "WaitWalkDown",
    "0x0052": "WaitWalkLeft",
    "0x0053": "WaitWalkRight",
    "0x0054": "WaitMoveUp",
    "0x0055": "WaitMoveDown",
    "0x0056": "WaitMoveLeft",
    "0x0057": "WaitMoveRight",
    "0x0058": "WaitWalkBackUp",
    "0x0059": "WaitWalkBackDown",
    "0x005A": "WaitWalkBackLeft",
    "0x005B": "WaitWalkBackRight",
    "0x005C": "WaitJumpLeft1",
    "0x005D": "WaitJumpRight1",
    "0x005E": "WaitJumpLeft2",
    "0x005F": "WaitJumpRight2",
    "0x0064": "WaitMoveSite",
    "0x0065": "WaitJumpSite",
    "0x0067": "WaitDoubleExclamation",
    "0x0068": "WaitMoveForever",
    "0x00FE": "End"
  },
  "comparisonOperators": {
    "0x0000": "LESS",
    "0x0001": "EQUAL",
    "0x0002": "GREATER",
    "0x0003": "LESS/EQUAL",
    "0x0004": "GREATER/EQUAL",
    "0x0005": "DIFFERENT"
  },
  "specialOverworlds": {
    "0x00F1": "Camera",
    "0x00F2": "Partner",
    "0x00FD": "Following",
    "0x00FF": "Player"
  },
  "overworldDirections": {
    "0x0000": "Up",
    "0x0001": "Down",
    "0x0002": "Left",
    "0x0003": "Right"
  },
  "scrcmd": {
    "0x0000": {
      "name": "Nop",
      "decomp_name": "snop",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x0001": {
      "name": "Dummy",
      "decomp_name": "dummy",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x0002": {
      "name": "End",
      "decomp_name": "end",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "End script execution"
    },
    "0x0003": {
      "name": "WaitTime",
      "decomp_name": "wait",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Time",
        "Var: Countdown Variable"
      ],
      "description": "Stop script execution for Time frames, storing the remaining time in the Countdown Variable"
    },
    "0x0004": {
      "name": "RegValueSet",
      "decomp_name": "loadbyte",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u8: Value"
      ],
      "description": "Assigns Value to Script Register value"
    },
    "0x0005": {
      "name": "RegDataSet",
      "decomp_name": "loadword",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u32: Value"
      ],
      "description": "Assigns Value to Script Register value"
    },
    "0x0006": {
      "name": "RegAdrsSet",
      "decomp_name": "loadbytefromaddr",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u32: Address"
      ],
      "description": "Assigns data in Address offset to Script Register value"
    },
    "0x0007": {
      "name": "AdrsValueSet",
      "decomp_name": "writebytetoaddr",
      "parameters": [
        4,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Address",
        "u8: Value"
      ],
      "description": "Assigns Value to the Address offset"
    },
    "0x0008": {
      "name": "AdrsRegSet",
      "decomp_name": "setptrbyte",
      "parameters": [
        4,
        1
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Address",
        "u8: Script Register"
      ],
      "description": "Assigns Script Register value to the Address offset"
    },
    "0x0009": {
      "name": "RegRegSet",
      "decomp_name": "copylocal",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register 1",
        "u8: Script Register 2"
      ],
      "description": "Assigns Script Register 2 value to Script Register 1 value"
    },
    "0x000A": {
      "name": "AdrsAdrsSet",
      "decomp_name": "copybyte",
      "parameters": [
        4,
        4
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u32: Address 1",
        "u32: Address 2"
      ],
      "description": "Assigns data in Address 2 to the Address 1 offset"
    },
    "0x000B": {
      "name": "CompareRegs",
      "decomp_name": "compare_local_to_local",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u8: Script Register"
      ],
      "description": "Compares two Script Register"
    },
    "0x000C": {
      "name": "CompareRegValue",
      "decomp_name": "compare_local_to_value",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u8: Value"
      ],
      "description": "Compares Script Register value with Value"
    },
    "0x000D": {
      "name": "CompareRegAdrs",
      "decomp_name": "compare_local_to_addr",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u32: Address"
      ],
      "description": "Compares Script Register value with data in Address"
    },
    "0x000E": {
      "name": "CompareAdrsReg",
      "decomp_name": "compare_addr_to_local",
      "parameters": [
        4,
        1
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Address",
        "u8: Script Register"
      ],
      "description": "Compares data in Address with Script Register value"
    },
    "0x000F": {
      "name": "CompareAdrsValue",
      "decomp_name": "compare_addr_to_value",
      "parameters": [
        4,
        1
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Address",
        "u8: Value"
      ],
      "description": "Compares data in Address with Value"
    },
    "0x0010": {
      "name": "CompareAdrsAdrs",
      "decomp_name": "compare_addr_to_addr",
      "parameters": [
        4,
        4
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u32: Address 1",
        "u32: Address 2"
      ],
      "description": "Compares data in Address 1 with data in Address 2"
    },
    "0x0011": {
      "name": "CompareVarValue",
      "decomp_name": "compare_var_to_value",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "INTEGER"
      ],
      "parameter_values": [
        "Var: Variable",
        "u16: Value"
      ],
      "description": "Compares Variable value with Value"
    },
    "0x0012": {
      "name": "CompareVars",
      "decomp_name": "compare_var_to_var",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable 1",
        "Var: Variable 2"
      ],
      "description": "Compares Variable 1 value with Variable 2 value"
    },
    "0x0013": {
      "name": "ParallelCommonScript",
      "decomp_name": "runscript",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: ???"
      ],
      "description": "???"
    },
    "0x0014": {
      "name": "CommonScript",
      "decomp_name": "callstd",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Global Script ID"
      ],
      "description": "Calls Global Script ID script"
    },
    "0x0015": {
      "name": "LocalScript",
      "decomp_name": "endstd",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Returns to the invoking script/function after a Common Script"
    },
    "0x0016": {
      "name": "Jump",
      "decomp_name": "goto",
      "parameters": [
        4
      ],
      "parameter_types": [
        "FUNCTION_ID"
      ],
      "parameter_values": [
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward"
    },
    "0x0017": {
      "name": "JumpIfObjID",
      "decomp_name": "objectgoto",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "FLEX",
        "FUNCTION_ID"
      ],
      "parameter_values": [
        "u8: Event ID",
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if invoking event has Event ID as ID"
    },
    "0x0018": {
      "name": "JumpIfBgID",
      "decomp_name": "bggoto",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "FUNCTION_ID"
      ],
      "parameter_values": [
        "u8: ???",
        "u32: Relative Jump"
      ],
      "description": "???"
    },
    "0x0019": {
      "name": "JumpIfPlayerDir",
      "decomp_name": "directiongoto",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "FUNCTION_ID"
      ],
      "parameter_values": [
        "u8: Player Direction",
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if player is looking in Player Direction"
    },
    "0x001A": {
      "name": "Call",
      "decomp_name": "call",
      "parameters": [
        4
      ],
      "parameter_types": [
        "FUNCTION_ID"
      ],
      "parameter_values": [
        "u32: Relative Jump"
      ],
      "description": "Calls a function, Relative Jump bytes forward or backward"
    },
    "0x001B": {
      "name": "Return",
      "decomp_name": "return",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Returns to the invoking script/function after a Call"
    },
    "0x001C": {
      "name": "JumpIf",
      "decomp_name": "goto_if",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "FLEX",
        "FUNCTION_ID"
      ],
      "parameter_values": [
        "u8: Condition",
        "u32: Relative Jump"
      ],
      "description": "If Condition in the condition table, jumps to a function"
    },
    "0x001D": {
      "name": "CallIf",
      "decomp_name": "call_if",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "FLEX",
        "FUNCTION_ID"
      ],
      "parameter_values": [
        "u8: Condition",
        "u32: Relative Jump"
      ],
      "description": "If Condition in the condition table, calls a function"
    },
    "0x001E": {
      "name": "SetFlag",
      "decomp_name": "setflag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Flag"
      ],
      "description": "Sets Flag to 1"
    },
    "0x001F": {
      "name": "ClearFlag",
      "decomp_name": "clearflag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Flag"
      ],
      "description": "Sets Flag to 0"
    },
    "0x0020": {
      "name": "CheckFlag",
      "decomp_name": "checkflag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Flag"
      ],
      "description": "Checks if Flag is set"
    },
    "0x0021": {
      "name": "SetFlagFromVar",
      "decomp_name": "setflagvar",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Flag"
      ],
      "description": "Sets the flag whose ID is stored in Flag"
    },
    "0x0022": {
      "name": "ClearFlagFromVar",
      "decomp_name": "clearflagvar",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Flag"
      ],
      "description": "Clears the flag whose ID is stored in Flag"
    },
    "0x0023": {
      "name": "FlagStatusToVar",
      "decomp_name": "checkflagvar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Flag",
        "Var: Variable"
      ],
      "description": "Checks if Flag is set and store the result in Variable"
    },
    "0x0024": {
      "name": "SetTrainerFlag",
      "decomp_name": "settrainerflag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer ID"
      ],
      "description": "Sets the flag of Trainer ID, so marks it as beaten trainer"
    },
    "0x0025": {
      "name": "ClearTrainerFlag",
      "decomp_name": "cleartrainerflag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer ID"
      ],
      "description": "Clears the flag of Trainer ID, so marks it as unbeaten trainer"
    },
    "0x0026": {
      "name": "CheckTrainerFlag",
      "decomp_name": "checktrainerflag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer ID"
      ],
      "description": "Checks if Trainer ID has been beaten"
    },
    "0x0027": {
      "name": "IncrementVar",
      "decomp_name": "addvar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Operand"
      ],
      "description": "Stores the operation Variable + Operand in Variable"
    },
    "0x0028": {
      "name": "DecrementVar",
      "decomp_name": "subvar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Operand"
      ],
      "description": "Stores the operation Variable - Operand in Variable"
    },
    "0x0029": {
      "name": "SetVar",
      "decomp_name": "setvar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "u16: Value"
      ],
      "description": "Stores Value in Variable"
    },
    "0x002A": {
      "name": "SetVarFromVariable",
      "decomp_name": "copyvar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable 1",
        "Var: Variable 2"
      ],
      "description": "Assigns value of Variable 2 to Variable 1"
    },
    "0x002B": {
      "name": "SetVarFromFlexible",
      "decomp_name": "setorcopyvar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Flexible Value"
      ],
      "description": "Stores Flexible Value (or its value if variable) in Variable"
    },
    "0x002C": {
      "name": "MessageAll",
      "decomp_name": "non_npc_msg",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Text Slot"
      ],
      "description": "Display line Text Slot from the text file, all at once"
    },
    "0x002D": {
      "name": "Message",
      "decomp_name": "npc_msg",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Text Slot"
      ],
      "description": "Display line Text Slot from the text file"
    },
    "0x002E": {
      "name": "MessageFlex",
      "decomp_name": "non_npc_msg_var",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Text Slot"
      ],
      "description": "Display line Text Slot from the text file"
    },
    "0x002F": {
      "name": "MessageNoSkip",
      "decomp_name": "npc_msg_var",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Text Slot"
      ],
      "description": "???"
    },
    "0x0030": {
      "name": "CMD_48",
      "decomp_name": "scrcmd_048",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Text Slot"
      ],
      "description": "???"
    },
    "0x0031": {
      "name": "WaitAB",
      "decomp_name": "wait_button",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for button A or button B to be pressed"
    },
    "0x0032": {
      "name": "WaitButton",
      "decomp_name": "wait_button_or_walk_away",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for a button to be pressed"
    },
    "0x0033": {
      "name": "WaitABPad",
      "decomp_name": "wait_button_or_dpad",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for button A, button B or pad buttons to be pressed"
    },
    "0x0034": {
      "name": "OpenMessage",
      "decomp_name": "openmsg",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x0035": {
      "name": "CloseMessage",
      "decomp_name": "closemsg",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Closes message box"
    },
    "0x0036": {
      "name": "FreezeMessage",
      "decomp_name": "holdmsg",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x0037": {
      "name": "SetIconBoard",
      "decomp_name": "direction_signpost",
      "parameters": [
        1,
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Text Slot",
        "u8: Type",
        "u16: Icon",
        "u16: ???"
      ],
      "description": "Prepares an icon board message box displaying Text Slot message, of Type type, and with Icon image if chosen type supports it"
    },
    "0x0038": {
      "name": "SetTextBoard",
      "decomp_name": "scrcmd_055",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: Type",
        "u16: Icon"
      ],
      "description": "Prepares a text board message box of Type type, and with Icon image if chosen type supports it"
    },
    "0x0039": {
      "name": "ShowBoard",
      "decomp_name": "scrcmd_057",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Process"
      ],
      "description": "Triggers different Process processes for the board"
    },
    "0x003A": {
      "name": "WaitBoard",
      "decomp_name": "scrcmd_058",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits the board last process to end"
    },
    "0x003B": {
      "name": "BoardMessage",
      "decomp_name": "trainer_tips",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Text Slot",
        "u16: Variable"
      ],
      "description": "Displays Text Slot message in the current text box, stores the current text box status in Variable"
    },
    "0x003C": {
      "name": "CloseBoard",
      "decomp_name": "scrcmd_060",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Returns 1 to Variable if the player has pressed a button so the board must close, 0 otherwise"
    },
    "0x003D": {
      "name": "Menu",
      "decomp_name": "scrcmd_061",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x003E": {
      "name": "CMD_62",
      "decomp_name": "scrcmd_062",
      "parameters": [
        1,
        1,
        1,
        1,
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???"
      ],
      "description": ""
    },
    "0x003F": {
      "name": "YesNoBox",
      "decomp_name": "yesno",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Opens a Yes-No dialog and stores user response in Variable"
    },
    "0x0040": {
      "name": "MultiStandardText",
      "decomp_name": "scrcmd_064",
      "parameters": [
        1,
        1,
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with text bank #321, returns selected slot ID in Selection"
    },
    "0x0041": {
      "name": "MultiLocalText",
      "decomp_name": "scrcmd_065",
      "parameters": [
        1,
        1,
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with local texts, returns selected slot ID in Selection"
    },
    "0x0042": {
      "name": "AddMultiOption",
      "decomp_name": "scrcmd_066",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Text Slot",
        "u8: Multi Slot"
      ],
      "description": "Adds an option with Multi Slot ID showing Text Slot text"
    },
    "0x0043": {
      "name": "ShowMulti",
      "decomp_name": "scrcmd_067",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Shows the prepared multi in screen"
    },
    "0x0044": {
      "name": "ListStandardText",
      "decomp_name": "scrcmd_068",
      "parameters": [
        1,
        1,
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection list at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with text bank #321, returns selected slot ID in Selection"
    },
    "0x0045": {
      "name": "ListLocalText",
      "decomp_name": "scrcmd_069",
      "parameters": [
        1,
        1,
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection list at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with local texts, returns selected slot ID in Selection"
    },
    "0x0046": {
      "name": "AddListOption",
      "decomp_name": "scrcmd_070",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Option MSG",
        "Flex: Highlight MSG",
        "Flex: List Slot"
      ],
      "description": "Adds a new option to the list, with List Slot ID and showing text line Option MSG. It also displays text line Highlight MSG when that option is highlighted."
    },
    "0x0047": {
      "name": "ShowList",
      "decomp_name": "scrcmd_071",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Shows the prepared list in screen"
    },
    "0x0048": {
      "name": "MultiColumn",
      "decomp_name": "scrcmd_072",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Columns"
      ],
      "description": "Splits the multi window in Columns different columns"
    },
    "0x0049": {
      "name": "PlayFanfare",
      "decomp_name": "play_se",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Sound"
      ],
      "description": "Plays Sound"
    },
    "0x004A": {
      "name": "StopFanfare",
      "decomp_name": "stop_se",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Sound"
      ],
      "description": "Stops Sound"
    },
    "0x004B": {
      "name": "WaitFanfare",
      "decomp_name": "wait_se",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Sound"
      ],
      "description": "Waits Sound to finish"
    },
    "0x004C": {
      "name": "PlayCry",
      "decomp_name": "play_cry",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Unused"
      ],
      "description": "Plays a Pok\u00e9mon cry"
    },
    "0x004D": {
      "name": "WaitCry",
      "decomp_name": "wait_cry",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits the current cry to finish"
    },
    "0x004E": {
      "name": "PlaySound",
      "decomp_name": "play_fanfare",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Sound"
      ],
      "description": "Pauses current music, then Plays Sound"
    },
    "0x004F": {
      "name": "WaitSound",
      "decomp_name": "wait_fanfare",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for Sound to finish, then resumes music"
    },
    "0x0050": {
      "name": "PlayMusic",
      "decomp_name": "play_bgm",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Music"
      ],
      "description": "Plays Music"
    },
    "0x0051": {
      "name": "StopMusic",
      "decomp_name": "stop_bgm",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Unused"
      ],
      "description": "Stops current music"
    },
    "0x0052": {
      "name": "PlayDefaultMusic",
      "decomp_name": "reset_bgm",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Plays map default music"
    },
    "0x0053": {
      "name": "SetMusic",
      "decomp_name": "scrcmd_083",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Music"
      ],
      "description": "???"
    },
    "0x0054": {
      "name": "FadeOutMusic",
      "decomp_name": "fade_out_bgm",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u16: Volume",
        "u16: Time"
      ],
      "description": "Fades out the current music to Volume in Time frames"
    },
    "0x0055": {
      "name": "FadeInMusic",
      "decomp_name": "fade_in_bgm",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Time"
      ],
      "description": "Fades in the current music to normal volume in Time frames"
    },
    "0x0056": {
      "name": "SetMusicPauseStatus",
      "decomp_name": "scrcmd_086",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: SSEQ Player ID",
        "u8: Status"
      ],
      "description": "???"
    },
    "0x0057": {
      "name": "TempMusic",
      "decomp_name": "temp_bgm",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Music ID"
      ],
      "description": "???"
    },
    "0x0058": {
      "name": "SetBGMFlag",
      "decomp_name": "scrcmd_088",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???"
      ],
      "description": "???"
    },
    "0x0059": {
      "name": "CheckChatotCry",
      "decomp_name": "chatot_has_cry",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Checks if Chatot has custom sound, stores answer in Variable"
    },
    "0x005A": {
      "name": "StartChatotCry",
      "decomp_name": "chatot_start_recording",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Starts Chatot microphone record, stores answer in Variable"
    },
    "0x005B": {
      "name": "StopChatotCry",
      "decomp_name": "chatot_stop_recording",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Stops recording Chatot custom sound"
    },
    "0x005C": {
      "name": "SaveChatotCry",
      "decomp_name": "chatot_save_recording",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x005D": {
      "name": "CMD_93",
      "decomp_name": "scrcmd_093",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x005E": {
      "name": "Movement",
      "decomp_name": "apply_movement",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "FLEX",
        "ACTION_ID"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "u32: Relative Jump"
      ],
      "description": "Applies movement at Relative Jump to Event ID"
    },
    "0x005F": {
      "name": "WaitMovement",
      "decomp_name": "wait_movement",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for all movements to finish"
    },
    "0x0060": {
      "name": "LockAll",
      "decomp_name": "lockall",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Locks every event in the map"
    },
    "0x0061": {
      "name": "ReleaseAll",
      "decomp_name": "releaseall",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Releases every event in the map"
    },
    "0x0062": {
      "name": "Lock",
      "decomp_name": "lock",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Event ID"
      ],
      "description": "Locks Event ID"
    },
    "0x0063": {
      "name": "Release",
      "decomp_name": "release",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Event ID"
      ],
      "description": "Releases Event ID"
    },
    "0x0064": {
      "name": "AddOW",
      "decomp_name": "show_person",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID"
      ],
      "description": "Add Event ID overworld in the map"
    },
    "0x0065": {
      "name": "RemoveOW",
      "decomp_name": "hide_person",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID"
      ],
      "description": "Removes Event ID overworld from the map"
    },
    "0x0066": {
      "name": "LockCamera",
      "decomp_name": "scrcmd_102",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Locks the camera at position X and Y"
    },
    "0x0067": {
      "name": "ReleaseCamera",
      "decomp_name": "scrcmd_103",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Releases the camera"
    },
    "0x0068": {
      "name": "FacePlayer",
      "decomp_name": "faceplayer",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Makes the invoking event look at the player"
    },
    "0x0069": {
      "name": "GetPlayerPosition",
      "decomp_name": "get_player_coords",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: X",
        "Var: Y"
      ],
      "description": "Saves the current player position in X and Y"
    },
    "0x006A": {
      "name": "GetOWPosition",
      "decomp_name": "get_person_coords",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Var: X",
        "Var: Y"
      ],
      "description": "Saves the current Event ID position in X and Y"
    },
    "0x006B": {
      "name": "SetFollowingOverworld",
      "decomp_name": "scrcmd_107",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: X",
        "Flex: Z",
        "Flex: Y"
      ],
      "description": "???"
    },
    "0x006C": {
      "name": "KeepOverworld",
      "decomp_name": "scrcmd_108",
      "parameters": [
        2,
        1
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "u8: Value"
      ],
      "description": "If Value is 1, prevents Event ID from disappearing when entering on a new map header"
    },
    "0x006D": {
      "name": "SetOWMovement",
      "decomp_name": "scrcmd_109",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "u16: Movement"
      ],
      "description": "Changes the Event ID's movement number to Movement"
    },
    "0x006E": {
      "name": "GiveMoney",
      "decomp_name": "addmoney",
      "parameters": [
        4
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u32: Money"
      ],
      "description": "Adds Money to the player's money"
    },
    "0x006F": {
      "name": "TakeMoney",
      "decomp_name": "submoneyimmediate",
      "parameters": [
        4
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u32: Money"
      ],
      "description": "Subtracts Money from the player's money"
    },
    "0x0070": {
      "name": "CompareMoney",
      "decomp_name": "hasenoughmoneyimmediate",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "u32: Money"
      ],
      "description": "Stores 1 into Variable if the player has Money or more money. Stores 0 otherwise."
    },
    "0x0071": {
      "name": "ShowMoney",
      "decomp_name": "show_money_box",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Shows the money box at X and Y coordinates of the screen"
    },
    "0x0072": {
      "name": "HideMoney",
      "decomp_name": "hide_money_box",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Hides the money box"
    },
    "0x0073": {
      "name": "UpdateMoney",
      "decomp_name": "update_money_box",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Updates the current money in the money box"
    },
    "0x0074": {
      "name": "ShowSpecialCurrency",
      "decomp_name": "scrcmd_116",
      "parameters": [
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u8: Currency",
        "Flex: X Coord",
        "Flex: Y Coord"
      ],
      "description": "Shows the Currency box at X and Y coordinates of the screen."
    },
    "0x0075": {
      "name": "HideSpecialCurrency",
      "decomp_name": "scrcmd_117",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Hides the currently displayed special currency box."
    },
    "0x0076": {
      "name": "UpdateSpecialCurrency",
      "decomp_name": "scrcmd_118",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Currency"
      ],
      "description": "Updates the current Currency in the currency box."
    },
    "0x0077": {
      "name": "CheckCoins",
      "decomp_name": "get_coin_amount",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the current casino coin amount in Variable"
    },
    "0x0078": {
      "name": "GiveCoins",
      "decomp_name": "give_coins",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Coins"
      ],
      "description": "Adds Coins to the player's casino coins"
    },
    "0x0079": {
      "name": "TakeCoins",
      "decomp_name": "take_coins",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Coins"
      ],
      "description": "Subtracts Coins from the player's casino coins"
    },
    "0x007A": {
      "name": "GiveAthletePoints",
      "decomp_name": "give_athlete_points",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Amount"
      ],
      "description": "Adds the given Amount to the player's Athlete Points"
    },
    "0x007B": {
      "name": "TakeAthletePoints",
      "decomp_name": "take_athlete_points",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Amount"
      ],
      "description": "Subtracts the given Amount from the player's Athlete Points"
    },
    "0x007C": {
      "name": "CompareAthletePoints",
      "decomp_name": "check_athlete_points",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Result",
        "Flex: Amount"
      ],
      "description": "Stores 1 into Variable if the player has the given Amount of Athlete Points or more. Stores 0 otherwise."
    },
    "0x007D": {
      "name": "GiveItem",
      "decomp_name": "giveitem",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Adds Amount of Item item, stores 1 in Variable if the player had less than 1000 - Amount (100 - Amount if TM/HM), stores 0 otherwise"
    },
    "0x007E": {
      "name": "TakeItem",
      "decomp_name": "takeitem",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Subs Amount of Item item, stores 1 in Variable if the player had at least Amount items in the bag, stores 0 otherwise"
    },
    "0x007F": {
      "name": "CheckItemSpace",
      "decomp_name": "hasspaceforitem",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the player has less than 1000 - Amount of Item items (100 - Amount if TM/HM), stores 0 otherwise"
    },
    "0x0080": {
      "name": "CheckItem",
      "decomp_name": "hasitem",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the player has at least Amount of Item items in the bag, stores 0 otherwise"
    },
    "0x0081": {
      "name": "CheckItemIsMachine",
      "decomp_name": "itemistmorhm",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Item is TM or HM, stores 0 otherwise"
    },
    "0x0082": {
      "name": "GetItemPocket",
      "decomp_name": "getitempocket",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "Stores the bag pocket of Item in Variable"
    },
    "0x0083": {
      "name": "SetStarter",
      "decomp_name": "set_starter_choice",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon"
      ],
      "description": "Stores Pok\u00e9mon as the starting Pok\u00e9mon in the game save data"
    },
    "0x0084": {
      "name": "GenderMessage",
      "decomp_name": "gender_msgbox",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Male Text",
        "u8: Female Text"
      ],
      "description": "Displays Male Text or Female Text message depending on player's gender"
    },
    "0x0085": {
      "name": "CheckSeals",
      "decomp_name": "get_seal_quantity",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Seal ID",
        "Var: Number of Seals in Seal Case"
      ],
      "description": "Checks the number of a certain type of Ball Seals that the player has. The variable is the output of how many Seals you have."
    },
    "0x0086": {
      "name": "GiveSeals",
      "decomp_name": "give_or_take_seal",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Seal ID",
        "Flex: Number of Seals to be Given"
      ],
      "description": "Gives the player Ball Seals."
    },
    "0x0087": {
      "name": "GiveRandomSeals",
      "decomp_name": "give_random_seal",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Random Seal ID 1",
        "Var: Random Seal ID 2",
        "Var: Random Seal ID 3"
      ],
      "description": "Generates three random types of Ball Seals and gives them to the player (repeats are possible). Each variable will yield a 0 if the player has no more room for the Seal(s) in the Seal Case."
    },
    "0x0088": {
      "name": "CheckPokemonForm",
      "decomp_name": "scrcmd_136",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Checks the form of the Pokemon in party slot Party Position and returns the form ID in Variable."
    },
    "0x0089": {
      "name": "GivePokemon",
      "decomp_name": "give_mon",
      "parameters": [
        2,
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Level",
        "Flex: Item",
        "Flex: Form",
        "Flex: Ability",
        "Var: Variable"
      ],
      "description": "Gives Pok\u00e9mon at level Level, store 1 in Variable if succeed and 0 otherwise"
    },
    "0x008A": {
      "name": "GivePokemonEgg",
      "decomp_name": "give_egg",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Location"
      ],
      "description": "Gives a Pok\u00e9mon egg received from Location text slot at text bank #281"
    },
    "0x008B": {
      "name": "ReplaceMove",
      "decomp_name": "set_mon_move",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Slot",
        "Flex: Move Slot",
        "u16: Move ID"
      ],
      "description": "Overwrites Move Slot of the Pok\u00e9mon at the specified Party Slot with Move ID."
    },
    "0x008C": {
      "name": "CheckPokemonHasMove",
      "decomp_name": "mon_has_move",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Move ID",
        "Flex: Party Slot"
      ],
      "description": "Checks if a Pok\u00e9mon at the specified Party Slot knows a move with given Move ID.\nStores 1 into Variable if yes, 0 otherwise."
    },
    "0x008D": {
      "name": "CheckMoveInParty",
      "decomp_name": "get_party_slot_with_move",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Move ID"
      ],
      "description": "Checks if any Pok\u00e9mon in the party knows Move ID move, stores in Variable the position of the first Pok\u00e9mon that knows it or stores 6 if no Pok\u00e9mon in the party knows the move"
    },
    "0x008E": {
      "name": "CheckPokeGearRematch",
      "decomp_name": "get_phone_book_rematch",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Phone Number",
        "Var: Variable"
      ],
      "description": "Stores 1 in Var if rematch is active, stores 0 otherwise."
    },
    "0x008F": {
      "name": "ChooseRivalName",
      "decomp_name": "name_rival",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Opens the keyboard for naming the rival, stores 1 in Variable if user cancels the proccess"
    },
    "0x0090": {
      "name": "GetCounterpartSprite",
      "decomp_name": "get_friend_sprite",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 97 (Lyra sprite ID) into the Variable if you're playing as Ethan;\nStores 0 (Ethan sprite ID) into the Variable if you're playing as Lyra."
    },
    "0x0091": {
      "name": "UpgradePokegear",
      "decomp_name": "register_pokegear_card",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Module"
      ],
      "description": "Adds the worldmap to the Pokegear if Module is 1, adds the radio if Module is 2"
    },
    "0x0092": {
      "name": "RecordPokegearNumber",
      "decomp_name": "register_gear_number",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": ""
    },
    "0x0093": {
      "name": "CheckPokegearNumberRegistered",
      "decomp_name": "check_registered_phone_number",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Phone Number",
        "Var: Variable"
      ],
      "description": "Stores 0 into Variable if Phone Number has not been registered, and 1 if it has been registered."
    },
    "0x0094": {
      "name": "CMD_148",
      "decomp_name": "scrcmd_148",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0095": {
      "name": "CMD_149",
      "decomp_name": "scrcmd_149",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0096": {
      "name": "ReturnScreen",
      "decomp_name": "restore_overworld",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Restores the normal overworld screen"
    },
    "0x0097": {
      "name": "CMD_151",
      "decomp_name": "scrcmd_151",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0098": {
      "name": "CMD_152",
      "decomp_name": "scrcmd_152",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0099": {
      "name": "DressPokemon",
      "decomp_name": "scrcmd_153",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x009A": {
      "name": "ContestDressupScreen",
      "decomp_name": "scrcmd_154",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x009B": {
      "name": "DressUpArtworkScreen",
      "decomp_name": "scrcmd_155",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x009C": {
      "name": "SealCapsuleScreen",
      "decomp_name": "scrcmd_156",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x009D": {
      "name": "WorldMapScreen",
      "decomp_name": "town_map",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the worldmap screen"
    },
    "0x009E": {
      "name": "PCBoxScreen",
      "decomp_name": "scrcmd_158",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x009F": {
      "name": "DrawScreenUnion",
      "decomp_name": "scrcmd_159",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x00A0": {
      "name": "TrainerCaseUnion",
      "decomp_name": "scrcmd_160",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x00A1": {
      "name": "TradeScreenUnion",
      "decomp_name": "scrcmd_161",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x00A2": {
      "name": "RecordMixingUnion",
      "decomp_name": "scrcmd_162",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x00A3": {
      "name": "EndGameScreen",
      "decomp_name": "hof_credits",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Location"
      ],
      "description": "If Location is 0, Hall of Fame and Credits sequence plays -- used for Indigo Plateau. If Location is 1, only the Credits sequence plays -- used for Mt. Silver battle against Red"
    },
    "0x00A4": {
      "name": "HallOfFameData",
      "decomp_name": "scrcmd_164",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x00A5": {
      "name": "StoreGTSStatus",
      "decomp_name": "scrcmd_165",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "???"
      ],
      "description": ""
    },
    "0x00A6": {
      "name": "InitWFC",
      "decomp_name": "scrcmd_166",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "???"
      ],
      "description": ""
    },
    "0x00A7": {
      "name": "StarterSelectionScreen",
      "decomp_name": "choose_starter",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the starter Pok\u00e9mon selection screen"
    },
    "0x00A8": {
      "name": "GetTrainerPathToPlayer",
      "decomp_name": "get_trainer_path_to_player",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": ""
    },
    "0x00A9": {
      "name": "TrainerStepTowardsPlayer",
      "decomp_name": "trainer_step_towards_player",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Var: Variable"
      ],
      "description": ""
    },
    "0x00AA": {
      "name": "GetTrainerEyeType",
      "decomp_name": "get_trainer_eye_type",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": ""
    },
    "0x00AB": {
      "name": "GetEyeTrainerNum",
      "decomp_name": "get_eye_trainer_num",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Var: Variable"
      ],
      "description": ""
    },
    "0x00AC": {
      "name": "ChoosePlayerName",
      "decomp_name": "name_player",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Opens the keyboard for naming the player, stores 1 in Variable if user cancels the proccess"
    },
    "0x00AD": {
      "name": "ChoosePokemonNickname",
      "decomp_name": "nickname_input",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Opens the keyboard for naming a Pok\u00e9mon in Party Position, stores 1 in Variable if user cancels the proccess"
    },
    "0x00AE": {
      "name": "FadeScreen",
      "decomp_name": "fade_screen",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u16: Frame Count",
        "u16: Duration",
        "u16: Fade Style",
        "u16: Color"
      ],
      "description": "Fades screen to chosen 15-bit Color, using the chosen Fade Style. The transition will render Frame Count images, of Duration length each."
    },
    "0x00AF": {
      "name": "WaitFadeScreen",
      "decomp_name": "wait_fade",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for the screen fade to end"
    },
    "0x00B0": {
      "name": "Warp",
      "decomp_name": "warp",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Map",
        "u16: Door",
        "Flex: X",
        "Flex: Y",
        "Flex: Dir"
      ],
      "description": "Warps to X and Y position of Map header with initial Dir direction, using Door warp"
    },
    "0x00B1": {
      "name": "RockClimbAnimation",
      "decomp_name": "rock_climb",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Uses rock climb with the Pok\u00e9mon at Party Position position"
    },
    "0x00B2": {
      "name": "SurfAnimation",
      "decomp_name": "surf",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Uses surf with the Pok\u00e9mon at Party Position position"
    },
    "0x00B3": {
      "name": "WaterfallAnimation",
      "decomp_name": "waterfall",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Uses waterfall with the Pok\u00e9mon at Party Position position"
    },
    "0x00B4": {
      "name": "FlyAnimation",
      "decomp_name": "scrcmd_180",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u16: Map",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Flies to Map header map, to coordinates X and Y"
    },
    "0x00B5": {
      "name": "FlashAnimation",
      "decomp_name": "flash_effect",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets weather to 12 (darkness after flash) and then updates the weather graphics"
    },
    "0x00B6": {
      "name": "WhirlpoolAnimation",
      "decomp_name": "whirlpool",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Uses whirlpool with the Pok\u00e9mon at Party Position position"
    },
    "0x00B7": {
      "name": "CutAnimation",
      "decomp_name": "scrcmd_183",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Displays the Hidden Machine summon animation with the Pok\u00e9mon at Party Position position"
    },
    "0x00B8": {
      "name": "CheckBike",
      "decomp_name": "player_on_bike_check",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player is riding the bike, stores 0 otherwise"
    },
    "0x00B9": {
      "name": "RideBike",
      "decomp_name": "player_on_bike_set",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Action"
      ],
      "description": "Changes player form from normal to riding the bike if Action is 1, otherwise it sets the normal form to the player"
    },
    "0x00BA": {
      "name": "CyclingRoad",
      "decomp_name": "set_bike_state_lock",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Action"
      ],
      "description": "If Action is 1, the game sets the cycling road flag and moves the player down. Otherwise the flag is deactivated."
    },
    "0x00BB": {
      "name": "CheckPlayerForm",
      "decomp_name": "get_player_state",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current player form"
    },
    "0x00BC": {
      "name": "SetPlayerForm",
      "decomp_name": "set_avatar_bits",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Form"
      ],
      "description": "Activates the Form bit in the internal player form data"
    },
    "0x00BD": {
      "name": "UpdatePlayerForm",
      "decomp_name": "update_avatar_state",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Updates changes in the internal player form data in the screen"
    },
    "0x00BE": {
      "name": "TextPlayerName",
      "decomp_name": "buffer_players_name",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores player's name in String Buffer"
    },
    "0x00BF": {
      "name": "TextRivalName",
      "decomp_name": "buffer_rivals_name",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores rival's name in String Buffer"
    },
    "0x00C0": {
      "name": "TextCounterpart",
      "decomp_name": "buffer_friends_name",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores counterpart's name in String Buffer"
    },
    "0x00C1": {
      "name": "TextPartyPokemon",
      "decomp_name": "buffer_mon_species_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the name of the Pok\u00e9mon in Party Position in String Buffer"
    },
    "0x00C2": {
      "name": "TextItem",
      "decomp_name": "buffer_item_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's name in String Buffer"
    },
    "0x00C3": {
      "name": "TextPocket",
      "decomp_name": "buffer_pocket_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Pocket"
      ],
      "description": "Stores Pocket's name in String Buffer"
    },
    "0x00C4": {
      "name": "TextAttackItem",
      "decomp_name": "buffer_tmhm_move_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores the name of the move contained in Item TM/HM in String Buffer"
    },
    "0x00C5": {
      "name": "TextMove",
      "decomp_name": "buffer_move_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Move"
      ],
      "description": "Stores battle Move's name in String Buffer"
    },
    "0x00C6": {
      "name": "TextNumber",
      "decomp_name": "buffer_int",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Number"
      ],
      "description": "Stores a Number in String Buffer"
    },
    "0x00C7": {
      "name": "TextPokeNickname",
      "decomp_name": "bufferpartymonnick",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the nickname of the Pok\u00e9mon in Party Position in String Buffer"
    },
    "0x00C8": {
      "name": "CMD_200",
      "decomp_name": "buffer_trainer_class_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x00C9": {
      "name": "TextPlayerTrainerType",
      "decomp_name": "buffer_player_union_avatar_class_name",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores player's Union Room trainer type in String Buffer"
    },
    "0x00CA": {
      "name": "TextPokemon",
      "decomp_name": "buffer_species_name",
      "parameters": [
        1,
        2,
        2,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Pok\u00e9mon",
        "u16: Unused",
        "u8: Unused"
      ],
      "description": "Stores Pok\u00e9mon's name in String Buffer"
    },
    "0x00CB": {
      "name": "TextStarterPokemon",
      "decomp_name": "buffer_starter_species_name",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the player' starter Pok\u00e9mon in String Buffer"
    },
    "0x00CC": {
      "name": "TextRivalStarter",
      "decomp_name": "buffer_dppt_rival_starter_species_name",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the rival' starter Pok\u00e9mon in String Buffer"
    },
    "0x00CD": {
      "name": "TextCounterpartStarter",
      "decomp_name": "buffer_dppt_friend_starter_species_name",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the counterpart' starter Pok\u00e9mon in String Buffer"
    },
    "0x00CE": {
      "name": "CheckStarter",
      "decomp_name": "get_starter_choice",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the starter Pok\u00e9mon ID in Variable"
    },
    "0x00CF": {
      "name": "DummyTextGoods",
      "decomp_name": "buffer_decoration_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Unused"
      ],
      "description": "Loads an empty string in String Buffer"
    },
    "0x00D0": {
      "name": "DummyTextTrap",
      "decomp_name": "scrcmd_208",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Unused",
        "Flex: Unused"
      ],
      "description": "Nothing"
    },
    "0x00D1": {
      "name": "DummyTextTreasure",
      "decomp_name": "scrcmd_209",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Unused",
        "Flex: Unused"
      ],
      "description": "Nothing"
    },
    "0x00D2": {
      "name": "TextMapName",
      "decomp_name": "buffer_map_sec_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Map"
      ],
      "description": "Stores Map header name in String Buffer"
    },
    "0x00D3": {
      "name": "GetSwarmInfo",
      "decomp_name": "scrcmd_211",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Map",
        "Var: Pok\u00e9mon"
      ],
      "description": "Selects a zone depending on a random seed, then stores the zone ID in Map and the corresponding swarm Pok\u00e9mon of that zone in Pok\u00e9mon"
    },
    "0x00D4": {
      "name": "TrainerID",
      "decomp_name": "get_trainer_num",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the trainer ID number in Variable depending on the script ID"
    },
    "0x00D5": {
      "name": "TrainerBattle",
      "decomp_name": "trainer_battle",
      "parameters": [
        2,
        2,
        1,
        1
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "Flex: Trainer 1",
        "Flex: Trainer 2",
        "u8: Result",
        "u8: ???"
      ],
      "description": "Starts a battle against Trainer 1 and, if Trainer 2 is neither 0 nor the same as Trainer 1, a double battle against both. Continues without warping to Pokemon Center/home if Result is equal to 1."
    },
    "0x00D6": {
      "name": "TrainerMessage",
      "decomp_name": "trainer_message",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Trainer ID",
        "Flex: Type"
      ],
      "description": "Displays the text of Trainer ID trainer at condition Type"
    },
    "0x00D7": {
      "name": "TrainerMsgCheck",
      "decomp_name": "get_trainer_msg_params",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Noticing",
        "Var: Defeat",
        "Var: One Pok\u00e9mon"
      ],
      "description": "If the script ID corresponds to a single battle trainer, stores 0 in Noticing, 2 in Defeat and 0 in One Pok\u00e9mon. If it corresponds to a double battle, stores 3, 5 and 6 or 7, 9 and 10 depending on whether it's the first or the second trainer"
    },
    "0x00D8": {
      "name": "TrainerRematchMsgCheck",
      "decomp_name": "get_rematch_msg_params",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Noticing",
        "Var: Defeat",
        "Var: One Pok\u00e9mon"
      ],
      "description": "If the script ID corresponds to a single battle trainer, stores 17 in Noticing, 0 in Defeat and 0 in One Pok\u00e9mon. If it corresponds to a double battle, stores 18, 0 and 6 or 19, 0 and 10 depending on whether it's the first or the second trainer"
    },
    "0x00D9": {
      "name": "TrainerTypeCheck",
      "decomp_name": "trainer_is_double_battle",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the script ID corresponds to a single battle, stores 1 if it corresponds to a double battle"
    },
    "0x00DA": {
      "name": "TrainerMusic",
      "decomp_name": "encounter_music",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer"
      ],
      "description": "Plays Trainer's overworld music"
    },
    "0x00DB": {
      "name": "LostBattle",
      "decomp_name": "white_out",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Return to Pok\u00e9mon Center or player's house after being defeated"
    },
    "0x00DC": {
      "name": "CheckBattleIsLost",
      "decomp_name": "check_battle_won",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if player has been defeated in battle, stores 1 otherwise"
    },
    "0x00DD": {
      "name": "CheckDefeatedPokemon",
      "decomp_name": "static_wild_won_or_caught",
      "parameters": [
        2,
        1
      ],
      "parameter_types": [
        "VARIABLE",
        "INTEGER"
      ],
      "parameter_values": [
        "Var: Variable",
        "u8: ???"
      ],
      "description": "Stores 0 in Variable if player defeated or catched the wild Pokemon, stores 1 otherwise"
    },
    "0x00DE": {
      "name": "Check2vs2",
      "decomp_name": "party_check_for_double",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has at least 2 not fainted Pok\u00e9mon, stores 0 otherwise"
    },
    "0x00DF": {
      "name": "DummyTrainerBattle",
      "decomp_name": "scrcmd_223",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Starts a battle against trainer with ID 1"
    },
    "0x00E0": {
      "name": "DummyTrainerFlag",
      "decomp_name": "scrcmd_224",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets the trainer flag with the same ID as the invoking event"
    },
    "0x00E1": {
      "name": "DummyTrainerFlagJump",
      "decomp_name": "goto_if_trainer_defeated",
      "parameters": [
        4
      ],
      "parameter_types": [
        "FUNCTION_ID"
      ],
      "parameter_values": [
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if trainer flag with the invoking event ID is set"
    },
    "0x00E2": {
      "name": "CMD_226",
      "decomp_name": "scrcmd_226",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x00E3": {
      "name": "CMD_227",
      "decomp_name": "scrcmd_227",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x00E4": {
      "name": "CMD_228",
      "decomp_name": "scrcmd_228",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x00E5": {
      "name": "CMD_229",
      "decomp_name": "scrcmd_229",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x00E6": {
      "name": "CMD_230",
      "decomp_name": "scrcmd_230",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x00E7": {
      "name": "CMD_231",
      "decomp_name": "scrcmd_231",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x00E8": {
      "name": "CMD_232",
      "decomp_name": "scrcmd_232",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x00E9": {
      "name": "CMD_233",
      "decomp_name": "scrcmd_233",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x00EA": {
      "name": "CMD_234",
      "decomp_name": "scrcmd_234",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x00EB": {
      "name": "CMD_235",
      "decomp_name": "scrcmd_235",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x00EC": {
      "name": "CMD_236",
      "decomp_name": "scrcmd_236",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x00ED": {
      "name": "CMD_237",
      "decomp_name": "scrcmd_237",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x00EE": {
      "name": "CheckPokerus",
      "decomp_name": "party_has_pokerus",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if one or more Pok\u00e9mon in the party are infected with the Pok\u00e9rus"
    },
    "0x00EF": {
      "name": "GetPokemonGender",
      "decomp_name": "mon_get_gender",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if Pok\u00e9mon at Party Position is male, 1 if is female and 2 if gender is unknown"
    },
    "0x00F0": {
      "name": "SetElevatorWarp",
      "decomp_name": "set_dynamic_warp",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": ""
    },
    "0x00F1": {
      "name": "GetElevatorFloor",
      "decomp_name": "get_dynamic_warp_floor_no",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current floor in a elevator"
    },
    "0x00F2": {
      "name": "ElevatorBox",
      "decomp_name": "elevator_cur_floor_box",
      "parameters": [
        1,
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "Var: Variable",
        "Flex: Floor"
      ],
      "description": "Shows the current floor number in a box at X and Y coordinates in the screen"
    },
    "0x00F3": {
      "name": "CountJohtoDexSeen",
      "decomp_name": "count_johto_dex_seen",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total seen Pokemon in the Johto Pok\u00e9dex"
    },
    "0x00F4": {
      "name": "CountJohtoDexObtained",
      "decomp_name": "count_johto_dex_owned",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total obtained Pokemon in the Johto Pok\u00e9dex"
    },
    "0x00F5": {
      "name": "CountNationalDexSeen",
      "decomp_name": "count_national_dex_seen",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total seen Pokemon in the National Pok\u00e9dex"
    },
    "0x00F6": {
      "name": "CountNationalDexObtained",
      "decomp_name": "count_national_dex_owned",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total obtained Pokemon in the National Pok\u00e9dex"
    },
    "0x00F7": {
      "name": "DummyNationalDexCheck",
      "decomp_name": "scrcmd_247",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x00F8": {
      "name": "GetDexProgressMsg",
      "decomp_name": "get_dex_eval_result",
      "parameters": [
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Mode",
        "Var: Message",
        "Var: Unknown"
      ],
      "description": "Checks the number of seen Pok\u00e9mon in the Johto Pok\u00e9dex (if Mode is 0) or the number of obtained Pok\u00e9mon in the National Pok\u00e9dex (otherwise) and stores the corresponding Professor message in Message, also storing 0x4AA in Unknown"
    },
    "0x00F9": {
      "name": "WildBattle",
      "decomp_name": "rocket_trap_battle",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Level"
      ],
      "description": "Starts a wild battle against a Pok\u00e9mon of level Level"
    },
    "0x00FA": {
      "name": "WildBattleNoButtons",
      "decomp_name": "scrcmd_250",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Level"
      ],
      "description": "Starts a first wild battle against a Pok\u00e9mon of level Level"
    },
    "0x00FB": {
      "name": "CatchTutorial",
      "decomp_name": "catching_tutorial",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Starts the catch tutorial battle"
    },
    "0x00FC": {
      "name": "CMD_252",
      "decomp_name": "scrcmd_252",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x00FD": {
      "name": "CheckSaveGame",
      "decomp_name": "get_save_file_state",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if a different savegame exists and it's not possible to save, stores 1 if no previous savegame exists, stores 2 if game has to save a lot of data and stores 3 if game can perform a quick save"
    },
    "0x00FE": {
      "name": "SaveGame",
      "decomp_name": "step_end",
      "parameters": [
        2
      ],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x00FF": {
      "name": "CheckPortrait",
      "decomp_name": "scrcmd_255",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0100": {
      "name": "SetPortraitTitle",
      "decomp_name": "scrcmd_256",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0101": {
      "name": "CMD_257",
      "decomp_name": "scrcmd_257",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0102": {
      "name": "CMD_258",
      "decomp_name": "scrcmd_258",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0103": {
      "name": "CMD_259",
      "decomp_name": "scrcmd_259",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0104": {
      "name": "CMD_260",
      "decomp_name": "scrcmd_260",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0105": {
      "name": "CMD_261",
      "decomp_name": "scrcmd_261",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0106": {
      "name": "CMD_262",
      "decomp_name": "scrcmd_262",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0107": {
      "name": "CMD_263",
      "decomp_name": "scrcmd_263",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0108": {
      "name": "CMD_264",
      "decomp_name": "scrcmd_264",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0109": {
      "name": "CMD_265",
      "decomp_name": "scrcmd_265",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x010A": {
      "name": "CMD_266",
      "decomp_name": "scrcmd_266",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x010B": {
      "name": "CMD_267",
      "decomp_name": "scrcmd_267",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x010C": {
      "name": "CMD_268",
      "decomp_name": "scrcmd_268",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x010D": {
      "name": "CMD_269",
      "decomp_name": "scrcmd_269",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x010E": {
      "name": "CMD_270",
      "decomp_name": "scrcmd_270",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x010F": {
      "name": "CMD_271",
      "decomp_name": "scrcmd_271",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0110": {
      "name": "CMD_272",
      "decomp_name": "scrcmd_272",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0111": {
      "name": "CMD_273",
      "decomp_name": "scrcmd_273",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0112": {
      "name": "CMD_274",
      "decomp_name": "scrcmd_274",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0113": {
      "name": "MartScreen",
      "decomp_name": "mart_buy",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Unused"
      ],
      "description": "Opens the common mart shopping screen"
    },
    "0x0114": {
      "name": "SpMartScreen",
      "decomp_name": "special_mart_buy",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID mart shopping screen"
    },
    "0x0115": {
      "name": "GoodsMartScreen",
      "decomp_name": "decoration_mart",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID goods mart shopping screen"
    },
    "0x0116": {
      "name": "SealMartScreen",
      "decomp_name": "seal_mart",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID seal mart shopping screen"
    },
    "0x0117": {
      "name": "DummyLostBattle",
      "decomp_name": "overworld_white_out",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Return to Pok\u00e9mon Center or player's house after being defeated"
    },
    "0x0118": {
      "name": "SetLastWarp",
      "decomp_name": "set_spawn",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Warp ID"
      ],
      "description": "Sets the player's last warp as Warp ID. This affects Fly, whiting out, Escape Rope, etc."
    },
    "0x0119": {
      "name": "CheckPlayerGender",
      "decomp_name": "get_player_gender",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if player is male, stores 1 if female"
    },
    "0x011A": {
      "name": "HealPokemon",
      "decomp_name": "heal_party",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Heals every Pok\u00e9mon in the player's party"
    },
    "0x011B": {
      "name": "EndWirelessComms",
      "decomp_name": "scrcmd_283",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x011C": {
      "name": "EnterBattleRoom",
      "decomp_name": "scrcmd_284",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x011D": {
      "name": "SetPlayerDirComm",
      "decomp_name": "scrcmd_285",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x011E": {
      "name": "UnionMapChange",
      "decomp_name": "scrcmd_286",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x011F": {
      "name": "TextUnionRoomTrainerClassOptions",
      "decomp_name": "buffer_union_room_avatar_choices",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Generates the four Union Room Trainer class options based on Trainer ID and gender into String Buffers 0, 1, 2, and 3"
    },
    "0x0120": {
      "name": "CheckUnionRoomTrainerClass",
      "decomp_name": "union_room_avatar_idx_to_trainer_class",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Choice",
        "Var: Variable"
      ],
      "description": "Returns the Trainer class that the player chose for the Union Room to Variable based on the Choice"
    },
    "0x0121": {
      "name": "SetUnionRoomSprite",
      "decomp_name": "scrcmd_289",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Sets the player Trainer class sprite for the Union Room as determined by CheckUnionRoomTrainerSprite"
    },
    "0x0122": {
      "name": "CheckPokedex",
      "decomp_name": "check_pokedex",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the Pok\u00e9dex, stores 0 otherwise"
    },
    "0x0123": {
      "name": "GivePokedex",
      "decomp_name": "give_pokedex",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Gives the Pok\u00e9dex to the player"
    },
    "0x0124": {
      "name": "CheckShoes",
      "decomp_name": "check_running_shoes",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the running shoes, stores 0 otherwise"
    },
    "0x0125": {
      "name": "GiveShoes",
      "decomp_name": "give_running_shoes",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Gives the running shoes to the player"
    },
    "0x0126": {
      "name": "CheckBadge",
      "decomp_name": "check_badge",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Badge ID",
        "Var: Variable"
      ],
      "description": "Checks if player has Badge ID badge, stores result in Variable"
    },
    "0x0127": {
      "name": "GiveBadge",
      "decomp_name": "give_badge",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Badge ID"
      ],
      "description": "Gives the player Badge ID badge"
    },
    "0x0128": {
      "name": "CountBadges",
      "decomp_name": "count_badges",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of badges obtained"
    },
    "0x0129": {
      "name": "DummyCheckBag",
      "decomp_name": "scrcmd_297",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if flag 0x960 is set, stores 0 otherwise"
    },
    "0x012A": {
      "name": "DummyGiveBag",
      "decomp_name": "scrcmd_298",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets flag 0x960"
    },
    "0x012B": {
      "name": "CheckPartner",
      "decomp_name": "check_escort_mode",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the following event flag is activated, stores 0 otherwise"
    },
    "0x012C": {
      "name": "SetPartner",
      "decomp_name": "set_escort_mode",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Activates the following event flag, so you can no longer use the bike, surf, rock climb..."
    },
    "0x012D": {
      "name": "ClearPartner",
      "decomp_name": "clear_escort_mode",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Deactivates the following event flag, so you can use the bike, surf, rock climb... again"
    },
    "0x012E": {
      "name": "CheckStepFlag",
      "decomp_name": "scrcmd_302",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x012F": {
      "name": "SetStepFlag",
      "decomp_name": "scrcmd_303",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0130": {
      "name": "ClearStepFlag",
      "decomp_name": "scrcmd_304",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0131": {
      "name": "DummyCheckGameCompleted",
      "decomp_name": "scrcmd_305",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if flag 0x964 is set, stores 0 otherwise"
    },
    "0x0132": {
      "name": "DummyGameCompleted",
      "decomp_name": "scrcmd_306",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets flag 0x964"
    },
    "0x0133": {
      "name": "DoorAnimation",
      "decomp_name": "scrcmd_307",
      "parameters": [
        2,
        2,
        2,
        2,
        1
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE",
        "VARIABLE",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Matrix X",
        "u16: Matrix Y",
        "Flex: Map X",
        "Flex: Map Y",
        "u8: Door ID"
      ],
      "description": "Prepares a building located at Map X and Map Y coordinates in a map located at Matrix X and Matrix Y in the current matrix for animation, with Door ID animation ID"
    },
    "0x0134": {
      "name": "WaitDoor",
      "decomp_name": "scrcmd_308",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Door ID"
      ],
      "description": "Wait animation of building with Door ID animation ID"
    },
    "0x0135": {
      "name": "FreeDoor",
      "decomp_name": "scrcmd_309",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Door ID"
      ],
      "description": "Free animation of building with Door ID animation ID"
    },
    "0x0136": {
      "name": "OpenDoor",
      "decomp_name": "scrcmd_310",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Door ID"
      ],
      "description": "Triggers first animation of building with Door ID animation ID"
    },
    "0x0137": {
      "name": "CloseDoor",
      "decomp_name": "scrcmd_311",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Door ID"
      ],
      "description": "Triggers second animation of building with Door ID animation ID"
    },
    "0x0138": {
      "name": "GetDaycareNames",
      "decomp_name": "buffer_day_care_mon_nicks",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Stores first daycare Pok\u00e9mon nickname in string buffer 0, the second daycare Pok\u00e9mon nickname in string buffer 1 and the first Pok\u00e9mon trainer's name in buffer 2"
    },
    "0x0139": {
      "name": "GetDaycareStatus",
      "decomp_name": "get_day_care_state",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "If daycare Pok\u00e9mon have an egg, stores 1 in Variable. Otherwise it stores 0 if no Pok\u00e9mon is in the daycare, 2 if only one Pok\u00e9mon is in the daycare or 3 if there are two Pok\u00e9mon"
    },
    "0x013A": {
      "name": "InitEcruteakGym",
      "decomp_name": "ecruteak_gym_init",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x013B": {
      "name": "CMD_315",
      "decomp_name": "scrcmd_315",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "??? Something to do with the Goldenrod Dept. Store Basement, probably moving around blocks or opening access to doors."
    },
    "0x013C": {
      "name": "CMD_316",
      "decomp_name": "scrcmd_316",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "In 953 trainer scripts."
    },
    "0x013D": {
      "name": "CMD_317",
      "decomp_name": "scrcmd_317",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": "In 953 trainer scripts."
    },
    "0x013E": {
      "name": "CianwoodGymInit",
      "decomp_name": "cianwood_gym_init",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x013F": {
      "name": "CianwoodGymTurnWinch",
      "decomp_name": "cianwood_gym_turn_winch",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0140": {
      "name": "VermilionGymInit",
      "decomp_name": "vermilion_gym_init",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0141": {
      "name": "VermillionGymAnimation",
      "decomp_name": "vermilion_gym_lock_action",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0142": {
      "name": "VermillionGymBin",
      "decomp_name": "vermilion_gym_can_check",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0143": {
      "name": "ResetVermilionGymCans",
      "decomp_name": "resample_vermilion_gym_cans",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0144": {
      "name": "InitVioletGym",
      "decomp_name": "violet_gym_init",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Initializes Violet Gym internal data and 3D model animations"
    },
    "0x0145": {
      "name": "VioletGymElevator",
      "decomp_name": "violet_gym_elevator",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Triggers model #111 to move up or down"
    },
    "0x0146": {
      "name": "InitAzaleaGym",
      "decomp_name": "azalea_gym_init",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0147": {
      "name": "AzaleaGym",
      "decomp_name": "azalea_gym_spinarak",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0148": {
      "name": "AzaleaGym2",
      "decomp_name": "azalea_gym_switch",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0149": {
      "name": "BlackthornGymInit",
      "decomp_name": "blackthorn_gym_init",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x014A": {
      "name": "FuchsiaGymInit",
      "decomp_name": "fuchsia_gym_init",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x014B": {
      "name": "ViridianGymInit",
      "decomp_name": "viridian_gym_init",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x014C": {
      "name": "GetPartyCount",
      "decomp_name": "get_party_count",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current number of Pok\u00e9mon in the party"
    },
    "0x014D": {
      "name": "BagScreen",
      "decomp_name": "scrcmd_333",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Bag Pocket"
      ],
      "description": "Opens up the Bag screen with the user only being able to select an item from the specified pocket. WARNING: this command is nonfunctional after opening the Bag -- you will be unable to select anything."
    },
    "0x014E": {
      "name": "BagScreenSelection",
      "decomp_name": "scrcmd_334",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x014F": {
      "name": "CheckPocketItems",
      "decomp_name": "scrcmd_335",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0150": {
      "name": "DummyTextBerry",
      "decomp_name": "buffer_berry_name",
      "parameters": [
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0151": {
      "name": "TextNature?",
      "decomp_name": "buffer_nature_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0152": {
      "name": "SetOWDefaultPosition",
      "decomp_name": "move_person",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Sets Event ID spawn position to global coords X and Y"
    },
    "0x0153": {
      "name": "SetOWPosition",
      "decomp_name": "move_person_facing",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: X",
        "Flex: Z",
        "Flex: Y",
        "Flex: Dir"
      ],
      "description": "Moves Event ID to global coords X, Y, Z with Dir direction"
    },
    "0x0154": {
      "name": "SetOWDefaultMovement",
      "decomp_name": "set_object_movement_type",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: Movement ID"
      ],
      "description": "Sets Event ID's default move code to Movement ID"
    },
    "0x0155": {
      "name": "SetOWDefaultDirection",
      "decomp_name": "set_object_facing",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: Direction ID"
      ],
      "description": "Sets Event ID's default direction to Direction ID"
    },
    "0x0156": {
      "name": "SetWarpPosition",
      "decomp_name": "move_warp",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Warp ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Moves Warp ID to global coords X and Y"
    },
    "0x0157": {
      "name": "SetSpawnablePosition",
      "decomp_name": "move_bg_event",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Spawnable ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Moves Spawnable ID to global coords X and Y"
    },
    "0x0158": {
      "name": "SetOWDirection",
      "decomp_name": "scrcmd_344",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: Direction ID"
      ],
      "description": "Sets Event ID's current direction to Direction ID"
    },
    "0x0159": {
      "name": "AddWaitingIcon",
      "decomp_name": "add_waiting_icon",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x015A": {
      "name": "RemoveWaitingIcon",
      "decomp_name": "remove_waiting_icon",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x015B": {
      "name": "ReturnScriptWkSet",
      "decomp_name": "scrcmd_347",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x015C": {
      "name": "WaitTimeOrAB",
      "decomp_name": "wait_button_or_delay",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Time"
      ],
      "description": "Stops script execution until Time frames have passed or until user presses A or B buttons"
    },
    "0x015D": {
      "name": "ChoosePokemonSelection",
      "decomp_name": "party_select_ui",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens up the UI to select a Pok\u00e9mon from the party"
    },
    "0x015E": {
      "name": "UnionChoosePKMNSelection",
      "decomp_name": "scrcmd_350",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x015F": {
      "name": "GetSelectedPartySlot",
      "decomp_name": "get_party_selection",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the selected party slot in a party Pok\u00e9mon screen, or 0xFF is user cancelled the selection"
    },
    "0x0160": {
      "name": "PokemonSummaryScreen",
      "decomp_name": "pokemon_summary_screen",
      "parameters": [
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Menu",
        "Flex: Party Slot",
        "Flex: Move"
      ],
      "description": "If Menu is 1, open the summary screen on the learn/forget move UI; otherwise, open the Pokemon summary screen"
    },
    "0x0161": {
      "name": "GetMoveSelection",
      "decomp_name": "get_move_selection",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: ???",
        "Var: Variable"
      ],
      "description": "Returns the selected move slot to Variable. Returns 4 if the player cancels"
    },
    "0x0162": {
      "name": "GetPartyPokemonID",
      "decomp_name": "get_partymon_species",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Party Position",
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the Pok\u00e9mon at Party Position"
    },
    "0x0163": {
      "name": "CheckTradedPokemon",
      "decomp_name": "partymon_is_mine",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Party Position",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if trainer ID and secret ID of the Pok\u00e9mon at Party Position are the player's ones, stores 1 otherwise"
    },
    "0x0164": {
      "name": "CountPartyBornPokemon",
      "decomp_name": "party_count_not_egg",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of Pok\u00e9mon in the Pok\u00e9mon party, excluding the eggs"
    },
    "0x0165": {
      "name": "CountAlivePokemonExceptFirst",
      "decomp_name": "count_alive_mons",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable how many alive Pok\u00e9mon are in the party, except for the chosen Party Position"
    },
    "0x0166": {
      "name": "CountTotalAlivePokemon",
      "decomp_name": "count_alive_mons_and_pc",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of Pok\u00e9mon in the Pok\u00e9mon party and PC boxes, excluding the eggs and fainted Pok\u00e9mon"
    },
    "0x0167": {
      "name": "CountPartyEggs",
      "decomp_name": "party_count_egg",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of eggs in the Pok\u00e9mon party"
    },
    "0x0168": {
      "name": "TakeMoneyFlex",
      "decomp_name": "submoneyvar",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Money"
      ],
      "description": "Subtracts Money from the player's money"
    },
    "0x0169": {
      "name": "RetrieveDayCareMon",
      "decomp_name": "retrieve_day_care_mon",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x016A": {
      "name": "GiveLoanPokemon",
      "decomp_name": "give_loan_mon",
      "parameters": [
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: Pok\u00e9mon",
        "u8: Level",
        "u16: Header"
      ],
      "description": "Gives you Pok\u00e9mon at Level with Header name on the summary screen. Used for NPC-given Pok\u00e9mon"
    },
    "0x016B": {
      "name": "CheckReturnLoanPokemon",
      "decomp_name": "check_return_loan_mon",
      "parameters": [
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x016C": {
      "name": "DeletePartyPokemon",
      "decomp_name": "return_loan_mon",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Deletes the Pok\u00e9mon at Party Position from the party"
    },
    "0x016D": {
      "name": "RemoveDayCareEgg",
      "decomp_name": "reset_day_care_egg",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x016E": {
      "name": "GiveDayCareEgg",
      "decomp_name": "give_day_care_egg",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x016F": {
      "name": "TextDayCareCost",
      "decomp_name": "buffer_day_care_withdraw_cost",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0170": {
      "name": "CompareMoneyFlex",
      "decomp_name": "hasenoughmoneyvar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Money"
      ],
      "description": "Returns 1 to Variable if the player has Money or more money, returns 0 otherwise"
    },
    "0x0171": {
      "name": "EggHatchScreen",
      "decomp_name": "egg_hatch_anim",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the egg hatching screen with an egg in the Pok\u00e9mon party that has 0 steps left for hatching"
    },
    "0x0172": {
      "name": "CMD_370",
      "decomp_name": "scrcmd_370",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0173": {
      "name": "CheckDaycareLevelGain",
      "decomp_name": "buffer_day_care_mon_growth",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Position"
      ],
      "description": "Stores the amount of levels a Pok\u00e9mon in the Daycare has gained from being in the Daycare"
    },
    "0x0174": {
      "name": "GetDayCareSpeciesandNick",
      "decomp_name": "get_tail_day_care_mon_species_and_nick",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0175": {
      "name": "GiveDayCareMon",
      "decomp_name": "put_mon_in_day_care",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0176": {
      "name": "UnvanishOverworld",
      "decomp_name": "scrcmd_374",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID"
      ],
      "description": "Makes Event ID visible again if it was invisible"
    },
    "0x0177": {
      "name": "VanishOverworld",
      "decomp_name": "make_object_visible",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID"
      ],
      "description": "Makes Event ID invisible, but still collisionable"
    },
    "0x0178": {
      "name": "MailScreen",
      "decomp_name": "scrcmd_376",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the mail screen"
    },
    "0x0179": {
      "name": "CountMail",
      "decomp_name": "scrcmd_377",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of mails in the mailbox"
    },
    "0x017A": {
      "name": "RankingView",
      "decomp_name": "view_rankings",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x017B": {
      "name": "GetTimePeriod",
      "decomp_name": "scrcmd_379",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current time period of the day"
    },
    "0x017C": {
      "name": "GetRandom",
      "decomp_name": "random",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Range"
      ],
      "description": "Generates a random number between 0 and Range - 1, and stores it in Variable"
    },
    "0x017D": {
      "name": "DummyGetRandom",
      "decomp_name": "scrcmd_381",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Range"
      ],
      "description": "Generates a random number between 0 and Range - 1, and stores it in Variable"
    },
    "0x017E": {
      "name": "GetPokemonHappiness",
      "decomp_name": "mon_get_friendship",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the happiness of Pok\u00e9mon in Party Position"
    },
    "0x017F": {
      "name": "AddHappiness",
      "decomp_name": "mon_add_friendship",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Happiness",
        "Flex: Party Position"
      ],
      "description": "Adds Happiness to the happiness of Pok\u00e9mon in Party Position"
    },
    "0x0180": {
      "name": "SubHappiness",
      "decomp_name": "mon_subtract_friendship",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Happiness",
        "Flex: Party Position"
      ],
      "description": "Subs Happiness to the happiness of Pok\u00e9mon in Party Position"
    },
    "0x0181": {
      "name": "TextDaycareMonData",
      "decomp_name": "buffer_day_care_mon_stats",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0182": {
      "name": "GetPlayerDirection",
      "decomp_name": "get_player_facing",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the direction the player is looking at"
    },
    "0x0183": {
      "name": "GetDayCareMonCompatibility",
      "decomp_name": "get_day_care_compatibility",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0184": {
      "name": "CheckDayCareEgg",
      "decomp_name": "check_day_care_egg",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0185": {
      "name": "CheckBornPokemonInParty",
      "decomp_name": "player_has_species",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Variable",
        "Var: Pok\u00e9mon"
      ],
      "description": "Stores 1 in Variable if Pok\u00e9mon is currently in the Pok\u00e9mon party, stores 0 otherwise"
    },
    "0x0186": {
      "name": "ComparePokemonPlayerSize",
      "decomp_name": "size_record_compare",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores 0 in Variable if Pok\u00e9mon at Party Position does not have a bigger relative size than player's record, stores 1 if it's the same size and stores 2 if it has a bigger relative size"
    },
    "0x0187": {
      "name": "SetPokemonSizeRecord",
      "decomp_name": "size_record_update",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Stores the relative size of Pok\u00e9mon at Party Position as player's record"
    },
    "0x0188": {
      "name": "TextPartyPokemonSize",
      "decomp_name": "buffer_mon_size",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Integer String Buffer",
        "Flex: Decimal String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the integer part of Pok\u00e9mon at Party Position size in Integer String Buffer (1 to 3 digits) and the decimal part of the size in Decimal String Buffer (1 digit)"
    },
    "0x0189": {
      "name": "TextPokemonRecordSize",
      "decomp_name": "buffer_record_size",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Integer String Buffer",
        "Flex: Decimal String Buffer",
        "Flex: Pok\u00e9mon ID"
      ],
      "description": "Stores the integer part of player's record size, normalized to Pok\u00e9mon ID range, in Integer String Buffer (1 to 3 digits) and the decimal part of the size in Decimal String Buffer (1 digit)"
    },
    "0x018A": {
      "name": "CMD_394",
      "decomp_name": "scrcmd_394",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x018B": {
      "name": "CMD_395",
      "decomp_name": "scrcmd_395",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x018C": {
      "name": "GetMoveCount",
      "decomp_name": "count_mon_moves",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the total amount of moves that the Pok\u00e9mon at Party Position currently has"
    },
    "0x018D": {
      "name": "DeleteMove",
      "decomp_name": "mon_forget_move",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Deletes the move in Move Slot from the Pok\u00e9mon at Party Position"
    },
    "0x018E": {
      "name": "GetPartyPokemonMove",
      "decomp_name": "mon_get_move",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Stores in Variable the ID of the move in Move Slot from the Pok\u00e9mon at Party Position"
    },
    "0x018F": {
      "name": "TextPartyPokemonMove",
      "decomp_name": "buffer_party_mon_move_name",
      "parameters": [
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Stores the name of the move in Move Slot from the Pok\u00e9mon at Party Position in String Buffer"
    },
    "0x0190": {
      "name": "Strength",
      "decomp_name": "strength_flag_action",
      "parameters": [
        255,
        1,
        0,
        0,
        1,
        2
      ],
      "parameter_types": [],
      "parameter_values": [
        "Command format depends on the first parameter:\nu8: 0\nu8: 1\nu8: 2",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n0: Disables Strength so player can no longer move boulders\n1: Allows the player to automatically move Strength boulders\n2: Checks if Strength is activated, store answer in Variable"
    },
    "0x0191": {
      "name": "Flash",
      "decomp_name": "flash_action",
      "parameters": [
        255,
        1,
        0,
        0,
        1,
        2
      ],
      "parameter_types": [],
      "parameter_values": [
        "Command format depends on the first parameter:\n u8: 0\n u8: 1\n u8: 2",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n 0: Clears the Flash system flag\n 1: Sets the Flash system flag\n 2: Checks if Flash is activated, store answer in Variable"
    },
    "0x0192": {
      "name": "DefogAction",
      "decomp_name": "defog_action",
      "parameters": [
        255,
        1,
        0,
        0,
        1,
        2
      ],
      "parameter_types": [],
      "parameter_values": [
        "Command format depends on the first parameter:\n u8: 0\n u8: 1\n u8: 2",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n 0: Clears the Defog system flag\n 1: Sets the Defog system flag\n 2: Checks if Defog is activated, store answer in Variable"
    },
    "0x0193": {
      "name": "GiveAccessory",
      "decomp_name": "scrcmd_403",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0194": {
      "name": "CheckGivenAccessory",
      "decomp_name": "scrcmd_404",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0195": {
      "name": "CheckAccessory",
      "decomp_name": "scrcmd_405",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0196": {
      "name": "GiveDressupBackground",
      "decomp_name": "scrcmd_406",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Background"
      ],
      "description": ""
    },
    "0x0197": {
      "name": "CheckBGAccessory",
      "decomp_name": "scrcmd_407",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0198": {
      "name": "CMD_408",
      "decomp_name": "scrcmd_408",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0199": {
      "name": "CMD_409",
      "decomp_name": "scrcmd_409",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x019A": {
      "name": "CMD_410",
      "decomp_name": "scrcmd_410",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x019B": {
      "name": "CMD_411",
      "decomp_name": "scrcmd_411",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x019C": {
      "name": "CMD_412",
      "decomp_name": "scrcmd_412",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x019D": {
      "name": "CMD_413",
      "decomp_name": "scrcmd_413",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x019E": {
      "name": "CMD_414",
      "decomp_name": "scrcmd_414",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x019F": {
      "name": "CMD_415",
      "decomp_name": "scrcmd_415",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01A0": {
      "name": "CMD_416",
      "decomp_name": "scrcmd_416",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01A1": {
      "name": "CMD_417",
      "decomp_name": "scrcmd_417",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01A2": {
      "name": "CMD_418",
      "decomp_name": "scrcmd_418",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01A3": {
      "name": "CMD_419",
      "decomp_name": "scrcmd_419",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01A4": {
      "name": "CMD_420",
      "decomp_name": "scrcmd_420",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01A5": {
      "name": "CMD_421",
      "decomp_name": "scrcmd_421",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01A6": {
      "name": "CMD_422",
      "decomp_name": "scrcmd_422",
      "parameters": [
        2,
        2,
        2,
        1
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01A7": {
      "name": "CheckCompleteJohtoDex",
      "decomp_name": "check_johto_dex_complete",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if every Pok\u00e9mon in the Johto Pok\u00e9dex has been seen, stores 0 otherwise"
    },
    "0x01A8": {
      "name": "CheckCompleteNationalDex",
      "decomp_name": "check_national_dex_complete",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if every Pok\u00e9mon in the National Pok\u00e9dex has been caught, stores 0 otherwise"
    },
    "0x01A9": {
      "name": "OpenPokedexScreen",
      "decomp_name": "show_certificate",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01AA": {
      "name": "CheckPokemonMail",
      "decomp_name": "kenya_check",
      "parameters": [
        2,
        2,
        1
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01AB": {
      "name": "CMD_427",
      "decomp_name": "scrcmd_427",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01AC": {
      "name": "TakePokemonMail",
      "decomp_name": "mon_give_mail",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01AD": {
      "name": "GetFossilCount",
      "decomp_name": "countfossils",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of fossils in the bag"
    },
    "0x01AE": {
      "name": "PreparePokeGearCall",
      "decomp_name": "set_phone_call",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Caller ID",
        "Var: ???",
        "Var: ??? *"
      ],
      "description": ""
    },
    "0x01AF": {
      "name": "StartPokeGearCall",
      "decomp_name": "run_phone_call",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Starts the Pok\u00e9Gear phone call that was previously set."
    },
    "0x01B0": {
      "name": "GetPokeNameFromFossil",
      "decomp_name": "getfossilpokemon",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Item ID"
      ],
      "description": "Stores in Variable the ID of the Pok\u00e9mon to which Item ID fossil belongs"
    },
    "0x01B1": {
      "name": "CheckFossil",
      "decomp_name": "getfossilminimumamount",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Position",
        "Var: Item ID",
        "Flex: Amount"
      ],
      "description": "Stores in Item ID the ID of the first fossil item in the bag that the player has at least Amount quantity of, and stores in Position the amount of fossils in the bag before the first fossil that met the quantity condition"
    },
    "0x01B2": {
      "name": "CountPokemonUnderLevel",
      "decomp_name": "party_count_mons_at_or_below_level",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Level"
      ],
      "description": "Stores in Variable the amount of Pok\u00e9mon in party whose level is equal or lower than Level"
    },
    "0x01B3": {
      "name": "SurvivePoison",
      "decomp_name": "survive_poisoning",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "If Pok\u00e9mon at Party Position is poisoned and at 1 HP, it cures the poison and stores 1 in Variable, otherwise it stores 0"
    },
    "0x01B4": {
      "name": "FinishOverworldScreen",
      "decomp_name": "scrcmd_436",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x01B5": {
      "name": "DummyGetVar",
      "decomp_name": "debugwatch",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01B6": {
      "name": "GetCommonMessageArchive",
      "decomp_name": "get_std_msg_naix",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Archive Number",
        "Var: Result"
      ],
      "description": "If Archive Number exists in the array, return the number of the text archive in Result; otherwise, return 0. E.g.: in Cameron the Photographer scripts, ``GetCommonMessageArchive 2 0x800C`` is used, then followed up with ``MessageFromArchive 0x800C X``; the 2 refers to the entry in the array in the Notes to the right of this box, and because number 2 is text archive 30 in the array, the command returns 30 to 0x800C. It then loads text archive 30 and displays message X when followed by the ``MessageFromArchive 0x800C X``"
    },
    "0x01B7": {
      "name": "CMD_439",
      "decomp_name": "non_npc_msg_extern",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01B8": {
      "name": "MessageFromArchive",
      "decomp_name": "msgbox_extern",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Archive Number, Flex: Message ID"
      ],
      "description": "Loads Message ID in text archive Archive Number"
    },
    "0x01B9": {
      "name": "CMD_441",
      "decomp_name": "scrcmd_441",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01BA": {
      "name": "CMD_442",
      "decomp_name": "scrcmd_442",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01BB": {
      "name": "CMD_443",
      "decomp_name": "scrcmd_443",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01BC": {
      "name": "CMD_444",
      "decomp_name": "scrcmd_444",
      "parameters": [
        1,
        2,
        2,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01BD": {
      "name": "GetPreviousHeaderID",
      "decomp_name": "scrcmd_445",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the header ID of the previous accessed map"
    },
    "0x01BE": {
      "name": "GetCurrentHeaderID",
      "decomp_name": "scrcmd_446",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the header ID of the map the player is currently on"
    },
    "0x01BF": {
      "name": "SetSafariFlag",
      "decomp_name": "safari_zone_action",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Flag",
        "u8: Mode"
      ],
      "description": "If Flag is 0 safari encounters are activated, if Flag is 1 safari encounters are deactivated, being the own safari encounters if Mode is 0 or using the Safari Zone link if 1"
    },
    "0x01C0": {
      "name": "BattleRoomWarp",
      "decomp_name": "scrcmd_448",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01C1": {
      "name": "ExitBattleRoom",
      "decomp_name": "scrcmd_449",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x01C2": {
      "name": "GeonetScreen",
      "decomp_name": "scrcmd_450",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the Geonet screen"
    },
    "0x01C3": {
      "name": "CMD_451",
      "decomp_name": "scrcmd_451",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01C4": {
      "name": "ShowPokemonPic",
      "decomp_name": "scrcmd_452",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Gender"
      ],
      "description": "Opens a window with the picture of Pok\u00e9mon with Gender gender and registers the Pok\u00e9mon in the Pok\u00e9dex as seen"
    },
    "0x01C5": {
      "name": "HidePokemonPic",
      "decomp_name": "scrcmd_453",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Hides the window of a Pok\u00e9mon picture"
    },
    "0x01C6": {
      "name": "CMD_454",
      "decomp_name": "scrcmd_454",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x01C7": {
      "name": "CMD_455",
      "decomp_name": "scrcmd_455",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x01C8": {
      "name": "CMD_456",
      "decomp_name": "scrcmd_456",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01C9": {
      "name": "GetPokemonNature",
      "decomp_name": "mon_get_nature",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": ""
    },
    "0x01CA": {
      "name": "CheckPartyNature",
      "decomp_name": "get_party_slot_with_nature",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Nature ID"
      ],
      "description": ""
    },
    "0x01CB": {
      "name": "CMD_459",
      "decomp_name": "scrcmd_459",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x01CC": {
      "name": "LoadPokegearData",
      "decomp_name": "load_phone_dat",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01CD": {
      "name": "SetRebattleTrainerID",
      "decomp_name": "get_phone_contact_msg_ids",
      "parameters": [
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01CE": {
      "name": "DisablePokegearRematch",
      "decomp_name": "scrcmd_462",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Phone Contact"
      ],
      "description": "The Trainer will no longer seek a rematch until the criteria for rematching them is fulfilled again"
    },
    "0x01CF": {
      "name": "EnableMassOutbreaks",
      "decomp_name": "enable_mass_outbreaks",
      "parameters": [
        255,
        1,
        0,
        0,
        1,
        0,
        2,
        1,
        2
      ],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x01D0": {
      "name": "AddRoamingPokemon",
      "decomp_name": "create_roamer",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ID"
      ],
      "description": "Activates a roaming Pok\u00e9mon depending on the ID"
    },
    "0x01D1": {
      "name": "UnionGroup",
      "decomp_name": "scrcmd_465",
      "parameters": [
        255,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        1,
        2,
        1,
        2,
        0,
        1,
        2
      ],
      "parameter_types": [],
      "parameter_values": [
        "Command format depends on the first parameter:\nu16: 0",
        "Flex: ID",
        "Var: Variable\nu16: 1",
        "Flex: ID",
        "Var: Variable\nu16: 2",
        "Flex: ID",
        "Flex: String Buffer\nu16: 3",
        "Flex: ID",
        "Flex: String Buffer\nu16: 4",
        "Var: Variable\nu16: 5",
        "Flex: ID\nu16: 6\nu16: 7",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n0: Checks if group ID exists, returns answer in Variable\n1: Checks if group ID is accesible, returns answer in Variable\n2: Writes group ID name in String Buffer\n3: Writes leader's name of Group ID in String Buffer\n4: Opens keyboard, stores 1 in Variable if user cancels, 2 if group name already exists, 0 otherwise\n5: Enter in group ID\n6: Creates a group\n7: ???"
    },
    "0x01D2": {
      "name": "CheckHasLearnableMoves",
      "decomp_name": "scrcmd_466",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Slot"
      ],
      "description": "Returns 0 to Var if the Pok\u00e9mon has no learnable moves in its learnset at that level."
    },
    "0x01D3": {
      "name": "RememberMoveScreen",
      "decomp_name": "move_relearner_init",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01D4": {
      "name": "TeachMovesScreen",
      "decomp_name": "move_tutor_init",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01D5": {
      "name": "ResponseTeachMove",
      "decomp_name": "move_relearner_get_result",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01D6": {
      "name": "InitTrade",
      "decomp_name": "load_npc_trade",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Trade ID"
      ],
      "description": "Initializes Trade ID trade data"
    },
    "0x01D7": {
      "name": "GetOfferedPokemon",
      "decomp_name": "get_offered_species",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the offered Pok\u00e9mon of the current trade data"
    },
    "0x01D8": {
      "name": "GetRequestedPokemon",
      "decomp_name": "npc_trade_get_req_species",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the requested Pok\u00e9mon of the current trade data"
    },
    "0x01D9": {
      "name": "TradePokemonScreen",
      "decomp_name": "npc_trade_exec",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Opens the trade Pok\u00e9mon screen, giving the Pok\u00e9mon at Party Position and receiving the offered Pok\u00e9mon of the current trade data"
    },
    "0x01DA": {
      "name": "EndTrade",
      "decomp_name": "npc_trade_end",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Frees the current trade data from the memory"
    },
    "0x01DB": {
      "name": "DummyInternationalDex",
      "decomp_name": "scrcmd_475",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x01DC": {
      "name": "DummyDimorphismDex",
      "decomp_name": "scrcmd_476",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x01DD": {
      "name": "NationalDex",
      "decomp_name": "nat_dex_flag_action",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "Command format depends on the first parameter:\nu8: 1",
        "Var: Unused\nu8: 2",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n1: Activates the National Pok\u00e9dex mode\n2: Stores 1 in Variable if player has the National Pok\u00e9dex, otherwise it stores 0"
    },
    "0x01DE": {
      "name": "PokemonRibbonCount",
      "decomp_name": "mon_get_ribbon_count",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the amount of ribbons that the Pok\u00e9mon in Party Position has"
    },
    "0x01DF": {
      "name": "PartyRibbonCount",
      "decomp_name": "party_get_ribbon_count",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total amount of different ribbons in the current Pok\u00e9mon party"
    },
    "0x01E0": {
      "name": "CheckRibbon",
      "decomp_name": "mon_has_ribbon",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position",
        "Flex: Ribbon"
      ],
      "description": "Stores 1 in Variable if the Pok\u00e9mon in Party Position has the Ribbon ribbon, stores 0 otherwise"
    },
    "0x01E1": {
      "name": "GiveRibbon",
      "decomp_name": "give_ribbon",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Ribbon"
      ],
      "description": "Gives the Ribbon ribbon to Pok\u00e9mon in Party Position"
    },
    "0x01E2": {
      "name": "TextRibbon",
      "decomp_name": "buffer_ribbon_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Ribbon"
      ],
      "description": "Stores the name of the Ribbon in String Buffer"
    },
    "0x01E3": {
      "name": "CountPokemonEVs",
      "decomp_name": "get_ev_total",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the total amount of effort values of Pok\u00e9mon in Party Position"
    },
    "0x01E4": {
      "name": "GetDayOfWeek",
      "decomp_name": "get_weekday",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current day of the week"
    },
    "0x01E5": {
      "name": "ShowRulesList",
      "decomp_name": "scrcmd_485",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "???"
    },
    "0x01E6": {
      "name": "DummyGetPokemonFootprint",
      "decomp_name": "dummy_486",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x01E7": {
      "name": "PCHealAnimation",
      "decomp_name": "pokecen_anim",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9Balls"
      ],
      "description": "Triggers the Pok\u00e9mon Center healing animation with Pok\u00e9Balls number of player's Pok\u00e9mon"
    },
    "0x01E8": {
      "name": "ElevatorAnimation",
      "decomp_name": "elevator_anim",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Direction",
        "Flex: Count"
      ],
      "description": "Triggers the animation of building #208 down (if Direction is 0) or up (if Direction is 1) Count consecutive times"
    },
    "0x01E9": {
      "name": "MysteryGiftGive",
      "decomp_name": "mystery_gift",
      "parameters": [
        255,
        2,
        0,
        1,
        2,
        1,
        2,
        1,
        2,
        0,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0
      ],
      "parameter_types": [],
      "parameter_values": [
        "Command format depends on the first parameter:\nu16: 0\nu16: 1",
        "Var: Variable\nu16: 2",
        "Var: Variable\nu16: 3",
        "Var: Variable\nu16: 4\nu16: 5",
        "Var: Text File",
        "Var: Text Line\nu16: 6",
        "Var: Text File",
        "Var: Text Line\nu16: 7\nu16: 8"
      ],
      "description": "Function depends on the first parameter:\n0: Initializes the data for receiving a Mystery Gift\n1: Checks if there is a Mystery Gift, stores answer in Variable\n2: Stores the Mystery Gift ID in Variable\n3: Checks if player can receive the Mystery Gift, stores answer in Variable\n4: Gives the Mystery Gift to the player\n5: Shows the succeed text at Text File file and Text Line slot\n6: Shows the unable text at Text File file and Text Line slot\n7: Ends the Mystery Gift process\n8: Saves data and ends the Mystery Gift process"
    },
    "0x01EA": {
      "name": "CMD_490",
      "decomp_name": "nop_var_490",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01EB": {
      "name": "CMD_491",
      "decomp_name": "scrcmd_491",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01EC": {
      "name": "CMD_492",
      "decomp_name": "scrcmd_492",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01ED": {
      "name": "EasyChat",
      "decomp_name": "prompt_easy_chat",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Result",
        "Var: Option 1",
        "Var: Option 2"
      ],
      "description": "Opens up the Easy Chat UI. Returns 0 if Cancel is selected"
    },
    "0x01EE": {
      "name": "CMD_494",
      "decomp_name": "scrcmd_494",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01EF": {
      "name": "CheckVersion",
      "decomp_name": "get_game_version",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Returns 0x7 to Variable if game is HeartGold, 0x8 if SoulSilver"
    },
    "0x01F0": {
      "name": "FirstPokemonInParty",
      "decomp_name": "get_party_lead",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the slot of the first Pok\u00e9mon in the party that is not an egg"
    },
    "0x01F1": {
      "name": "GetPartyPokemonTypes",
      "decomp_name": "get_mon_types",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Type 1",
        "Var: Type 2",
        "Flex: Party position"
      ],
      "description": "Return Type 1 and Type 2 of the Pok\u00e9mon in Party Position in variables"
    },
    "0x01F2": {
      "name": "CheckPrimoPasswordWallpaper",
      "decomp_name": "primo_password_check_1",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Result",
        "Flex: Response 1",
        "Flex: Response 2",
        "Flex: Response 3",
        "Flex: Response 4"
      ],
      "description": "Determines if the given responses for Primo's Easy Chat will give a wallpaper. Returns 255 to Result if ??? and the following command should be used to check for Eggs, or 0 to Result if the bonus wallpapers are already unlocked. Otherwise, give a random bonus wallpaper"
    },
    "0x01F3": {
      "name": "CheckPrimoPasswordEggs",
      "decomp_name": "primo_password_check_2",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Result",
        "Flex: Response 1",
        "Flex: Response 2",
        "Flex: Response 3",
        "Flex: Response 4"
      ],
      "description": ""
    },
    "0x01F4": {
      "name": "PreparePCAnimation",
      "decomp_name": "scrcmd_500",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01F5": {
      "name": "OpenPCAnimation",
      "decomp_name": "scrcmd_501",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01F6": {
      "name": "ClosePCAnimation",
      "decomp_name": "scrcmd_502",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01F7": {
      "name": "GetLottoNumber",
      "decomp_name": "loto_id_get",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores Lotto random number in Variable"
    },
    "0x01F8": {
      "name": "CheckWinLotto",
      "decomp_name": "loto_id_search",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: MatchPos",
        "Var: Digits",
        "Var: PC",
        "Flex: Winning Number"
      ],
      "description": "Takes a Winning Number as input and responds as follows.\nIf no matching Pok\u00e9mon could be found or an error occurs: \nMatchPos: 0; Digits: 0; PC: 0.\n\nFor all other cases:\n\nIf the matching Pok\u00e9mon is in the Player's party, PC will be assigned 0.\nOtherwise, if it's in the Player's Storage System, PC will be assigned 1.\n\nMatchPos stores the zero-based position of the winning Pok\u00e9mon (either as Party pos or Storage System pos, depending on the value of PC).\n\nWhen there's a match, the Digits var is assigned the number of matching digits of the Winning Pok\u00e9mon's PID.\nIn case of multiple matches, priority is always given to the one with the most matching digits."
    },
    "0x01F9": {
      "name": "InitLotto",
      "decomp_name": "loto_id_set",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Generates two random numbers and assigns them to two system lottery variables."
    },
    "0x01FA": {
      "name": "BufferBoxPokemonNick",
      "decomp_name": "bufferboxmonnick",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01FB": {
      "name": "CountPCFreeSpace",
      "decomp_name": "count_pc_empty_space",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the amount of free Pok\u00e9mon slots in PC boxes"
    },
    "0x01FC": {
      "name": "PalParkControl",
      "decomp_name": "palpark_action",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01FD": {
      "name": "PalParkDepositCountCheck",
      "decomp_name": "scrcmd_509",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x01FE": {
      "name": "PalParkBoxPokemonCaught",
      "decomp_name": "scrcmd_510",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x01FF": {
      "name": "PalParkScoreResult",
      "decomp_name": "pal_park_score_get",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0200": {
      "name": "PlayerMovementSavingSet",
      "decomp_name": "player_movement_saving_set",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0201": {
      "name": "PlayerMovementSavingClear",
      "decomp_name": "player_movement_saving_clear",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0202": {
      "name": "HallOfFameAnime",
      "decomp_name": "hall_of_fame_anim",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0203": {
      "name": "AddTrainerScore",
      "decomp_name": "add_special_game_stat",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Score"
      ],
      "description": "Adds Score to the Trainer Score seen on the Trainer Card"
    },
    "0x0204": {
      "name": "TextAccessory",
      "decomp_name": "buffer_fashion_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Accesory"
      ],
      "description": "Stores Accesory's name in String Buffer"
    },
    "0x0205": {
      "name": "CheckPokemonInParty",
      "decomp_name": "scrcmd_517",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Pok\u00e9mon (or its egg) is currently in the Pok\u00e9mon party, stores 0 otherwise"
    },
    "0x0206": {
      "name": "SetDeoxysForm",
      "decomp_name": "scrcmd_518",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Form"
      ],
      "description": "Sets every Deoxys in the Pok\u00e9mon party the Form form"
    },
    "0x0207": {
      "name": "CheckBurmyForms",
      "decomp_name": "scrcmd_519",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of current different Burmy forms in the Pok\u00e9mon party"
    },
    "0x0208": {
      "name": "CMD_520",
      "decomp_name": "scrcmd_520",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x0209": {
      "name": "CMD_521",
      "decomp_name": "scrcmd_521",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x020A": {
      "name": "GetHour",
      "decomp_name": "scrcmd_522",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores current hour from RTC in Variable"
    },
    "0x020B": {
      "name": "ShakeOverworld",
      "decomp_name": "scrcmd_523",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: Count",
        "Flex: Time",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Makes Event ID overworld shake Count times in Time frames, moving X horizontally and Y vertically each shake"
    },
    "0x020C": {
      "name": "BlinkOverworld",
      "decomp_name": "scrcmd_524",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "Flex: ???",
        "Flex: ???",
        "Flex: ???"
      ],
      "description": "???"
    },
    "0x020D": {
      "name": "CheckRegis",
      "decomp_name": "scrcmd_525",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the 3 Regis in the party, stores 0 otherwise"
    },
    "0x020E": {
      "name": "CMD_526",
      "decomp_name": "scrcmd_526",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x020F": {
      "name": "MessageUnown",
      "decomp_name": "scrcmd_527",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Text Slot"
      ],
      "description": "Display line Text Slot from the text file with the Unown font"
    },
    "0x0210": {
      "name": "CheckGBACartidge",
      "decomp_name": "scrcmd_528",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the current GBA cartridge ID in Variable"
    },
    "0x0211": {
      "name": "GetFirstAlivePokemonSlot",
      "decomp_name": "get_party_lead_alive",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the slot of the first Pok\u00e9mon in the party that is not an egg nor is fainted"
    },
    "0x0212": {
      "name": "SetMatrixAlternativeMap",
      "decomp_name": "scrcmd_530",
      "parameters": [
        2,
        1
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "Flex: Alternative ID",
        "u8: Status"
      ],
      "description": "Permanently changes a worldmap matrix cell corresponding to Alternative ID if Status is 1, reverts the change if 0"
    },
    "0x0213": {
      "name": "TextBackgroundName",
      "decomp_name": "buffer_background_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0214": {
      "name": "CheckCoinsImmediate",
      "decomp_name": "check_coins_immediate",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0215": {
      "name": "CheckCoins",
      "decomp_name": "checkgivecoins",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0216": {
      "name": "AddCoins",
      "decomp_name": "scrcmd_534",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0217": {
      "name": "GetPokemonLevel",
      "decomp_name": "mon_get_level",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Result",
        "Flex: Party Slot"
      ],
      "description": "Stores into Result the level of the Pok\u00e9mon at a given Party Slot."
    },
    "0x0218": {
      "name": "CMD_536",
      "decomp_name": "scrcmd_536",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0219": {
      "name": "CMD_537",
      "decomp_name": "scrcmd_537",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x021A": {
      "name": "CMD_538",
      "decomp_name": "scrcmd_538",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x021B": {
      "name": "CMD_539",
      "decomp_name": "scrcmd_539",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x021C": {
      "name": "CMD_540",
      "decomp_name": "scrcmd_540",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x021D": {
      "name": "TextNumberSp",
      "decomp_name": "buffer_int_ex",
      "parameters": [
        1,
        2,
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Number",
        "u8: Alignment Type",
        "u8: Digits"
      ],
      "description": "Stores a Number in String Buffer with Alignment Type alignment and Digits length"
    },
    "0x021E": {
      "name": "MonGetContestValue",
      "decomp_name": "mon_get_contest_value",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x021F": {
      "name": "CheckBirthday",
      "decomp_name": "scrcmd_543",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the current day is the player's birthday, stores 0 otherwise"
    },
    "0x0220": {
      "name": "MusicVolumeSet",
      "decomp_name": "scrcmd_544",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Music ID",
        "Flex: Volume"
      ],
      "description": "Identifies the BGM Player which is playing Music ID and sets its Volume"
    },
    "0x0221": {
      "name": "CountSeenUnown",
      "decomp_name": "scrcmd_545",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of different seen Unown forms"
    },
    "0x0222": {
      "name": "CMD_546",
      "decomp_name": "scrcmd_546",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0223": {
      "name": "CMD_547",
      "decomp_name": "scrcmd_547",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0224": {
      "name": "CMD_548",
      "decomp_name": "scrcmd_548",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0225": {
      "name": "CMD_549",
      "decomp_name": "scrcmd_549",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0226": {
      "name": "CountHallOfFameEntries",
      "decomp_name": "scrcmd_550",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0227": {
      "name": "CMD_551",
      "decomp_name": "scrcmd_551",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0228": {
      "name": "CMD_552",
      "decomp_name": "scrcmd_552",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0229": {
      "name": "CMD_553",
      "decomp_name": "scrcmd_553",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x022A": {
      "name": "CMD_554",
      "decomp_name": "scrcmd_554",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x022B": {
      "name": "CMD_555",
      "decomp_name": "scrcmd_555",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x022C": {
      "name": "TakeBP",
      "decomp_name": "scrcmd_556",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: BP Amount"
      ],
      "description": "Takes BP"
    },
    "0x022D": {
      "name": "CheckBP",
      "decomp_name": "check_battle_points",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: BP Amount",
        "Var: Result"
      ],
      "description": "Returns 0 in Result if you do not have enough battle points"
    },
    "0x022E": {
      "name": "CheckUnionRoomTrainerSprite",
      "decomp_name": "scrcmd_558",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Choice",
        "Var: Variable"
      ],
      "description": "Returns the Trainer sprite corresponding to the Trainer class selection for the Union Room to Variable depending on the Choice."
    },
    "0x022F": {
      "name": "CMD_559",
      "decomp_name": "scrcmd_559",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0230": {
      "name": "HiddenMachineEffect",
      "decomp_name": "scrcmd_560",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Effect",
        "Var: Variable"
      ],
      "description": "Begins the Hidden Machine effect. Variable is set to 1 when the effect is complete."
    },
    "0x0231": {
      "name": "ShakeCamera",
      "decomp_name": "screen_shake",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: X Magnitude",
        "Flex: Y Magnitude",
        "Flex: Count",
        "Flex: Time"
      ],
      "description": "Shakes the screen vertically and/or horizontally, moving the camera X Magnitude pixels horizontally and Y Magnitude pixels vertically in each shake, with Count total shakes of Time frames each one"
    },
    "0x0232": {
      "name": "Battle2vs2",
      "decomp_name": "multi_battle",
      "parameters": [
        2,
        2,
        2,
        1
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "Flex: Partner Trainer ID",
        "Flex: Trainer 1 ID",
        "Flex: Trainer 2 ID",
        "u8: ???"
      ],
      "description": "Starts a double battle with Partner Trainer ID versus Trainer 1 ID and Trainer 2 ID"
    },
    "0x0233": {
      "name": "CMD_563",
      "decomp_name": "scrcmd_563",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0234": {
      "name": "CMD_564",
      "decomp_name": "scrcmd_564",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0235": {
      "name": "CMD_565",
      "decomp_name": "scrcmd_565",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???"
      ],
      "description": "???"
    },
    "0x0236": {
      "name": "PartyPokemonTradeScreen",
      "decomp_name": "scrcmd_566",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the party Pok\u00e9mon screen for a trade"
    },
    "0x0237": {
      "name": "GetDPPtPrizeItemIdAndCost",
      "decomp_name": "getdpplprizeitemidandcost",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0238": {
      "name": "CMD_568",
      "decomp_name": "scrcmd_568",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0239": {
      "name": "CMD_569",
      "decomp_name": "scrcmd_569",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x023A": {
      "name": "CheckCoinsVar",
      "decomp_name": "check_coins_var",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x023B": {
      "name": "CMD_571",
      "decomp_name": "scrcmd_571",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x023C": {
      "name": "GetUniqueSealsQuantity",
      "decomp_name": "get_unique_seals_quantity",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x023D": {
      "name": "DummyActivateMysteryGift",
      "decomp_name": "scrcmd_573",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x023E": {
      "name": "GetOWMovement",
      "decomp_name": "scrcmd_574",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Result",
        "Flex: Overworld ID"
      ],
      "description": "Returns Overworld ID's movement ID to Result"
    },
    "0x023F": {
      "name": "CMD_575",
      "decomp_name": "scrcmd_575",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0240": {
      "name": "CMD_576",
      "decomp_name": "scrcmd_576",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0241": {
      "name": "CMD_577",
      "decomp_name": "scrcmd_577",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0242": {
      "name": "CMD_578",
      "decomp_name": "scrcmd_578",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0243": {
      "name": "CMD_579",
      "decomp_name": "scrcmd_579",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0244": {
      "name": "TextSealSingular",
      "decomp_name": "buffer_seal_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Seal ID"
      ],
      "description": "Stores Seal's singular noun in String Buffer"
    },
    "0x0245": {
      "name": "DummyLockAll",
      "decomp_name": "lock_last_talked",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0246": {
      "name": "CMD_582",
      "decomp_name": "scrcmd_582",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0247": {
      "name": "CMD_583",
      "decomp_name": "scrcmd_583",
      "parameters": [
        2,
        1
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0248": {
      "name": "PartyLegalCheck",
      "decomp_name": "party_legal_check",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "var: Result"
      ],
      "description": "Checks legality of party, at least for WIFI stuff. If RESULT is 1, party check failed and you have an \"illegal\" mon"
    },
    "0x0249": {
      "name": "CMD_585",
      "decomp_name": "scrcmd_585",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x024A": {
      "name": "CMD_586",
      "decomp_name": "scrcmd_586",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x024B": {
      "name": "CMD_587",
      "decomp_name": "scrcmd_587",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x024C": {
      "name": "LastBattleCheckCaught",
      "decomp_name": "lati_caught_check",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var ???"
      ],
      "description": ""
    },
    "0x024D": {
      "name": "WildBattleSp",
      "decomp_name": "wild_battle",
      "parameters": [
        2,
        2,
        1
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "INTEGER"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Level",
        "u8: Shiny Flag"
      ],
      "description": "Starts a wild battle against a Pok\u00e9mon of level Level, and shiny if Shiny Flag is 1"
    },
    "0x024E": {
      "name": "CheckTrainerCardLevel",
      "decomp_name": "get_trcard_stars",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current trainer card level"
    },
    "0x024F": {
      "name": "DummyRideBike",
      "decomp_name": "scrcmd_591",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x0250": {
      "name": "CMD_592",
      "decomp_name": "scrcmd_592",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0251": {
      "name": "ShowSaveBox",
      "decomp_name": "show_save_stats",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Displays the save data box (current map name, player's name, the amount of badges, the Pok\u00e9dex counter and the play time)"
    },
    "0x0252": {
      "name": "HideSaveBox",
      "decomp_name": "hide_save_stats",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Hides the save data box"
    },
    "0x0253": {
      "name": "ScopeMode",
      "decomp_name": "scrcmd_595",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Mode"
      ],
      "description": "If Mode is 1, activates the scope mode, otherwise the command deactivates the scope mode"
    },
    "0x0254": {
      "name": "GetFollowingPokeSize",
      "decomp_name": "scrcmd_596",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the current following Pok\u00e9mon is small and can follow the player indoors, stores 1 if it's big and can't follow the player indoors"
    },
    "0x0255": {
      "name": "CMD_597",
      "decomp_name": "scrcmd_597",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x0256": {
      "name": "SwapFollowingPokeAndPlayerPositions",
      "decomp_name": "scrcmd_598",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: ???"
      ],
      "description": "???"
    },
    "0x0257": {
      "name": "FollowingPokePCAnimation",
      "decomp_name": "scrcmd_599",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Triggers the animation of sending the current following Pok\u00e9mon back to its Pok\u00e9Ball over the Pok\u00e9mon Center healing counter"
    },
    "0x0258": {
      "name": "SendBackFollowingPoke",
      "decomp_name": "scrcmd_600",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Triggers the animation of sending the current following Pok\u00e9mon back to its Pok\u00e9Ball and deactivates the following Pok\u00e9mon until the game is reset or a warp is used"
    },
    "0x0259": {
      "name": "FollowingPokeFacePlayer",
      "decomp_name": "follow_mon_face_player",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Makes the invoking event look at the player, but with a size limitation"
    },
    "0x025A": {
      "name": "LockFollowingPoke",
      "decomp_name": "toggle_following_pokemon_movement",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Operation"
      ],
      "description": "Releases the following Pokemon animation if Operation is 0, locks the animation otherwise"
    },
    "0x025B": {
      "name": "WaitFollowingPoke",
      "decomp_name": "wait_following_pokemon_movement",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits the following Pokemon to end its last movement"
    },
    "0x025C": {
      "name": "SetFollowingPokeMovement",
      "decomp_name": "following_pokemon_movement",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Move Code"
      ],
      "description": "Changes the following Pokemon default movement to Move Code"
    },
    "0x025D": {
      "name": "SetFollowingPokePosition",
      "decomp_name": "scrcmd_605",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Position",
        "u8: Direction"
      ],
      "description": "Moves the following Pok\u00e9mon to one tile Position next to player and facing at Direction"
    },
    "0x025E": {
      "name": "BallResetFollowingPoke",
      "decomp_name": "scrcmd_606",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Moves the following Pok\u00e9mon to the current player's position, and triggers the animation of sending the Pok\u00e9mon out of its Pok\u00e9Ball after the player walks a step"
    },
    "0x025F": {
      "name": "NoBallResetFollowingPoke",
      "decomp_name": "scrcmd_607",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Moves the following Pok\u00e9mon to the current player's position"
    },
    "0x0260": {
      "name": "SendOutFollowingPoke",
      "decomp_name": "scrcmd_608",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Triggers the animation of sending the first non-fainted Pok\u00e9mon out of its Pok\u00e9Ball and spawns it on the last player position"
    },
    "0x0261": {
      "name": "MecScript",
      "decomp_name": "scrcmd_609",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x0262": {
      "name": "CMD_610",
      "decomp_name": "scrcmd_610",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0263": {
      "name": "Pokeathlon",
      "decomp_name": "pokeathlon",
      "parameters": [
        1,
        1,
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0264": {
      "name": "CMD_612",
      "decomp_name": "get_npc_trade_unused_flag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0265": {
      "name": "GetPokegearContactRandomGiftBerry",
      "decomp_name": "get_phone_contact_random_gift_berry",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0266": {
      "name": "GetPokegearContactGiftItem",
      "decomp_name": "get_phone_contact_gift_item",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0267": {
      "name": "TakePhoto",
      "decomp_name": "cameron_photo",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Index"
      ],
      "description": ""
    },
    "0x0268": {
      "name": "CMD_616",
      "decomp_name": "count_saved_photos",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0269": {
      "name": "CMD_617",
      "decomp_name": "open_photo_album",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x026A": {
      "name": "CheckAlbumPhoto",
      "decomp_name": "photo_album_is_full",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x026B": {
      "name": "CheckRocketCostume",
      "decomp_name": "rocket_costume_flag_check",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x026C": {
      "name": "ActivateRocketCostume",
      "decomp_name": "rocket_costume_flag_action",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x026D": {
      "name": "UpdateStarterSelectionMachine",
      "decomp_name": "place_starter_balls_in_elms_lab",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [
        "u8: Number of Poke Balls"
      ],
      "description": ""
    },
    "0x026E": {
      "name": "GetOWDirection",
      "decomp_name": "scrcmd_622",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Event ID",
        "Var: Variable"
      ],
      "description": "Stores in Variable the current direction which Event ID is facing"
    },
    "0x026F": {
      "name": "HarvestApricorn",
      "decomp_name": "anim_apricorn_tree",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Returns 0 to Variable if there is no Apricorn on the tree (references 0x800D, aka the last interacted-with object/NPC)"
    },
    "0x0270": {
      "name": "GetApricornColor",
      "decomp_name": "apricorn_tree_get_apricorn",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Returns Apricorn type to Variable based on the pre-defined array of trees in the Notes column. For example, the white Apricorn from Azalea Town would return 6 to Variable. Defaults to 1 for red Apricorn if undefined"
    },
    "0x0271": {
      "name": "GiveApricorn",
      "decomp_name": "give_apricorn_from_tree",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Apricorn",
        "u16: Quantity",
        "Var: Result"
      ],
      "description": "Gives Apricorn of Quantity if current Apricorn count in the box plus Quantity is <= 99. Returns 0 to Var if Apricorn count = 99 to stop the player from obtaining more than 99"
    },
    "0x0272": {
      "name": "TextApricorn",
      "decomp_name": "buffer_apricorn_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Apricorn Name"
      ],
      "description": "Stores Apricorn Name in String Buffer"
    },
    "0x0273": {
      "name": "CMD_627",
      "decomp_name": "scrcmd_627",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0274": {
      "name": "CMD_628",
      "decomp_name": "scrcmd_628",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0275": {
      "name": "CMD_629",
      "decomp_name": "scrcmd_629",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0276": {
      "name": "CMD_630",
      "decomp_name": "scrcmd_630",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0277": {
      "name": "CMD_631",
      "decomp_name": "scrcmd_631",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0278": {
      "name": "CountPartyMonsOfSpecies",
      "decomp_name": "count_party_mons_of_species",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0279": {
      "name": "CMD_633",
      "decomp_name": "scrcmd_633",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x027A": {
      "name": "CMD_634",
      "decomp_name": "scrcmd_634",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x027B": {
      "name": "CMD_635",
      "decomp_name": "scrcmd_635",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x027C": {
      "name": "CMD_636",
      "decomp_name": "scrcmd_636",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x027D": {
      "name": "CMD_637",
      "decomp_name": "scrcmd_637",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x027E": {
      "name": "CMD_638",
      "decomp_name": "scrcmd_638",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x027F": {
      "name": "CMD_639",
      "decomp_name": "scrcmd_639",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0280": {
      "name": "CMD_640",
      "decomp_name": "scrcmd_640",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0281": {
      "name": "SaveWipeExtraChunks",
      "decomp_name": "save_wipe_extra_chunks",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0282": {
      "name": "CMD_642",
      "decomp_name": "scrcmd_642",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "???"
    },
    "0x0283": {
      "name": "CMD_643",
      "decomp_name": "scrcmd_643",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0284": {
      "name": "CMD_644",
      "decomp_name": "scrcmd_644",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0285": {
      "name": "CMD_645",
      "decomp_name": "scrcmd_645",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0286": {
      "name": "CMD_646",
      "decomp_name": "scrcmd_646",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0287": {
      "name": "GetPartySlotWithSpecies",
      "decomp_name": "get_party_slot_with_species",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Slot",
        "u16 or Flex(???): Pokemon ID"
      ],
      "description": "Checks party for the presence of a Pokemon, and returns which slot they are in."
    },
    "0x0288": {
      "name": "CMD_648",
      "decomp_name": "scrcmd_648",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0289": {
      "name": "ScratchOffScreen",
      "decomp_name": "scratch_off_card",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x028A": {
      "name": "ReleaseScriptApp",
      "decomp_name": "scratch_off_card_end",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x028B": {
      "name": "GetScratchCardPrize",
      "decomp_name": "get_scratch_off_prize",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x028C": {
      "name": "GetTutorPageQuantity",
      "decomp_name": "scrcmd_652",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Slot",
        "Flex: Tutor",
        "Var: Variable"
      ],
      "description": "Checks the number of pages to display for the tutors in Frontier Access. Returns 0 if there are no learnable moves, 1 if the number of learnable moves is <= 7, else (((number of learnable moves)/6)+1)"
    },
    "0x028D": {
      "name": "MoveTutorChooseMove",
      "decomp_name": "move_tutor_choose_move",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Slot",
        "Flex: Tutor",
        "Flex: Page",
        "Var: Variable"
      ],
      "description": "Choose a move for the Pok\u00e9mon in Party Slot from Tutor on Page and returns the selected move slot from the list to Variable. Variable equals 0xFFFD if the NEXT button was selected, or 0xFFFE if the player cancels teaching a move"
    },
    "0x028E": {
      "name": "TutorMoveTeachInSlot",
      "decomp_name": "tutor_move_teach_in_slot",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x028F": {
      "name": "TutorMoveGetPrice",
      "decomp_name": "tutor_move_get_price",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Var: Variable"
      ],
      "description": ""
    },
    "0x0290": {
      "name": "CheckHeadbuttCompatibility",
      "decomp_name": "scrcmd_656",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Slot",
        "Var: Variable"
      ],
      "description": "Stores 1 into Variable if the Pok\u00e9mon at the given Party Slot can learn Headbutt."
    },
    "0x0291": {
      "name": "IVCheckerJudge",
      "decomp_name": "stat_judge",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0292": {
      "name": "BufferStatName",
      "decomp_name": "buffer_stat_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0293": {
      "name": "SetMonForme",
      "decomp_name": "set_mon_form",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0294": {
      "name": "TextTrainerName",
      "decomp_name": "buffer_trainer_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0295": {
      "name": "CMD_661",
      "decomp_name": "scrcmd_661",
      "parameters": [
        1,
        4,
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0296": {
      "name": "CMD_662",
      "decomp_name": "scrcmd_662",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0297": {
      "name": "CMD_663",
      "decomp_name": "scrcmd_663",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0298": {
      "name": "CMD_664",
      "decomp_name": "scrcmd_664",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0299": {
      "name": "CMD_665",
      "decomp_name": "scrcmd_665",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x029A": {
      "name": "GetCurrentMusic",
      "decomp_name": "scrcmd_666",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Returns the currently playing BGM to Variable"
    },
    "0x029B": {
      "name": "CMD_667",
      "decomp_name": "scrcmd_667",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x029C": {
      "name": "TextTypeName",
      "decomp_name": "buffer_type_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x029D": {
      "name": "GetItemQuantity",
      "decomp_name": "getitemquantity",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Var: Result"
      ],
      "description": "Returns quantity of Item to Result"
    },
    "0x029E": {
      "name": "GetHiddenPowerType",
      "decomp_name": "get_hidden_power_type",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x029F": {
      "name": "SetFavoriteMon",
      "decomp_name": "set_favorite_mon",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02A0": {
      "name": "GetFavoriteMon",
      "decomp_name": "get_favorite_mon",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02A1": {
      "name": "GetOwnedRotomFormes",
      "decomp_name": "get_owned_rotom_forms",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02A2": {
      "name": "CountTranformedRotomsInParty",
      "decomp_name": "count_transformed_rotoms_in_party",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02A3": {
      "name": "UpdateRotomForme",
      "decomp_name": "update_rotom_form",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02A4": {
      "name": "GetPartyPokemonForm",
      "decomp_name": "get_party_mon_form",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02A5": {
      "name": "CMD_677",
      "decomp_name": "scrcmd_677",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02A6": {
      "name": "CMD_678",
      "decomp_name": "scrcmd_678",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02A7": {
      "name": "CMD_679",
      "decomp_name": "scrcmd_679",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02A8": {
      "name": "CMD_680",
      "decomp_name": "add_special_game_stat_2",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02A9": {
      "name": "CMD_681",
      "decomp_name": "scrcmd_681",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02AA": {
      "name": "CMD_682",
      "decomp_name": "scrcmd_682",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02AB": {
      "name": "GetBattleOutcome",
      "decomp_name": "get_static_encounter_outcome",
      "parameters": [
        2
      ],
      "parameter_types": [],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Checks the outcome of a static encounter, like Mewtwo in Cerulean Cave, and stores the result in Variable"
    },
    "0x02AC": {
      "name": "GetCurrentWeather",
      "decomp_name": "scrcmd_684",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the current weather in Variable"
    },
    "0x02AD": {
      "name": "GetPlayerPositionFull",
      "decomp_name": "get_player_xyz",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02AE": {
      "name": "WildBattleFateful",
      "decomp_name": "scrcmd_686",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02AF": {
      "name": "RegisterSeenPokemon",
      "decomp_name": "scrcmd_687",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02B0": {
      "name": "CheckFatefulEncounter",
      "decomp_name": "get_party_slot_with_fateful_encounter",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02B1": {
      "name": "CommSanitizeParty",
      "decomp_name": "comm_sanitize_party",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02B2": {
      "name": "DayCareSanitizeMon",
      "decomp_name": "day_care_sanitize_mon",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02B3": {
      "name": "CMD_691",
      "decomp_name": "scrcmd_691",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02B4": {
      "name": "TextBattleHallStreak",
      "decomp_name": "buffer_battle_hall_streak",
      "parameters": [
        1,
        1,
        1,
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02B5": {
      "name": "BattleHallCountUsedSpecies",
      "decomp_name": "battle_hall_count_used_species",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02B6": {
      "name": "BattleHallGetTotalStreak",
      "decomp_name": "battle_hall_get_total_streak",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02B7": {
      "name": "CMD_695",
      "decomp_name": "scrcmd_695",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02B8": {
      "name": "CMD_696",
      "decomp_name": "scrcmd_696",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02B9": {
      "name": "CMD_697",
      "decomp_name": "scrcmd_697",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02BA": {
      "name": "FollowingPokemonIsEventTrigger",
      "decomp_name": "follower_poke_is_event_trigger",
      "parameters": [
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Event",
        "Flex: Party Position",
        "Var: Result"
      ],
      "description": "Checks if the Pok\u00e9mon in Party Position matches the criteria for the Event. Stores 1 in Var if true."
    },
    "0x02BB": {
      "name": "CMD_699",
      "decomp_name": "scrcmd_699",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02BC": {
      "name": "CMD_700",
      "decomp_name": "scrcmd_700",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02BD": {
      "name": "PokemonHasItem",
      "decomp_name": "mon_has_item",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02BE": {
      "name": "BattleTowerSetUpMultiBattle",
      "decomp_name": "battle_tower_setup_multi_battle",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02BF": {
      "name": "SetFieldVolume",
      "decomp_name": "set_player_volume",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02C0": {
      "name": "CMD_704",
      "decomp_name": "scrcmd_704",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02C1": {
      "name": "CMD_705",
      "decomp_name": "scrcmd_705",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02C2": {
      "name": "CMD_706",
      "decomp_name": "scrcmd_706",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02C3": {
      "name": "CheckPokemonIsSeen",
      "decomp_name": "check_mon_seen",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02C4": {
      "name": "FloorTrapAnimation",
      "decomp_name": "scrcmd_708",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": "Triggers Team Rocket HQ trap-floor's graphical effect in the player's current position"
    },
    "0x02C5": {
      "name": "CMD_709",
      "decomp_name": "scrcmd_709",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02C6": {
      "name": "CMD_710",
      "decomp_name": "scrcmd_710",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02C7": {
      "name": "TalkFollowingPoke",
      "decomp_name": "follow_mon_interact",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "The following Pok\u00e9mon triggers a random movement, and then a random following message"
    },
    "0x02C8": {
      "name": "CMD_712",
      "decomp_name": "scrcmd_712",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02C9": {
      "name": "OpenAlphaPuzzle",
      "decomp_name": "alph_puzzle",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Puzzle ID"
      ],
      "description": "Loads the stone-panel puzzle of Puzzle ID."
    },
    "0x02CA": {
      "name": "OpenRuinsofAlphHiddenRoom",
      "decomp_name": "open_alph_hidden_room",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Room ID"
      ],
      "description": "Something to do with the secret room, not the puzzle trapdoor."
    },
    "0x02CB": {
      "name": "UpdateDayCareMonOverworlds",
      "decomp_name": "update_day_care_mon_objects",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02CC": {
      "name": "CMD_716",
      "decomp_name": "scrcmd_716",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02CD": {
      "name": "CMD_717",
      "decomp_name": "scrcmd_717",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02CE": {
      "name": "CMD_718",
      "decomp_name": "scrcmd_718",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02CF": {
      "name": "CMD_719",
      "decomp_name": "scrcmd_719",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02D0": {
      "name": "CMD_720",
      "decomp_name": "scrcmd_720",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02D1": {
      "name": "CMD_721",
      "decomp_name": "scrcmd_721",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02D2": {
      "name": "CMD_722",
      "decomp_name": "scrcmd_722",
      "parameters": [
        1,
        1,
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u8: ???",
        "u8: ???",
        "u16: ???",
        "u16: ???",
        "u16: ???"
      ],
      "description": "???"
    },
    "0x02D3": {
      "name": "BoatAnimation",
      "decomp_name": "scrcmd_723",
      "parameters": [
        1,
        1,
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u8: Animation",
        "u8: ???",
        "u16: Header",
        "u16: X coord",
        "u16: Y coord"
      ],
      "description": "Plays the S.S. Aqua animation of leaving the port. Animation is either 0 or 1, with 0 being Olivine and 1 being Vermilion. X and Y coordinates are for the destination map"
    },
    "0x02D4": {
      "name": "CMD_724",
      "decomp_name": "scrcmd_724",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02D5": {
      "name": "CMD_725",
      "decomp_name": "scrcmd_725",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02D6": {
      "name": "CMD_726",
      "decomp_name": "scrcmd_726",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02D7": {
      "name": "GetFollowingPokePartySlot",
      "decomp_name": "get_follow_poke_party_index",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Returns the following Pok\u00e9mon's party slot to Variable. Crashes if there are no alive Pok\u00e9mon in the party"
    },
    "0x02D8": {
      "name": "FollowingPokeFlash",
      "decomp_name": "scrcmd_728",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???",
        "u8: ???"
      ],
      "description": "Makes the following Pok\u00e9mon flash white"
    },
    "0x02D9": {
      "name": "CheckPokemonAlive",
      "decomp_name": "scrcmd_729",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Checks if player has at least 1 not fainted Pok\u00e9mon, stores the result in Variable"
    },
    "0x02DA": {
      "name": "CheckFollowingPoke",
      "decomp_name": "scrcmd_730",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Checks if player has a following Pok\u00e9mon, stores the result in Variable. Returns False if you have a following Pok\u00e9mon"
    },
    "0x02DB": {
      "name": "CMD_731",
      "decomp_name": "scrcmd_731",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x02DC": {
      "name": "AdjustFollowingPokeMood",
      "decomp_name": "scrcmd_732",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "s8: Mood"
      ],
      "description": "Increases or decreases following Pok\u00e9mon mood with a signed 8-bit integer. Maximum values are 127 and -127"
    },
    "0x02DD": {
      "name": "GetBornPokemonPartyPos",
      "decomp_name": "scrcmd_733",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Type",
        "Var: Variable"
      ],
      "description": "Checks if the following Pok\u00e9mon's type matches Type. Returns True if so"
    },
    "0x02DE": {
      "name": "FollowingPokeJump",
      "decomp_name": "scrcmd_734",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Jumps"
      ],
      "description": "Makes the following Pok\u00e9mon jump in place Jumps number of times"
    },
    "0x02DF": {
      "name": "CheckKurtApricorn",
      "decomp_name": "scrcmd_735",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Result"
      ],
      "description": "Checks if Kurt currently has an Apricorn for turning into a ball. If Result is 1, Kurt has an Apricorn already."
    },
    "0x02E0": {
      "name": "ClearKurtApricornData",
      "decomp_name": "clear_kurt_apricorn",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02E1": {
      "name": "GetApricornBallID",
      "decomp_name": "scrcmd_737",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ID"
      ],
      "description": "Gets the ID of the Ball Kurt has made and returns it to Var"
    },
    "0x02E2": {
      "name": "GetApricornCount",
      "decomp_name": "get_total_apricorn_count",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Count"
      ],
      "description": "Returns how many total Apricorns you have to Var"
    },
    "0x02E3": {
      "name": "KurtApricornMenuScreen",
      "decomp_name": "scrcmd_739",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02E4": {
      "name": "StoreApricornJuice",
      "decomp_name": "scrcmd_740",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02E5": {
      "name": "CheckJuice",
      "decomp_name": "scrcmd_741",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02E6": {
      "name": "CMD_742",
      "decomp_name": "scrcmd_742",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02E7": {
      "name": "CMD_743",
      "decomp_name": "scrcmd_743",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02E8": {
      "name": "CreatePokeathlonFriendshipRoomStatues",
      "decomp_name": "create_friendship_room_statues",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02E9": {
      "name": "TextPokeathlonCourseName",
      "decomp_name": "buffer_pokeathlon_course_name",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02EA": {
      "name": "OpenTouchScreen",
      "decomp_name": "touchscreen_menu_hide",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Changes the low screen design to the green Pok\u00e9ball background"
    },
    "0x02EB": {
      "name": "CloseTouchScreen",
      "decomp_name": "touchscreen_menu_show",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets the default low screen design"
    },
    "0x02EC": {
      "name": "YesNoTouchScreen",
      "decomp_name": "getmenuchoice",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Opens a Yes-No selection, stores player's answer in Variable"
    },
    "0x02ED": {
      "name": "MultiTouchStandardText",
      "decomp_name": "menu_init_std_gmm",
      "parameters": [
        1,
        1,
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu with text bank #191, returns selected slot ID in Selection"
    },
    "0x02EE": {
      "name": "MultiTouchLocalText",
      "decomp_name": "menu_init",
      "parameters": [
        1,
        1,
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: Close Status",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu with local texts, returns selected slot ID in Selection. If Close Status is 1, pressing B will automatically select the last option in the list."
    },
    "0x02EF": {
      "name": "CreateMultiTouchBox",
      "decomp_name": "menu_item_add",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Text Slot",
        "Flex: Top Screen Text",
        "Flex: Multi Box Slot"
      ],
      "description": "Adds a box with Multi Box Slot ID showing Text Slot text on the bottom screen and Top Screen Text on the top in a message box. Text depends on whether you use MultiTouchStandardText or MultiTouchLocalText"
    },
    "0x02F0": {
      "name": "CloseMultiTouch",
      "decomp_name": "menu_exec",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Closes the multiple selection boxes"
    },
    "0x02F1": {
      "name": "RockSmashItemCheck",
      "decomp_name": "scrcmd_rock_smash_item_check",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Following Poke Status",
        "Var: Result",
        "Var: Item"
      ],
      "description": "Checks if an item was generated after using Rock Smash. If Following Poke Status is 0, the bonus granted from the following Pok\u00e9mon being present is not granted. If an item is generated, Result equals TRUE. The item is returned to Item"
    },
    "0x02F2": {
      "name": "HeadbuttEncounter",
      "decomp_name": "try_headbutt_encounter",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Tries to generate a Headbutt encounter. If an encounter is generated, Variable is set to TRUE"
    },
    "0x02F3": {
      "name": "CMD_755",
      "decomp_name": "legend_cutscene_clear_bell_anim_begin",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02F4": {
      "name": "CMD_756",
      "decomp_name": "legend_cutscene_clear_bell_anim_end",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02F5": {
      "name": "CMD_757",
      "decomp_name": "legend_cutscene_clear_bell_rise_from_bag",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02F6": {
      "name": "CMD_758",
      "decomp_name": "legend_cutscene_clear_bell_shimmer",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02F7": {
      "name": "CMD_759",
      "decomp_name": "legend_cutscene_lugia_eye_glimmer_effect",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02F8": {
      "name": "CMD_760",
      "decomp_name": "scrcmd_760",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02F9": {
      "name": "CMD_761",
      "decomp_name": "legend_cutscene_move_camera_to",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02FA": {
      "name": "CMD_762",
      "decomp_name": "legend_cutscene_pan_camera_to",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x02FB": {
      "name": "CMD_763",
      "decomp_name": "legend_cutscene_wait_camera_pan",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02FC": {
      "name": "CMD_764",
      "decomp_name": "legend_cutscene_bird_final_approach",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02FD": {
      "name": "CMD_765",
      "decomp_name": "legend_cutscene_waves_or_leaves_effect_begin",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02FE": {
      "name": "CMD_766",
      "decomp_name": "legend_cutscene_waves_or_leaves_effect_end",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x02FF": {
      "name": "CMD_767",
      "decomp_name": "legend_cutscene_lugia_arrives_effect_begin",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x0300": {
      "name": "CMD_768",
      "decomp_name": "legend_cutscene_lugia_arrives_effect_end",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0301": {
      "name": "CMD_769",
      "decomp_name": "legend_cutscene_lugia_arrives_effect_camera_pan",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0302": {
      "name": "CMD_770",
      "decomp_name": "check_seen_all_letter_unown",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0303": {
      "name": "CMD_771",
      "decomp_name": "scrcmd_771",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0304": {
      "name": "CMD_772",
      "decomp_name": "scrcmd_772",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0305": {
      "name": "RenderCutscene",
      "decomp_name": "cinematic",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "???: ???"
      ],
      "description": "Renders a cutscene\n0 = Ho-Oh appearing from the sky\n1 = Lugia bursting out of the waterfall\n2 = Arceus stock image cutscene"
    },
    "0x0306": {
      "name": "ShowLegendaryWing",
      "decomp_name": "show_legendary_wing",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "u16: Wing"
      ],
      "description": "Shows the Rainbow Wing (0) or the Silver Wing (1) above the player"
    },
    "0x0307": {
      "name": "CMD_775",
      "decomp_name": "scrcmd_775",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0308": {
      "name": "GiveTogepiEgg",
      "decomp_name": "give_togepi_egg",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Gives an egg containing a Togepi that knows Extrasensory"
    },
    "0x0309": {
      "name": "CMD_777",
      "decomp_name": "scrcmd_777",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x030A": {
      "name": "GiveSpikyEaredPichu",
      "decomp_name": "give_spiky_ear_pichu",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Gives the player a Pichu in Spiky-Eared form"
    },
    "0x030B": {
      "name": "CheckCurrentRadioSong",
      "decomp_name": "radio_music_is_playing",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Seq",
        "Var: Result"
      ],
      "description": "Stores 1 in Result if the current Seq is playing from the Pok\u00e9gear radio. Stores 0 otherwise."
    },
    "0x030C": {
      "name": "OpenVoltorbFlip",
      "decomp_name": "casino_game",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x030D": {
      "name": "KenyaCheckPartyOrMailbox",
      "decomp_name": "kenya_check_party_or_mailbox",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x030E": {
      "name": "MartSell",
      "decomp_name": "mart_sell",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x030F": {
      "name": "SetFollowingPokeStatus",
      "decomp_name": "set_follow_mon_inhibit_state",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Status"
      ],
      "description": "0 = Following Pok\u00e9mon allowed\n1 = Following Pok\u00e9mon unallowed"
    },
    "0x0310": {
      "name": "OverlayManager",
      "decomp_name": "script_overlay_cmd",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Overlay",
        "u8: Action"
      ],
      "description": "If Action is 0, load an overlay from the list in the Notes column. Otherwise, unload the overlay"
    },
    "0x0311": {
      "name": "BugContestControl",
      "decomp_name": "bug_contest_action",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Action",
        "Flex: Day"
      ],
      "description": "If Action is 0, check to initialize the Bug Catching Contest based on Day. Otherwise, end the Bug Catching Contest"
    },
    "0x0312": {
      "name": "TextBugContestPlacement",
      "decomp_name": "buffer_bug_contest_winner",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Rank"
      ],
      "description": "Stores the name of the person that placed in rank Rank. If the player places at rank Rank, the player's name is stored in string buffer 0. If another Trainer places at rank Rank, the Trainer Class and Trainer name are stored in string buffers 2 and 0 respectively. The obtained Pokemon is stored in string buffer 1, and the score is stored in string buffer 3"
    },
    "0x0313": {
      "name": "BugContestResults",
      "decomp_name": "judge_bug_contest",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Ranking",
        "Flex: Item",
        "Flex: Species"
      ],
      "description": "Generates the results of the Bug Catching Contest"
    },
    "0x0314": {
      "name": "TextBugContestPokeNickname",
      "decomp_name": "buffer_bug_contest_mon_nick",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Var: Variable"
      ],
      "description": "Stores the name of the captured bug from the Bug Catching Contest in String Buffer. Returns 1 to Variable if the party is already full"
    },
    "0x0315": {
      "name": "TextBugContestRemainingTime",
      "decomp_name": "scrcmd_789",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores remaining time in the Bug Catching Contest in String Buffer"
    },
    "0x0316": {
      "name": "CheckBugContestParticipant",
      "decomp_name": "is_npc_bug_contestant_registered",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Participant",
        "Var: Variable"
      ],
      "description": "Checks if the Participant is participating in the Bug Catching Contest. Returns 1 if true to Variable."
    },
    "0x0317": {
      "name": "CMD_791",
      "decomp_name": "scrcmd_791",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0318": {
      "name": "CMD_792",
      "decomp_name": "scrcmd_792",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0319": {
      "name": "TakeMomMoney",
      "decomp_name": "bank_transaction",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x031A": {
      "name": "CheckMomMoneyBalance",
      "decomp_name": "check_bank_balance",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x031B": {
      "name": "ShowMomMoney",
      "decomp_name": "scrcmd_795",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Shows mom savings money box at X and Y coordinates of the screen"
    },
    "0x031C": {
      "name": "HideMomMoney",
      "decomp_name": "scrcmd_796",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Hides mom savings money box"
    },
    "0x031D": {
      "name": "CMD_797",
      "decomp_name": "scrcmd_797",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x031E": {
      "name": "TextRulesetName",
      "decomp_name": "buffer_ruleset_name",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x031F": {
      "name": "CMD_799",
      "decomp_name": "scrcmd_799",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0320": {
      "name": "CMD_800",
      "decomp_name": "scrcmd_800",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0321": {
      "name": "CMD_801",
      "decomp_name": "scrcmd_801",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0322": {
      "name": "CMD_802",
      "decomp_name": "scrcmd_802",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0323": {
      "name": "CMD_803",
      "decomp_name": "scrcmd_803",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0324": {
      "name": "UpdateTownMap",
      "decomp_name": "scrcmd_804",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8(?): Map Type"
      ],
      "description": "Updates the town map to include Kanto\n1 = Normal, Johto-only view\n2 = Whole map, Kanto included"
    },
    "0x0325": {
      "name": "CMD_805",
      "decomp_name": "scrcmd_805",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0326": {
      "name": "CMD_806",
      "decomp_name": "scrcmd_806",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0327": {
      "name": "CMD_807",
      "decomp_name": "set_trainer_house_sprite",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0328": {
      "name": "CMD_808",
      "decomp_name": "scrcmd_808",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0329": {
      "name": "CMD_809",
      "decomp_name": "show_trainer_house_intro_message",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x032A": {
      "name": "CelebiTimeTravelAnimation",
      "decomp_name": "scrcmd_810",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x032B": {
      "name": "CMD_811",
      "decomp_name": "scrcmd_811",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x032C": {
      "name": "CMD_812",
      "decomp_name": "scrcmd_812",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x032D": {
      "name": "CheckMomGift",
      "decomp_name": "mom_gift_check",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Checks if there is currently a gift from Mom to be picked up"
    },
    "0x032E": {
      "name": "CMD_814",
      "decomp_name": "scrcmd_814",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x032F": {
      "name": "CMD_815",
      "decomp_name": "scrcmd_815",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": "u16: ???"
    },
    "0x0330": {
      "name": "UnownCircle",
      "decomp_name": "unown_circle",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0331": {
      "name": "CMD_817",
      "decomp_name": "scrcmd_817",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0332": {
      "name": "InitMystriStageAnimation",
      "decomp_name": "mystry_stage_gymmick_init",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0333": {
      "name": "CMD_819",
      "decomp_name": "scrcmd_819",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0334": {
      "name": "CMD_820",
      "decomp_name": "scrcmd_820",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0335": {
      "name": "GetBuenasPassword",
      "decomp_name": "get_buenas_password",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0336": {
      "name": "CMD_822",
      "decomp_name": "scrcmd_822",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": ""
    },
    "0x0337": {
      "name": "CMD_823",
      "decomp_name": "scrcmd_823",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0338": {
      "name": "CMD_824",
      "decomp_name": "scrcmd_824",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0339": {
      "name": "GetShinyLeafCount",
      "decomp_name": "get_shiny_leaf_count",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x033A": {
      "name": "TryGiveShinyLeafCrown",
      "decomp_name": "try_give_shiny_leaf_crown",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x033B": {
      "name": "CheckPartyPokemonForm",
      "decomp_name": "get_partymon_form",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Slot",
        "Var: Variable"
      ],
      "description": "Checks what form Pok\u00e9mon at Party Slot position has. The variable stores the form ID."
    },
    "0x033C": {
      "name": "CMD_828",
      "decomp_name": "mon_add_contest_value",
      "parameters": [
        2,
        1,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x033D": {
      "name": "CheckFollowingPokeNextToPlayer",
      "decomp_name": "scrcmd_829",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Checks if the following Pok\u00e9mon is next to the player in any direction"
    },
    "0x033E": {
      "name": "CMD_830",
      "decomp_name": "scrcmd_830",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x033F": {
      "name": "CMD_831",
      "decomp_name": "scrcmd_831",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0340": {
      "name": "CMD_832",
      "decomp_name": "scrcmd_832",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0341": {
      "name": "CMD_833",
      "decomp_name": "scrcmd_833",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0342": {
      "name": "CMD_834",
      "decomp_name": "scrcmd_834",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "???"
    },
    "0x0343": {
      "name": "CMD_835",
      "decomp_name": "scrcmd_835",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "???"
    },
    "0x0344": {
      "name": "CheckJadeOrbRequirements",
      "decomp_name": "scrcmd_836",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has both Kyogre and Groudon in the Pok\u00e9mon party and they have been caught in Johto, stores 0 otherwise"
    },
    "0x0345": {
      "name": "CMD_837",
      "decomp_name": "scrcmd_837",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "???"
    },
    "0x0346": {
      "name": "CheckMoneyFull",
      "decomp_name": "bank_or_wallet_is_full",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Money Account",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the chosen money account is full. \nMoney account 0 = Mom's savings;\nMoney account 1 = Player;"
    },
    "0x0347": {
      "name": "SystemSetSleepFlag",
      "decomp_name": "sys_set_sleep_flag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0348": {
      "name": "CMD_840",
      "decomp_name": "ScrCmd_840",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [],
      "description": ""
    },
    "0x0349": {
      "name": "CMD_841",
      "decomp_name": "ScrCmd_841",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???"
      ],
      "description": ""
    },
    "0x034B": {
      "name": "TextItemLowercase",
      "decomp_name": "buffer_item_name_indef",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's lowercase name in String Buffer"
    },
    "0x034C": {
      "name": "TextItemPlural",
      "decomp_name": "buffer_item_name_plural",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's plural noun in String Buffer"
    },
    "0x034D": {
      "name": "TextPartyPokemonDefault",
      "decomp_name": "buffer_party_mon_species_name_indef",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Party position"
      ],
      "description": "Stores the name of the Pok\u00e9mon in Party Position in String Buffer with default color tags encoding"
    },
    "0x034E": {
      "name": "CMD_846",
      "decomp_name": "buffer_species_name_indef",
      "parameters": [
        1,
        2,
        2,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???",
        "Flex: ???",
        "Flex: ???",
        "u8: ???"
      ],
      "description": ""
    },
    "0x0351": {
      "name": "TextTrainerClass",
      "decomp_name": "buffer_trainer_class_name_indef",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Trainer class"
      ],
      "description": "Stores Trainer class' lowercase noun in String Buffer"
    },
    "0x0352": {
      "name": "TextSealPlural",
      "decomp_name": "buffer_seal_name_plural",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Seal"
      ],
      "description": "Stores Seal's plural noun in String Buffer"
    },
    "0x0353": {
      "name": "TextCapitalize",
      "decomp_name": "capitalize",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Capitalizes the string currently stored in String Buffer"
    },
    "0x0354": {
      "name": "TextFloor",
      "decomp_name": "buffer_dept_store_floor_no",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "u8: Floor"
      ],
      "description": "Stores Floor's name in String Buffer"
    }
  }
}