{
  "movements": {
    "0x0000": "LookUp",
    "0x0001": "LookDown",
    "0x0002": "LookLeft",
    "0x0003": "LookRight",
    "0x0004": "WalkUpSlow",
    "0x0005": "WalkDownSlow",
    "0x0006": "WalkLeftSlow",
    "0x0007": "WalkRightSlow",
    "0x0008": "WalkUp",
    "0x0009": "WalkDown",
    "0x000A": "WalkLeft",
    "0x000B": "WalkRight",
    "0x000C": "WalkUpFast",
    "0x000D": "WalkDownFast",
    "0x000E": "WalkLeftFast",
    "0x000F": "WalkRightFast",
    "0x0010": "WalkUpVeryFast",
    "0x0011": "WalkDownVeryFast",
    "0x0012": "WalkLeftVeryFast",
    "0x0013": "WalkRightVeryFast",
    "0x0014": "RunUp",
    "0x0015": "RunDown",
    "0x0016": "RunLeft",
    "0x0017": "RunRight",
    "0x0018": "WalkUpSlowSite",
    "0x0019": "WalkDownSlowSite",
    "0x001A": "WalkLeftSlowSite",
    "0x001B": "WalkRightSlowSite",
    "0x001C": "WalkUpSite",
    "0x001D": "WalkDownSite",
    "0x001E": "WalkLeftSite",
    "0x001F": "WalkRightSite",
    "0x0020": "WalkUpFastSite",
    "0x0021": "WalkDownFastSite",
    "0x0022": "WalkLeftFastSite",
    "0x0023": "WalkRightFastSite",
    "0x0024": "WalkUpVeryFastSite",
    "0x0025": "WalkDownVeryFastSite",
    "0x0026": "WalkLeftVeryFastSite",
    "0x0027": "WalkRightVeryFastSite",
    "0x0028": "RunUpSite",
    "0x0029": "RunDownSite",
    "0x002A": "RunLeftSite",
    "0x002B": "RunRightSite",
    "0x002C": "JumpUpSlow",
    "0x002D": "JumpDownSlow",
    "0x002E": "JumpLeftSlow",
    "0x002F": "JumpRightSlow",
    "0x0030": "JumpUpSite",
    "0x0031": "JumpDownSite",
    "0x0032": "JumpLeftSite",
    "0x0033": "JumpRightSite",
    "0x0034": "JumpUp",
    "0x0035": "JumpDown",
    "0x0036": "JumpLeft",
    "0x0037": "JumpRight",
    "0x0038": "JumpUp2",
    "0x0039": "JumpDown2",
    "0x003A": "JumpLeft2",
    "0x003B": "JumpRight2",
    "0x003C": "Freeze1",
    "0x003D": "Freeze2",
    "0x003E": "Freeze4",
    "0x003F": "Freeze8",
    "0x0040": "Freeze15",
    "0x0041": "Freeze16",
    "0x0042": "Freeze32",
    "0x0043": "TeleportUp",
    "0x0044": "TeleportDown",
    "0x0045": "DisappearTrue",
    "0x0046": "DisappearFalse",
    "0x0047": "LockDir",
    "0x0048": "ReleaseDir",
    "0x0049": "StopAnimation",
    "0x004A": "ResumeAnimation",
    "0x004B": "Exclamation",
    "0x004C": "WaitWalkUpSlow",
    "0x004D": "WaitWalkDownSlow",
    "0x004F": "WaitWalkRightSlow",
    "0x0050": "WaitWalkUp",
    "0x0051": "WaitWalkDown",
    "0x0052": "WaitWalkLeft",
    "0x0053": "WaitWalkRight",
    "0x0054": "WaitMoveUp",
    "0x0055": "WaitMoveDown",
    "0x0056": "WaitMoveLeft",
    "0x0057": "WaitMoveRight",
    "0x0058": "WaitWalkBackUp",
    "0x0059": "WaitWalkBackDown",
    "0x005A": "WaitWalkBackLeft",
    "0x005B": "WaitWalkBackRight",
    "0x005C": "WaitJumpLeft1",
    "0x005D": "WaitJumpRight1",
    "0x005E": "WaitJumpLeft2",
    "0x005F": "WaitJumpRight2",
    "0x0064": "WaitMoveSite",
    "0x0065": "WaitJumpSite",
    "0x0067": "WaitDoubleExclamation",
    "0x0068": "WaitMoveForever",
    "0x00FE": "End"
  },
  "comparisonOperators": {
    "0x0000": "LESS",
    "0x0001": "EQUAL",
    "0x0002": "GREATER",
    "0x0003": "LESS/EQUAL",
    "0x0004": "GREATER/EQUAL",
    "0x0005": "DIFFERENT"
  },
  "specialOverworlds": {
    "0x00F1": "Camera",
    "0x00F2": "Partner",
    "0x00FD": "Following",
    "0x00FF": "Player"
  },
  "overworldDirections": {
    "0x0000": "Up",
    "0x0001": "Down",
    "0x0002": "Left",
    "0x0003": "Right"
  },
  "scrcmd": {
    "0x0000": {
      "name": "Nop",
      "decomp_name": "Noop",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x0001": {
      "name": "Dummy",
      "decomp_name": "Dummy",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x0002": {
      "name": "End",
      "decomp_name": "End",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "End script execution"
    },
    "0x0003": {
      "name": "WaitTime",
      "decomp_name": "WaitTime",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Time",
        "Var: Countdown Variable"
      ],
      "description": "Stop script execution for Time frames, storing the remaining time in the Countdown Variable"
    },
    "0x0004": {
      "name": "RegValueSet",
      "decomp_name": "ScrCmd_Unused_004",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u8: Value"
      ],
      "description": "Assigns Value to Script Register value"
    },
    "0x0005": {
      "name": "RegDataSet",
      "decomp_name": "ScrCmd_Unused_005",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u32: Value"
      ],
      "description": "Assigns Value to Script Register value"
    },
    "0x0006": {
      "name": "RegAdrsSet",
      "decomp_name": "ScrCmd_Unused_006",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u32: Address"
      ],
      "description": "Assigns data in Address offset to Script Register value"
    },
    "0x0007": {
      "name": "AdrsValueSet",
      "decomp_name": "ScrCmd_Unused_007",
      "parameters": [
        4,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Address",
        "u8: Value"
      ],
      "description": "Assigns Value to the Address offset"
    },
    "0x0008": {
      "name": "AdrsRegSet",
      "decomp_name": "ScrCmd_Unused_008",
      "parameters": [
        4,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Address",
        "u8: Script Register"
      ],
      "description": "Assigns Script Register value to the Address offset"
    },
    "0x0009": {
      "name": "RegRegSet",
      "decomp_name": "ScrCmd_Unused_009",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register 1",
        "u8: Script Register 2"
      ],
      "description": "Assigns Script Register 2 value to Script Register 1 value"
    },
    "0x000A": {
      "name": "AdrsAdrsSet",
      "decomp_name": "ScrCmd_Unused_00A",
      "parameters": [
        4,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Address 1",
        "u32: Address 2"
      ],
      "description": "Assigns data in Address 2 to the Address 1 offset"
    },
    "0x000B": {
      "name": "CompareRegs",
      "decomp_name": "ScrCmd_Unused_00B",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u8: Script Register"
      ],
      "description": "Compares two Script Register"
    },
    "0x000C": {
      "name": "CompareRegValue",
      "decomp_name": "ScrCmd_Unused_00C",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u8: Value"
      ],
      "description": "Compares Script Register value with Value"
    },
    "0x000D": {
      "name": "CompareRegAdrs",
      "decomp_name": "ScrCmd_Unused_00D",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Script Register",
        "u32: Address"
      ],
      "description": "Compares Script Register value with data in Address"
    },
    "0x000E": {
      "name": "CompareAdrsReg",
      "decomp_name": "ScrCmd_Unused_00E",
      "parameters": [
        4,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Address",
        "u8: Script Register"
      ],
      "description": "Compares data in Address with Script Register value"
    },
    "0x000F": {
      "name": "CompareAdrsValue",
      "decomp_name": "ScrCmd_Unused_00F",
      "parameters": [
        4,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Address",
        "u8: Value"
      ],
      "description": "Compares data in Address with Value"
    },
    "0x0010": {
      "name": "CompareAdrsAdrs",
      "decomp_name": "ScrCmd_Unused_010",
      "parameters": [
        4,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Address 1",
        "u32: Address 2"
      ],
      "description": "Compares data in Address 1 with data in Address 2"
    },
    "0x0011": {
      "name": "CompareVarValue",
      "decomp_name": "CompareVarToValue",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "INTEGER"
      ],
      "parameter_values": [
        "Var: Variable",
        "u16: Value"
      ],
      "description": "Compares Variable value with Value"
    },
    "0x0012": {
      "name": "CompareVars",
      "decomp_name": "CompareVarToVar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable 1",
        "Var: Variable 2"
      ],
      "description": "Compares Variable 1 value with Variable 2 value"
    },
    "0x0013": {
      "name": "ParallelCommonScript",
      "decomp_name": "ScrCmd_Unused_013",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: ???"
      ],
      "description": "???"
    },
    "0x0014": {
      "name": "CommonScript",
      "decomp_name": "CallCommonScript",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Global Script ID"
      ],
      "description": "Calls Global Script ID script"
    },
    "0x0015": {
      "name": "LocalScript",
      "decomp_name": "ReturnCommonScript",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Returns to the invoking script/function after a Common Script"
    },
    "0x0016": {
      "name": "Jump",
      "decomp_name": "GoTo",
      "parameters": [
        4
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward"
    },
    "0x0017": {
      "name": "JumpIfObjID",
      "decomp_name": "ScrCmd_Unused_017",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Event ID",
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if invoking event has Event ID as ID"
    },
    "0x0018": {
      "name": "JumpIfEventID",
      "decomp_name": "ScrCmd_Unused_018",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???",
        "u32: Relative Jump"
      ],
      "description": "???"
    },
    "0x0019": {
      "name": "JumpIfPlayerDir",
      "decomp_name": "ScrCmd_Unused_019",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Player Direction",
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if player is looking in Player Direction"
    },
    "0x001A": {
      "name": "Call",
      "decomp_name": "Call",
      "parameters": [
        4
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Relative Jump"
      ],
      "description": "Calls a function, Relative Jump bytes forward or backward"
    },
    "0x001B": {
      "name": "Return",
      "decomp_name": "Return",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Returns to the invoking script/function after a Call"
    },
    "0x001C": {
      "name": "JumpIf",
      "decomp_name": "GoToIf",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Condition",
        "u32: Relative Jump"
      ],
      "description": "If Condition in the condition table, jumps to a function"
    },
    "0x001D": {
      "name": "CallIf",
      "decomp_name": "CallIf",
      "parameters": [
        1,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Condition",
        "u32: Relative Jump"
      ],
      "description": "If Condition in the condition table, calls a function"
    },
    "0x001E": {
      "name": "SetFlag",
      "decomp_name": "SetFlag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Flag"
      ],
      "description": "Sets Flag to 1"
    },
    "0x001F": {
      "name": "ClearFlag",
      "decomp_name": "ClearFlag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Flag"
      ],
      "description": "Sets Flag to 0"
    },
    "0x0020": {
      "name": "CheckFlag",
      "decomp_name": "CheckFlag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Flag"
      ],
      "description": "Checks if Flag is set"
    },
    "0x0021": {
      "name": "CheckFlagToVar",
      "decomp_name": "CheckFlagFromVar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Flag",
        "Var: Variable"
      ],
      "description": "Checks if Flag is set and store the result in Variable"
    },
    "0x0022": {
      "name": "SetFlagFromVar",
      "decomp_name": "SetFlagFromVar",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Flag"
      ],
      "description": "Sets the flag whose ID is stored in Flag"
    },
    "0x0023": {
      "name": "SetTrainerFlag",
      "decomp_name": "SetTrainerFlag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer ID"
      ],
      "description": "Sets the flag of Trainer ID, so marks it as beaten trainer"
    },
    "0x0024": {
      "name": "ClearTrainerFlag",
      "decomp_name": "ClearTrainerFlag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer ID"
      ],
      "description": "Clears the flag of Trainer ID, so marks it as unbeaten trainer"
    },
    "0x0025": {
      "name": "CheckTrainerFlag",
      "decomp_name": "CheckTrainerFlag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer ID"
      ],
      "description": "Checks if Trainer ID has been beaten"
    },
    "0x0026": {
      "name": "IncrementVar",
      "decomp_name": "AddVar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Operand"
      ],
      "description": "Stores the operation Variable + Operand in Variable"
    },
    "0x0027": {
      "name": "DecrementVar",
      "decomp_name": "SubVar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Operand"
      ],
      "description": "Stores the operation Variable - Operand in Variable"
    },
    "0x0028": {
      "name": "SetVar",
      "decomp_name": "SetVarFromValue",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "INTEGER"
      ],
      "parameter_values": [
        "Var: Variable",
        "u16: Value"
      ],
      "description": "Stores Value in Variable"
    },
    "0x0029": {
      "name": "SetVarFromVariable",
      "decomp_name": "SetVarFromVar",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable 1",
        "Var: Variable 2"
      ],
      "description": "Assigns value of Variable 2 to Variable 1"
    },
    "0x002A": {
      "name": "SetVarFromFlexible",
      "decomp_name": "ScrCmd_Unused_02A",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Flexible Value"
      ],
      "description": "Stores Flexible Value (or its value if variable) in Variable"
    },
    "0x002B": {
      "name": "MessageAll",
      "decomp_name": "MessageInstant",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Text Slot"
      ],
      "description": "Display line Text Slot from the text file, all at once"
    },
    "0x002C": {
      "name": "Message",
      "decomp_name": "Message",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Text Slot"
      ],
      "description": "Display line Text Slot from the text file"
    },
    "0x002D": {
      "name": "MessageFlex",
      "decomp_name": "MessageVar",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Text Slot"
      ],
      "description": "Display line Text Slot from the text file"
    },
    "0x002E": {
      "name": "MessageNoSkip",
      "decomp_name": "ScrCmd_02E",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Text Slot"
      ],
      "description": "???"
    },
    "0x002F": {
      "name": "CMD_47",
      "decomp_name": "ScrCmd_02F",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Text Slot"
      ],
      "description": "???"
    },
    "0x0030": {
      "name": "WaitAB",
      "decomp_name": "WaitABPress",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for button A or button B to be pressed"
    },
    "0x0031": {
      "name": "WaitButton",
      "decomp_name": "WaitABXPadPress",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for a button to be pressed"
    },
    "0x0032": {
      "name": "WaitABPad",
      "decomp_name": "WaitABPadPress",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for button A, button B or pad buttons to be pressed"
    },
    "0x0033": {
      "name": "OpenMessage",
      "decomp_name": "OpenMessage",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x0034": {
      "name": "CloseMessage",
      "decomp_name": "CloseMessage",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Closes message box"
    },
    "0x0035": {
      "name": "FreezeMessage",
      "decomp_name": "CloseMessageWithoutErasing",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x0036": {
      "name": "SetIconBoard",
      "decomp_name": "DrawSignpostInstantMessage",
      "parameters": [
        1,
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Text Slot",
        "u8: Type",
        "u16: Icon",
        "u16: Unused"
      ],
      "description": "Prepares an icon board message box displaying Text Slot message, of Type type, and with Icon image if chosen type supports it"
    },
    "0x0037": {
      "name": "SetTextBoard",
      "decomp_name": "DrawSignpostTextBox",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Type",
        "u16: Icon"
      ],
      "description": "Prepares a text board message box of Type type, and with Icon image if chosen type supports it"
    },
    "0x0038": {
      "name": "ShowBoard",
      "decomp_name": "SetSignpostCommand",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Process"
      ],
      "description": "Triggers different Process processes for the board"
    },
    "0x0039": {
      "name": "WaitBoard",
      "decomp_name": "WaitForSignpostDone",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits the board last process to end"
    },
    "0x003A": {
      "name": "BoardMessage",
      "decomp_name": "DrawSignpostScrollingMessage",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Text Slot",
        "u16: Variable"
      ],
      "description": "Displays Text Slot message in the current text box, stores the current text box status in Variable"
    },
    "0x003B": {
      "name": "CloseBoard",
      "decomp_name": "GetSignpostInput",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Returns 1 to Variable if the player has pressed a button so the board must close, 0 otherwise"
    },
    "0x003C": {
      "name": "Menu",
      "decomp_name": "ShowStartMenu",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x003D": {
      "name": "CMD_61",
      "decomp_name": "ScrollBG3",
      "parameters": [
        1,
        1,
        1,
        1,
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???"
      ],
      "description": "???"
    },
    "0x003E": {
      "name": "YesNoBox",
      "decomp_name": "ShowYesNoMenu",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Opens a Yes-No dialog and stores user response in Variable"
    },
    "0x003F": {
      "name": "DummyGuinnessBox",
      "decomp_name": "ScrCmd_Unused_03F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x0040": {
      "name": "MultiStandardText",
      "decomp_name": "InitGlobalTextMenu",
      "parameters": [
        1,
        1,
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with text bank #361, returns selected slot ID in Selection"
    },
    "0x0041": {
      "name": "MultiLocalText",
      "decomp_name": "InitLocalTextMenu",
      "parameters": [
        1,
        1,
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with local texts, returns selected slot ID in Selection"
    },
    "0x0042": {
      "name": "AddMultiOption",
      "decomp_name": "AddMenuEntryImm",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Text Slot",
        "u8: Multi Slot"
      ],
      "description": "Adds an option with Multi Slot ID showing Text Slot text"
    },
    "0x0043": {
      "name": "ShowMulti",
      "decomp_name": "ShowMenu",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Shows the prepared multi in screen"
    },
    "0x0044": {
      "name": "ListStandardText",
      "decomp_name": "InitGlobalTextListMenu",
      "parameters": [
        1,
        1,
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection list at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with text bank #361, returns selected slot ID in Selection"
    },
    "0x0045": {
      "name": "ListLocalText",
      "decomp_name": "InitLocalTextListMenu",
      "parameters": [
        1,
        1,
        1,
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection list at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with local texts, returns selected slot ID in Selection"
    },
    "0x0046": {
      "name": "AddListOption",
      "decomp_name": "AddListMenuEntry",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Option MSG",
        "Flex: Highlight MSG",
        "Flex: List Slot"
      ],
      "description": "Adds a new option to the list, with List Slot ID and showing text line Option MSG. It also displays text line Highlight MSG when that option is highlighted."
    },
    "0x0047": {
      "name": "ShowList",
      "decomp_name": "ShowListMenu",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Shows the prepared list in screen"
    },
    "0x0048": {
      "name": "MultiColumn",
      "decomp_name": "ShowMenuMultiColumn",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Columns"
      ],
      "description": "Splits the multi window in Columns different columns"
    },
    "0x0049": {
      "name": "PlayFanfare",
      "decomp_name": "PlayFanfare",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Sound"
      ],
      "description": "Plays Sound"
    },
    "0x004A": {
      "name": "StopFanfare",
      "decomp_name": "StopFanfare",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Sound"
      ],
      "description": "Stops Sound"
    },
    "0x004B": {
      "name": "WaitFanfare",
      "decomp_name": "WaitFanfare",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Sound"
      ],
      "description": "Waits for Sound to finish"
    },
    "0x004C": {
      "name": "PlayCry",
      "decomp_name": "PlayCry",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Unused"
      ],
      "description": "Plays a Pok\u00e9mon cry"
    },
    "0x004D": {
      "name": "WaitCry",
      "decomp_name": "WaitCry",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits the current cry to finish"
    },
    "0x004E": {
      "name": "PlaySound",
      "decomp_name": "PlaySound",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Sound"
      ],
      "description": "Pauses current music, then Plays Sound"
    },
    "0x004F": {
      "name": "WaitSound",
      "decomp_name": "WaitSound",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for Sound to finish, then resumes music"
    },
    "0x0050": {
      "name": "PlayMusic",
      "decomp_name": "PlayMusic",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Music"
      ],
      "description": "Plays Music"
    },
    "0x0051": {
      "name": "StopMusic",
      "decomp_name": "StopMusic",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Unused"
      ],
      "description": "Stops current music"
    },
    "0x0052": {
      "name": "PlayDefaultMusic",
      "decomp_name": "PlayDefaultMusic",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Plays map default music"
    },
    "0x0053": {
      "name": "SetMusic",
      "decomp_name": "SetSpecialBGM",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Music"
      ],
      "description": "???"
    },
    "0x0054": {
      "name": "FadeOutMusic",
      "decomp_name": "FadeOutBGM",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Volume",
        "u16: Time"
      ],
      "description": "Fades out the current music to Volume in Time frames"
    },
    "0x0055": {
      "name": "FadeInMusic",
      "decomp_name": "FadeInBGM",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Time"
      ],
      "description": "Fades in the current music to normal volume in Time frames"
    },
    "0x0056": {
      "name": "SetMusicPauseStatus",
      "decomp_name": "SetBGMPlayerPaused",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: SSEQ Player ID",
        "u8: Status"
      ],
      "description": "If Status = 1, the track that's currently played by chosen Player ID will pause. If Status = 0, Player ID will resume the previously paused music."
    },
    "0x0057": {
      "name": "PlayFieldBGM",
      "decomp_name": "ScrCmd_057",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Music ID"
      ],
      "description": "While in the field overworld, plays Music using SSEQ Player #7 (PLAYER_BGM)"
    },
    "0x0058": {
      "name": "CMD_88",
      "decomp_name": "SetBGMFixed",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???"
      ],
      "description": "???"
    },
    "0x0059": {
      "name": "CheckChatotCry",
      "decomp_name": "CheckRecordedChatotCryIsPlayable",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Checks if Chatot has custom sound, stores answer in Variable"
    },
    "0x005A": {
      "name": "StartChatotCry",
      "decomp_name": "TryRecordChatotCry",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Starts Chatot microphone record, stores answer in Variable"
    },
    "0x005B": {
      "name": "StopChatotCry",
      "decomp_name": "StopRecordingChatotCry",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Stops recording Chatot custom sound"
    },
    "0x005C": {
      "name": "SaveChatotCry",
      "decomp_name": "StoreRecordedChatotCry",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "???"
    },
    "0x005D": {
      "name": "LoadSpearPillarAudio",
      "decomp_name": "SetSubScene63",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Loads Spear Pillar cutscene sound data (GROUP_SE_CLIMAX in the SDAT)"
    },
    "0x005E": {
      "name": "Movement",
      "decomp_name": "ApplyMovement",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "u32: Relative Jump"
      ],
      "description": "Applies movement at Relative Jump to Event ID"
    },
    "0x005F": {
      "name": "WaitMovement",
      "decomp_name": "WaitMovement",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for all movements to finish"
    },
    "0x0060": {
      "name": "LockAll",
      "decomp_name": "LockAll",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Locks every event in the map"
    },
    "0x0061": {
      "name": "ReleaseAll",
      "decomp_name": "ReleaseAll",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Releases every event in the map"
    },
    "0x0062": {
      "name": "Lock",
      "decomp_name": "LockObject",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Event ID"
      ],
      "description": "Locks Event ID"
    },
    "0x0063": {
      "name": "Release",
      "decomp_name": "ReleaseObject",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Event ID"
      ],
      "description": "Releases Event ID"
    },
    "0x0064": {
      "name": "AddOW",
      "decomp_name": "AddObject",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID"
      ],
      "description": "Add Event ID overworld in the map"
    },
    "0x0065": {
      "name": "RemoveOW",
      "decomp_name": "RemoveObject",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID"
      ],
      "description": "Removes Event ID overworld from the map"
    },
    "0x0066": {
      "name": "LockCamera",
      "decomp_name": "AddFreeCamera",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Locks the camera at position X and Y"
    },
    "0x0067": {
      "name": "ReleaseCamera",
      "decomp_name": "RestoreCamera",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Releases the camera"
    },
    "0x0068": {
      "name": "FacePlayer",
      "decomp_name": "FacePlayer",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Makes the invoking event to look at the player"
    },
    "0x0069": {
      "name": "GetPlayerPosition",
      "decomp_name": "GetPlayerMapPos",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: X",
        "Var: Y"
      ],
      "description": "Saves the current player position in X and Y"
    },
    "0x006A": {
      "name": "GetOWPosition",
      "decomp_name": "ScrCmd_Unused_06A",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Var: X",
        "Var: Y"
      ],
      "description": "Saves the current Event ID position in X and Y"
    },
    "0x006B": {
      "name": "CMD_107",
      "decomp_name": "ScrCmd_06B",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: X",
        "Flex: Z",
        "Flex: Y"
      ],
      "description": "???"
    },
    "0x006C": {
      "name": "KeepOverworld",
      "decomp_name": "ScrCmd_06C",
      "parameters": [
        2,
        1
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "u8: Value"
      ],
      "description": "If Value is 1, prevents Event ID from disappearing when entering a new map header"
    },
    "0x006D": {
      "name": "SetOWMovement",
      "decomp_name": "ScrCmd_06D",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "u16: Movement"
      ],
      "description": "Changes the Event ID's movement number to Movement"
    },
    "0x006E": {
      "name": "SetFollowingOverworld",
      "decomp_name": "ScrCmd_Unused_06E",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Assigns ID 0xFE for any overworld that follows the player"
    },
    "0x006F": {
      "name": "GiveMoney",
      "decomp_name": "GiveMoney",
      "parameters": [
        4
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Money"
      ],
      "description": "Adds Money to the player's money"
    },
    "0x0070": {
      "name": "TakeMoney",
      "decomp_name": "RemoveMoney",
      "parameters": [
        4
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Money"
      ],
      "description": "Subtracts Money from the player's money"
    },
    "0x0071": {
      "name": "CompareMoney",
      "decomp_name": "CheckMoney",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "VARIABLE",
        "INTEGER"
      ],
      "parameter_values": [
        "Var: Variable",
        "u32: Money"
      ],
      "description": "Returns 1 to Variable if the player has Money or more money, returns 0 otherwise"
    },
    "0x0072": {
      "name": "ShowMoney",
      "decomp_name": "ShowMoney",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Shows the money box at X and Y coordinates of the screen"
    },
    "0x0073": {
      "name": "HideMoney",
      "decomp_name": "HideMoney",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Hides the money box"
    },
    "0x0074": {
      "name": "UpdateMoney",
      "decomp_name": "UpdateMoneyDisplay",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Updates the current money in the money box"
    },
    "0x0075": {
      "name": "ShowCoins",
      "decomp_name": "ShowCoins",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Shows the coin box at X and Y coordinates of the screen"
    },
    "0x0076": {
      "name": "HideCoins",
      "decomp_name": "HideCoins",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Hides the coin box"
    },
    "0x0077": {
      "name": "UpdateCoins",
      "decomp_name": "UpdateCoinDisplay",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Updates the current coins in the coin box"
    },
    "0x0078": {
      "name": "CheckCoins",
      "decomp_name": "GetCoinsAmount",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of coins"
    },
    "0x0079": {
      "name": "GiveCoins",
      "decomp_name": "AddCoins",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Coins"
      ],
      "description": "Adds Coins to the player's coin case"
    },
    "0x007A": {
      "name": "TakeCoins",
      "decomp_name": "SubstractCoinsFromValue",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Coins"
      ],
      "description": "Subtracts Coins from the player's coin case"
    },
    "0x007B": {
      "name": "GiveItem",
      "decomp_name": "AddItem",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Adds Amount of Item item, stores 1 in Variable if the player had less than 1000 - Amount (100 - Amount if TM/HM), stores 0 otherwise"
    },
    "0x007C": {
      "name": "TakeItem",
      "decomp_name": "RemoveItem",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Subs Amount of Item item, stores 1 in Variable if the player had at least Amount items in the bag, stores 0 otherwise"
    },
    "0x007D": {
      "name": "CheckItemSpace",
      "decomp_name": "CanFitItem",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the player has less than 1000 - Amount of Item items (100 - Amount if TM/HM), stores 0 otherwise"
    },
    "0x007E": {
      "name": "CheckItem",
      "decomp_name": "CheckItem",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the player has at least Amount of Item items in the bag, stores 0 otherwise"
    },
    "0x007F": {
      "name": "CheckItemIsMachine",
      "decomp_name": "IsItemTMHM",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Item is TM or HM, stores 0 otherwise"
    },
    "0x0080": {
      "name": "GetItemPocket",
      "decomp_name": "GetItemPocket",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "Stores the bag pocket of Item in Variable"
    },
    "0x0081": {
      "name": "DummyGivePCItem",
      "decomp_name": "ScrCmd_Dummy081",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x0082": {
      "name": "DummyCheckPCItem",
      "decomp_name": "ScrCmd_Dummy082",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x0083": {
      "name": "GiveGoods",
      "decomp_name": "ScrCmd_083",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Goods",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Adds one Goods item to the underground PC, stores 1 in Variable if it could be stored and stores 0 otherwise"
    },
    "0x0084": {
      "name": "DummyTakeGoods",
      "decomp_name": "ScrCmd_084",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x0085": {
      "name": "CheckGoodsSpace",
      "decomp_name": "ScrCmd_085",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if there's at least one free slot in the underground PC for a goods, stores 0 otherwise"
    },
    "0x0086": {
      "name": "DummyCheckGoods",
      "decomp_name": "ScrCmd_086",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x0087": {
      "name": "GiveTrap",
      "decomp_name": "ScrCmd_087",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Trap",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Adds one Trap item to the underground bag, stores 1 in Variable if it could be stored and stores 0 otherwise"
    },
    "0x0088": {
      "name": "DummyTakeTrap",
      "decomp_name": "ScrCmd_088",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x0089": {
      "name": "DummyCheckTrapSpace",
      "decomp_name": "ScrCmd_089",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x008A": {
      "name": "DummyCheckTrap",
      "decomp_name": "ScrCmd_08A",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x008B": {
      "name": "DummyGiveTreasure",
      "decomp_name": "ScrCmd_08B",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x008C": {
      "name": "DummyTakeTreasure",
      "decomp_name": "ScrCmd_08C",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x008D": {
      "name": "DummyCheckTreasureSpace",
      "decomp_name": "ScrCmd_08D",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x008E": {
      "name": "DummyCheckTreasure",
      "decomp_name": "ScrCmd_08E",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x008F": {
      "name": "GiveSphere",
      "decomp_name": "ScrCmd_08F",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Sphere",
        "Flex: Level",
        "Var: Variable"
      ],
      "description": "Adds one Sphere item of size Level to the underground bag, stores 1 in Variable if it could be given, stores 0 otherwise"
    },
    "0x0090": {
      "name": "DummyTakeSphere",
      "decomp_name": "ScrCmd_090",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x0091": {
      "name": "DummyCheckSphereSpace",
      "decomp_name": "ScrCmd_091",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x0092": {
      "name": "DummyCheckSphere",
      "decomp_name": "ScrCmd_092",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing"
    },
    "0x0093": {
      "name": "CheckSealAmount",
      "decomp_name": "ScrCmd_093",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Seal ID",
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of Seal ID seals"
    },
    "0x0094": {
      "name": "GiveSeal",
      "decomp_name": "ScrCmd_094",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Seal ID",
        "Flex: Amount"
      ],
      "description": "Adds Amount of Seal ID seals if there's enough space for them"
    },
    "0x0095": {
      "name": "CheckPokemonForm",
      "decomp_name": "GetPartyMonForm",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Stores in Variable the form of the Pok\u00e9mon in Party Position"
    },
    "0x0096": {
      "name": "GivePokemon",
      "decomp_name": "GivePokemon",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Level",
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "Gives Pok\u00e9mon at level Level with an Item, store 1 in Variable if succeed and 0 otherwise"
    },
    "0x0097": {
      "name": "GivePokemonEgg",
      "decomp_name": "GiveEgg",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Location"
      ],
      "description": "Gives a Pok\u00e9mon egg received from Location text slot at text bank #435"
    },
    "0x0098": {
      "name": "ReplaceMove",
      "decomp_name": "ScrCmd_098",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Move Position",
        "Flex: Move ID"
      ],
      "description": "Replaces Party Position Pok\u00e9mon move at Move Position move slot by Move ID new move"
    },
    "0x0099": {
      "name": "CheckMove",
      "decomp_name": "CheckPartyMonHasMove",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Move ID",
        "Flex: Party Position"
      ],
      "description": "Stores 1 in Variable if Pok\u00e9mon at Party Position knows Move ID move, stores 0 otherwise"
    },
    "0x009A": {
      "name": "CheckMoveInParty",
      "decomp_name": "FindPartySlotWithMove",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Move ID"
      ],
      "description": "Checks if any Pok\u00e9mon in the party knows Move ID move, stores in Variable the position of the first Pok\u00e9mon that knows it or stores 6 if no Pok\u00e9mon in the party knows the move"
    },
    "0x009B": {
      "name": "CMD_155",
      "decomp_name": "ScrCmd_09B",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x009C": {
      "name": "DummySetWeather",
      "decomp_name": "ScrCmd_Unused_09C",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x009D": {
      "name": "DummyInitWeather",
      "decomp_name": "ScrCmd_Unused_09D",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x009E": {
      "name": "DummyUpdateWeather",
      "decomp_name": "ScrCmd_Unused_09E",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x009F": {
      "name": "DummyCheckMapPosition",
      "decomp_name": "ScrCmd_Unused_09F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x00A0": {
      "name": "DummyCountPartyPokemon",
      "decomp_name": "ScrCmd_0A0",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x00A1": {
      "name": "ReturnScreen",
      "decomp_name": "ReturnToField",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Restores the normal overworld screen"
    },
    "0x00A2": {
      "name": "CMD_162",
      "decomp_name": "ScrCmd_0A2",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00A3": {
      "name": "CMD_163",
      "decomp_name": "ScrCmd_0A3",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00A4": {
      "name": "CMD_164",
      "decomp_name": "ScrCmd_Unused_0A4",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00A5": {
      "name": "CMD_165",
      "decomp_name": "ScrCmd_0A5",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00A6": {
      "name": "DressPokemon",
      "decomp_name": "ScrCmd_0A6",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Pos",
        "Var: ???",
        "Flex: ???"
      ],
      "description": "Shows Dress-Up screen with Pok\u00e9mon at specified Party Pos"
    },
    "0x00A7": {
      "name": "DisplayDressedPokemon",
      "decomp_name": "ScrCmd_0A7",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Portrait Slot",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the chosen Portrait Slot was correctly loaded, stores 1 otherwise"
    },
    "0x00A8": {
      "name": "DisplayContestPokemon",
      "decomp_name": "ScrCmd_0A8",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Contest Portrait Slot",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the chosen Contest Portrait Slot was correctly loaded, stores 1 otherwise"
    },
    "0x00A9": {
      "name": "SealCapsuleScreen",
      "decomp_name": "OpenSealCapsuleEditor",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the capsule editor screen"
    },
    "0x00AA": {
      "name": "WorldMapScreen",
      "decomp_name": "ScrCmd_0AA",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the worldmap screen"
    },
    "0x00AB": {
      "name": "PCBoxScreen",
      "decomp_name": "OpenPokemonStorage",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Operation"
      ],
      "description": "Opens a PC screen to perform the chosen Operation."
    },
    "0x00AC": {
      "name": "DrawUnion",
      "decomp_name": "ScrCmd_0AC",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00AD": {
      "name": "TrainerCaseUnion",
      "decomp_name": "ScrCmd_0AD",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00AE": {
      "name": "TradeUnion",
      "decomp_name": "ScrCmd_0AE",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00AF": {
      "name": "RecordMixingUnion",
      "decomp_name": "ScrCmd_0AF",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00B0": {
      "name": "EndGameScreen",
      "decomp_name": "ScrCmd_0B0",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the Hall of Fame and game ending screens"
    },
    "0x00B1": {
      "name": "CMD_177",
      "decomp_name": "ScrCmd_0B1",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00B2": {
      "name": "CMD_178",
      "decomp_name": "ScrCmd_0B2",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00B3": {
      "name": "CMD_179",
      "decomp_name": "ScrCmd_0B3",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00B4": {
      "name": "StarterSelectionScreen",
      "decomp_name": "StartChooseStarterScene",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the starter Pok\u00e9mon selection screen"
    },
    "0x00B5": {
      "name": "EndStarterSelectionScreen",
      "decomp_name": "SaveChosenStarter",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Stores the selected starter Pok\u00e9mon in the save data and frees the Pok\u00e9mon selection screen resources"
    },
    "0x00B6": {
      "name": "CMD_182",
      "decomp_name": "ScrCmd_0B6",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x00B7": {
      "name": "CMD_183",
      "decomp_name": "ScrCmd_0B7",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x00B8": {
      "name": "CMD_184",
      "decomp_name": "ScrCmd_0B8",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x00B9": {
      "name": "CMD_185",
      "decomp_name": "ScrCmd_0B9",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x00BA": {
      "name": "ChoosePlayerName",
      "decomp_name": "ScrCmd_Unused_0BA",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Opens the keyboard for naming the player, stores 1 in Variable if user cancels the proccess"
    },
    "0x00BB": {
      "name": "ChoosePokemonNickname",
      "decomp_name": "ScrCmd_0BB",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Opens the keyboard for naming a Pok\u00e9mon at Party Position, stores 1 in Variable if user cancels the proccess"
    },
    "0x00BC": {
      "name": "FadeScreen",
      "decomp_name": "FadeScreen",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Transition",
        "u16: Time",
        "u16: Type",
        "u16: Color"
      ],
      "description": "Fade screen of Type type with Transition different screens of Time frames each one, to or from Color color"
    },
    "0x00BD": {
      "name": "WaitFadeScreen",
      "decomp_name": "WaitFadeScreen",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Wait for the screen fade to end"
    },
    "0x00BE": {
      "name": "Warp",
      "decomp_name": "Warp",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Map",
        "u16: Door",
        "Flex: X",
        "Flex: Y",
        "Flex: Dir"
      ],
      "description": "Warps to X and Y position of Map header with initial Dir direction, using Door warp"
    },
    "0x00BF": {
      "name": "RockClimbAnimation",
      "decomp_name": "UseRockClimb",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Uses rock climb with the Pok\u00e9mon at Party Position position"
    },
    "0x00C0": {
      "name": "SurfAnimation",
      "decomp_name": "UseSurf",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Uses surf with the Pok\u00e9mon at Party Position position"
    },
    "0x00C1": {
      "name": "WaterfallAnimation",
      "decomp_name": "UseWaterfall",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Uses waterfall with the Pok\u00e9mon at Party Position position"
    },
    "0x00C2": {
      "name": "FlyAnimation",
      "decomp_name": "ScrCmd_0C2",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u16: Map",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Flies to Map header map, to coordinates X and Y"
    },
    "0x00C3": {
      "name": "FlashAnimation",
      "decomp_name": "ScrCmd_0C3",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets weather to 0 (sunny) and then updates the weather graphics"
    },
    "0x00C4": {
      "name": "DefogAnimation",
      "decomp_name": "ScrCmd_0C4",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets weather to 0 (sunny) and then updates the weather graphics"
    },
    "0x00C5": {
      "name": "CutAnimation",
      "decomp_name": "ScrCmd_0C5",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Uses cut with the Pok\u00e9mon at Party Position position"
    },
    "0x00C6": {
      "name": "Tuxedo",
      "decomp_name": "ScrCmd_0C6",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Changes the current player form to the contest dress"
    },
    "0x00C7": {
      "name": "CheckBike",
      "decomp_name": "CheckPlayerOnBike",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player is riding the bike, stores 0 otherwise"
    },
    "0x00C8": {
      "name": "RideBike",
      "decomp_name": "SetPlayerBike",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Action"
      ],
      "description": "Changes player form from normal to riding the bike if Action is 1, otherwise it sets the normal form to the player"
    },
    "0x00C9": {
      "name": "CyclingRoad",
      "decomp_name": "ScrCmd_0C9",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Action"
      ],
      "description": "If Action is 1, the game sets the cycling road flag and moves the player down. Otherwise the flag is deactivated."
    },
    "0x00CA": {
      "name": "CheckPlayerForm",
      "decomp_name": "GetPlayerState",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current player form"
    },
    "0x00CB": {
      "name": "SetPlayerForm",
      "decomp_name": "SetPlayerState",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Form"
      ],
      "description": "Activates the Form bit in the internal player form data"
    },
    "0x00CC": {
      "name": "UpdatePlayerForm",
      "decomp_name": "ChangePlayerState",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Updates changes in the internal player form data in the screen"
    },
    "0x00CD": {
      "name": "TextPlayerName",
      "decomp_name": "BufferPlayerName",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores player's name in String Buffer"
    },
    "0x00CE": {
      "name": "TextRivalName",
      "decomp_name": "BufferRivalName",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores rival's name in String Buffer"
    },
    "0x00CF": {
      "name": "TextCounterpart",
      "decomp_name": "BufferCounterpartName",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores counterpart's name in String Buffer"
    },
    "0x00D0": {
      "name": "TextPokemon",
      "decomp_name": "BufferPartyMonSpecies",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the name of the Pok\u00e9mon in Party Position in String Buffer"
    },
    "0x00D1": {
      "name": "TextItem",
      "decomp_name": "BufferItemName",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's name in String Buffer"
    },
    "0x00D2": {
      "name": "TextPocket",
      "decomp_name": "BufferPocketName",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Pocket"
      ],
      "description": "Stores Pocket's name in String Buffer"
    },
    "0x00D3": {
      "name": "TextMachineMove",
      "decomp_name": "BufferTMHMMoveName",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores the name of the move contained in Item TM/HM in String Buffer"
    },
    "0x00D4": {
      "name": "TextMove",
      "decomp_name": "BufferMoveName",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Move"
      ],
      "description": "Stores battle Move's name in String Buffer"
    },
    "0x00D5": {
      "name": "TextNumber",
      "decomp_name": "BufferNumber",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Number"
      ],
      "description": "Stores a Number in String Buffer"
    },
    "0x00D6": {
      "name": "TextPokeNickname",
      "decomp_name": "BufferPartyMonNickname",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the nickname of the Pok\u00e9mon in Party Position in String Buffer"
    },
    "0x00D7": {
      "name": "TextPoketch",
      "decomp_name": "BufferPoketchAppName",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Pok\u00e9tch App"
      ],
      "description": "Stores Pok\u00e9tch App's name in String Buffer"
    },
    "0x00D8": {
      "name": "TextTrainer",
      "decomp_name": "BufferTrainerClassName",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Trainer"
      ],
      "description": "Stores Trainer's name in String Buffer"
    },
    "0x00D9": {
      "name": "TextPlayerTrainerType",
      "decomp_name": "ScrCmd_0D9",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores player's Union Room trainer type in String Buffer"
    },
    "0x00DA": {
      "name": "TextPokemonStored",
      "decomp_name": "BufferSpeciesNameFromVar",
      "parameters": [
        1,
        2,
        2,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Pok\u00e9mon",
        "u16: Unused",
        "u8: Unused"
      ],
      "description": "Stores Pok\u00e9mon's name in String Buffer"
    },
    "0x00DB": {
      "name": "TextStarterPokemon",
      "decomp_name": "BufferPlayerStarterSpeciesName",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the player' starter Pok\u00e9mon in String Buffer"
    },
    "0x00DC": {
      "name": "TextRivalStarter",
      "decomp_name": "BufferRivalStarterSpeciesName",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the rival' starter Pok\u00e9mon in String Buffer"
    },
    "0x00DD": {
      "name": "TextCounterpartStarter",
      "decomp_name": "BufferPlayerCounterpartStarterSpeciesName",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the counterpart' starter Pok\u00e9mon in String Buffer"
    },
    "0x00DE": {
      "name": "CheckStarter",
      "decomp_name": "GetPlayerStarterSpecies",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the starter Pok\u00e9mon ID in Variable"
    },
    "0x00DF": {
      "name": "TextGoods",
      "decomp_name": "BufferUndergroundGoodsName",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Goods"
      ],
      "description": "Stores underground Goods' name in String Buffer"
    },
    "0x00E0": {
      "name": "TextTrap",
      "decomp_name": "BufferUndergroundTrapName",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Trap"
      ],
      "description": "Stores underground Trap's name in String Buffer"
    },
    "0x00E1": {
      "name": "TextTreasure",
      "decomp_name": "BufferUndergroundItemName",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Treasure"
      ],
      "description": "Stores underground Treasure's name in String Buffer"
    },
    "0x00E2": {
      "name": "TextMapName",
      "decomp_name": "ScrCmd_0E2",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Map"
      ],
      "description": "Stores Map header name in String Buffer"
    },
    "0x00E3": {
      "name": "GetSwarmInfo",
      "decomp_name": "GetSwarmMapAndSpecies",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Map",
        "Var: Pok\u00e9mon"
      ],
      "description": "Selects a zone depending on a random seed, then stores the zone ID in Map and the corresponding swarm Pok\u00e9mon of that zone in Pok\u00e9mon"
    },
    "0x00E4": {
      "name": "TrainerID",
      "decomp_name": "GetTrainerID",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the trainer ID number in Variable depending on the script ID"
    },
    "0x00E5": {
      "name": "TrainerBattle",
      "decomp_name": "StartTrainerBattle",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer 1",
        "Flex: Trainer 2"
      ],
      "description": "Starts a battle against Trainer 1 and, if Trainer 2 is neither 0 nor the same as Trainer 1, a double battle against both"
    },
    "0x00E6": {
      "name": "TrainerMessage",
      "decomp_name": "PrintTrainerDialogue",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer ID",
        "Flex: Type"
      ],
      "description": "Displays the text of Trainer ID trainer at condition Type"
    },
    "0x00E7": {
      "name": "TrainerMsgCheck",
      "decomp_name": "GetTrainerMessageTypes",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Noticing",
        "Var: Defeat",
        "Var: One Pok\u00e9mon"
      ],
      "description": "If the script ID corresponds to a single battle trainer, stores 0 in Noticing, 2 in Defeat and 0 in One Pok\u00e9mon. If it corresponds to a double battle, stores 3, 5 and 6 or 7, 9 and 10 depending on whether it's the first or the second trainer"
    },
    "0x00E8": {
      "name": "TrainerRematchMsgCheck",
      "decomp_name": "GetTrainerRematchMessageTypes",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Noticing",
        "Var: Defeat",
        "Var: One Pok\u00e9mon"
      ],
      "description": "If the script ID corresponds to a single battle trainer, stores 17 in Noticing, 0 in Defeat and 0 in One Pok\u00e9mon. If it corresponds to a double battle, stores 18, 0 and 6 or 19, 0 and 10 depending on whether it's the first or the second trainer"
    },
    "0x00E9": {
      "name": "TrainerTypeCheck",
      "decomp_name": "CheckIsTrainerDoubleBattle",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the script ID corresponds to a single battle, stores 1 if it corresponds to a double battle"
    },
    "0x00EA": {
      "name": "TrainerMusic",
      "decomp_name": "PlayTrainerEncounterBGM",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer"
      ],
      "description": "Retrieves the Trainer Class ID of the passed Trainer and plays its eye contact music."
    },
    "0x00EB": {
      "name": "LostBattle",
      "decomp_name": "BlackOutFromBattle",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Return to Pok\u00e9mon Center or player's house after being defeated"
    },
    "0x00EC": {
      "name": "CheckBattleIsLost",
      "decomp_name": "CheckWonBattle",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if player has been defeated in battle, stores 1 otherwise"
    },
    "0x00ED": {
      "name": "CheckDefeatedPokemon",
      "decomp_name": "CheckLostBattle",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if player defeated or caught the wild Pokemon, stores 1 otherwise"
    },
    "0x00EE": {
      "name": "Check2vs2",
      "decomp_name": "CheckHasTwoAliveMons",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has at least 2 not fainted Pok\u00e9mon, stores 0 otherwise"
    },
    "0x00EF": {
      "name": "DummyTrainerBattle",
      "decomp_name": "StartDummyTrainerBattle",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Starts a battle against trainer with ID 1"
    },
    "0x00F0": {
      "name": "DummyTrainerFlag",
      "decomp_name": "ScrCmd_0F0",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets the trainer flag with the same ID as the invoking event"
    },
    "0x00F1": {
      "name": "DummyTrainerFlagJump",
      "decomp_name": "ScrCmd_0F1",
      "parameters": [
        4
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if trainer flag with the invoking event ID is set"
    },
    "0x00F2": {
      "name": "CMD_242",
      "decomp_name": "ScrCmd_0F2",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00F3": {
      "name": "CMD_243",
      "decomp_name": "ScrCmd_0F3",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00F4": {
      "name": "CMD_244",
      "decomp_name": "ScrCmd_Unused_0F4",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00F5": {
      "name": "CMD_245",
      "decomp_name": "ScrCmd_Unused_0F5",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00F6": {
      "name": "CMD_246",
      "decomp_name": "StartLinkBattle",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00F7": {
      "name": "PokemonContest",
      "decomp_name": "ScrCmd_Unused_0F7",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00F8": {
      "name": "CMD_248",
      "decomp_name": "ScrCmd_0F8",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00F9": {
      "name": "CMD_249",
      "decomp_name": "ScrCmd_0F9",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00FA": {
      "name": "CMD_250",
      "decomp_name": "ScrCmd_0FA",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00FB": {
      "name": "CMD_251",
      "decomp_name": "ScrCmd_0FB",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00FC": {
      "name": "CMD_252",
      "decomp_name": "ScrCmd_0FC",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00FD": {
      "name": "CMD_253",
      "decomp_name": "ScrCmd_0FD",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00FE": {
      "name": "CMD_254",
      "decomp_name": "ScrCmd_0FE",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x00FF": {
      "name": "CMD_255",
      "decomp_name": "ScrCmd_0FF",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0100": {
      "name": "CMD_256",
      "decomp_name": "ScrCmd_100",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0101": {
      "name": "CMD_257",
      "decomp_name": "ScrCmd_101",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0102": {
      "name": "CMD_258",
      "decomp_name": "ScrCmd_102",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0103": {
      "name": "CMD_259",
      "decomp_name": "ScrCmd_103",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0104": {
      "name": "CMD_260",
      "decomp_name": "ScrCmd_104",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0105": {
      "name": "CMD_261",
      "decomp_name": "ScrCmd_105",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0106": {
      "name": "CMD_262",
      "decomp_name": "ScrCmd_106",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0107": {
      "name": "CMD_263",
      "decomp_name": "ScrCmd_107",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0108": {
      "name": "CMD_264",
      "decomp_name": "ScrCmd_108",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0109": {
      "name": "CMD_265",
      "decomp_name": "ScrCmd_109",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x010A": {
      "name": "CMD_266",
      "decomp_name": "ScrCmd_10A",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x010B": {
      "name": "CMD_267",
      "decomp_name": "ScrCmd_10B",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x010C": {
      "name": "CMD_268",
      "decomp_name": "ScrCmd_10C",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x010D": {
      "name": "CMD_269",
      "decomp_name": "ScrCmd_10D",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x010E": {
      "name": "CMD_270",
      "decomp_name": "ScrCmd_10E",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x010F": {
      "name": "CMD_271",
      "decomp_name": "ScrCmd_10F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0110": {
      "name": "CMD_272",
      "decomp_name": "ScrCmd_110",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0111": {
      "name": "FlashContest",
      "decomp_name": "ScrCmd_111",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0112": {
      "name": "EndFlash",
      "decomp_name": "ScrCmd_112",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0113": {
      "name": "CMD_275",
      "decomp_name": "ScrCmd_113",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0114": {
      "name": "CMD_276",
      "decomp_name": "ScrCmd_114",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0115": {
      "name": "CMD_277",
      "decomp_name": "ScrCmd_115",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0116": {
      "name": "ShowLinkCountRecord",
      "decomp_name": "ScrCmd_116",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0117": {
      "name": "CMD_279",
      "decomp_name": "ScrCmd_117",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0118": {
      "name": "CMD_280",
      "decomp_name": "ScrCmd_118",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0119": {
      "name": "CheckPokerus",
      "decomp_name": "CheckPartyPokerus",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if one or more Pok\u00e9mon in the party are infected with the Pok\u00e9rus"
    },
    "0x011A": {
      "name": "GetPokemonGender",
      "decomp_name": "ScrCmd_11A",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if Pok\u00e9mon at Party Position is male, 1 if is female and 2 if gender is unknown"
    },
    "0x011B": {
      "name": "SetWarpData",
      "decomp_name": "ScrCmd_11B",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Map",
        "Flex: Warp",
        "Flex: X",
        "Flex: Y",
        "Flex: Dir"
      ],
      "description": "Changes the data of the special warp in the current map with Map destination header, X and Y coordinates and Dir player direction, saving Warp in the save data as the last used warp"
    },
    "0x011C": {
      "name": "GetElevatorFloor",
      "decomp_name": "GetFloorsAbove",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current floor in a elevator"
    },
    "0x011D": {
      "name": "ElevatorBox",
      "decomp_name": "ShowCurrentFloor",
      "parameters": [
        1,
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "Var: Variable",
        "Flex: Floor"
      ],
      "description": "Shows the current floor number in a box at X and Y coordinates in the screen"
    },
    "0x011E": {
      "name": "CountSinnohDexSeen",
      "decomp_name": "ScrCmd_11E",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total seen Pokemon in the Sinnoh Pok\u00e9dex"
    },
    "0x011F": {
      "name": "CountSinnohDexObtained",
      "decomp_name": "ScrCmd_Unused_11F",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total obtained Pokemon in the Sinnoh Pok\u00e9dex"
    },
    "0x0120": {
      "name": "CountNationalDexSeen",
      "decomp_name": "ScrCmd_120",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total seen Pokemon in the National Pok\u00e9dex"
    },
    "0x0121": {
      "name": "CountNationalDexObtained",
      "decomp_name": "ScrCmd_121",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total obtained Pokemon in the National Pok\u00e9dex"
    },
    "0x0122": {
      "name": "DummyNationalDexCheck",
      "decomp_name": "ScrCmd_Unused_122",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x0123": {
      "name": "GetDexProgressMsg",
      "decomp_name": "ScrCmd_123",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Mode",
        "Var: Variable"
      ],
      "description": "Checks the number of seen Pok\u00e9mon in the Sinnoh Pok\u00e9dex (if Mode is 0) or the number of obtained Pok\u00e9mon in the National Pok\u00e9dex (otherwise) and stores the corresponding Professor message in Variable"
    },
    "0x0124": {
      "name": "WildBattle",
      "decomp_name": "StartWildBattle",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Level"
      ],
      "description": "Starts a wild battle against a Pok\u00e9mon of level Level"
    },
    "0x0125": {
      "name": "FirstBattle",
      "decomp_name": "StartFirstBattle",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Trainer ID"
      ],
      "description": "Starts a first battle against Trainer ID"
    },
    "0x0126": {
      "name": "CatchTutorial",
      "decomp_name": "StartCatchingTutorial",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Starts the catch tutorial"
    },
    "0x0127": {
      "name": "UpdateHoneyTree",
      "decomp_name": "SlatherHoneyTree",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Updates the internal honey tree data for setting up a new wild encounter"
    },
    "0x0128": {
      "name": "CheckHoneyTree",
      "decomp_name": "GetHoneyTreeStatus",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player can spread honey in the tree, stores 2 if player already spread honey and stores 3 if the wild encounter is ready"
    },
    "0x0129": {
      "name": "HoneyTreeBattle",
      "decomp_name": "StartHoneyTreeBattle",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Starts the honey tree wild encounter"
    },
    "0x012A": {
      "name": "StopHoneyTreeAnimation",
      "decomp_name": "ScrCmd_12A",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Removes the honey tree 3D animation"
    },
    "0x012B": {
      "name": "SignatureScreen",
      "decomp_name": "ScrCmd_12B",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Calls the Player Signature screen."
    },
    "0x012C": {
      "name": "CheckSaveGame",
      "decomp_name": "CheckSaveType",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if a different savegame exists and it's not possible to save, stores 1 if no previous savegame exists, stores 2 if game has to save a lot of data and stores 3 if game can perform a quick save"
    },
    "0x012D": {
      "name": "SaveGame",
      "decomp_name": "ScrCmd_12D",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Saves the game and stores 1 in Variable if savegame was succesfully made, stores 0 otherwise"
    },
    "0x012E": {
      "name": "CheckPortrait",
      "decomp_name": "ScrCmd_12E",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Portrait Slot",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the chosen Portrait Slot is empty, stores 1 otherwise"
    },
    "0x012F": {
      "name": "CheckContestPortrait",
      "decomp_name": "ScrCmd_12F",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Contest Portrait Slot",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the chosen Contest Portrait Slot is empty, stores 1 otherwise"
    },
    "0x0130": {
      "name": "CMD_304",
      "decomp_name": "ScrCmd_130",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0131": {
      "name": "GivePoketch",
      "decomp_name": "ScrCmd_131",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Activates the Poketch"
    },
    "0x0132": {
      "name": "PoketchFlag",
      "decomp_name": "ScrCmd_132",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the Poketch, stores 0 otherwise"
    },
    "0x0133": {
      "name": "GivePoketchApp",
      "decomp_name": "RegisterPoketchApp",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: App"
      ],
      "description": "Adds App Poketch application to the player's Poketch"
    },
    "0x0134": {
      "name": "CheckPoketchApp",
      "decomp_name": "CheckPoketchAppRegistered",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: App",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has App Poketch application, stores 0 otherwise"
    },
    "0x0135": {
      "name": "CMD_309",
      "decomp_name": "ScrCmd_135",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0136": {
      "name": "CMD_310",
      "decomp_name": "ScrCmd_136",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0137": {
      "name": "CMD_311",
      "decomp_name": "ScrCmd_Unused_137",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0138": {
      "name": "CMD_312",
      "decomp_name": "ScrCmd_138",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0139": {
      "name": "CMD_313",
      "decomp_name": "ScrCmd_139",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x013A": {
      "name": "CMD_314",
      "decomp_name": "ScrCmd_13A",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x013B": {
      "name": "CMD_315",
      "decomp_name": "ScrCmd_13B",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x013C": {
      "name": "CMD_316",
      "decomp_name": "ScrCmd_13C",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x013D": {
      "name": "CMD_317",
      "decomp_name": "ScrCmd_13D",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x013E": {
      "name": "CMD_318",
      "decomp_name": "ScrCmd_13E",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x013F": {
      "name": "CMD_319",
      "decomp_name": "ScrCmd_13F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0140": {
      "name": "CMD_320",
      "decomp_name": "ScrCmd_140",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0141": {
      "name": "CMD_321",
      "decomp_name": "ScrCmd_141",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0142": {
      "name": "CMD_322",
      "decomp_name": "ScrCmd_142",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0143": {
      "name": "CMD_323",
      "decomp_name": "ScrCmd_143",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0144": {
      "name": "CMD_324",
      "decomp_name": "ScrCmd_144",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0145": {
      "name": "CMD_325",
      "decomp_name": "ScrCmd_145",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0146": {
      "name": "CMD_326",
      "decomp_name": "ScrCmd_146",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0147": {
      "name": "MartScreen",
      "decomp_name": "PokeMartCommon",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Unused"
      ],
      "description": "Opens the common mart shopping screen"
    },
    "0x0148": {
      "name": "SpMartScreen",
      "decomp_name": "PokeMartSpecialties",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID mart shopping screen"
    },
    "0x0149": {
      "name": "GoodsMartScreen",
      "decomp_name": "PokeMartDecor",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID goods mart shopping screen"
    },
    "0x014A": {
      "name": "SealMartScreen",
      "decomp_name": "PokeMartSeal",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID seal mart shopping screen"
    },
    "0x014B": {
      "name": "DummyLostBattle",
      "decomp_name": "ScrCmd_14B",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Return to Pok\u00e9mon Center or player's house after being defeated"
    },
    "0x014C": {
      "name": "SetLastWarp",
      "decomp_name": "ScrCmd_14C",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Warp ID"
      ],
      "description": "Sets map's Warp ID warp as the last used warp"
    },
    "0x014D": {
      "name": "CheckPlayerGender",
      "decomp_name": "GetPlayerGender",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if player is male, stores 1 if female"
    },
    "0x014E": {
      "name": "HealPokemon",
      "decomp_name": "HealParty",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Heals every Pok\u00e9mon in the player's party"
    },
    "0x014F": {
      "name": "DummyUnderground",
      "decomp_name": "ScrCmd_14F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x0150": {
      "name": "CMD_336",
      "decomp_name": "ScrCmd_150",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0151": {
      "name": "CMD_337",
      "decomp_name": "ScrCmd_151",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0152": {
      "name": "SetPlayerDirComm",
      "decomp_name": "ScrCmd_152",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Direction"
      ],
      "description": "Turns player towards the chosen Direction (used during communications with other players)"
    },
    "0x0153": {
      "name": "CMD_339",
      "decomp_name": "ScrCmd_153",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0154": {
      "name": "CMD_340",
      "decomp_name": "LoadTrainerAppearances",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0155": {
      "name": "CMD_341",
      "decomp_name": "ScrCmd_155",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0156": {
      "name": "CMD_342",
      "decomp_name": "ScrCmd_156",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0157": {
      "name": "CheckPokedex",
      "decomp_name": "CheckPokedexAcquired",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the Pok\u00e9dex, stores 0 otherwise"
    },
    "0x0158": {
      "name": "GivePokedex",
      "decomp_name": "GivePokedex",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Gives the Pok\u00e9dex to the player"
    },
    "0x0159": {
      "name": "CheckShoes",
      "decomp_name": "CheckRunningShoesAcquired",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the running shoes, stores 0 otherwise"
    },
    "0x015A": {
      "name": "GiveShoes",
      "decomp_name": "GiveRunningShoes",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Gives the running shoes to the player"
    },
    "0x015B": {
      "name": "CheckBadge",
      "decomp_name": "CheckBadgeAcquired",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Badge ID",
        "Var: Variable"
      ],
      "description": "Checks if player has Badge ID badge, stores boolean result in Variable"
    },
    "0x015C": {
      "name": "GiveBadge",
      "decomp_name": "GiveBadge",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Badge ID"
      ],
      "description": "Gives the player Badge ID badge"
    },
    "0x015D": {
      "name": "CountBadges",
      "decomp_name": "CountBadgesAcquired",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of badges obtained"
    },
    "0x015E": {
      "name": "CheckBag",
      "decomp_name": "CheckBagAcquired",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the bag, stores 0 otherwise"
    },
    "0x015F": {
      "name": "GiveBag",
      "decomp_name": "GiveBag",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Gives the bag to the player"
    },
    "0x0160": {
      "name": "CheckPartner",
      "decomp_name": "CheckHasPartner",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the following event flag is activated, stores 0 otherwise"
    },
    "0x0161": {
      "name": "SetPartner",
      "decomp_name": "SetHasPartner",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Activates the following event flag, so you can no longer use the bike, surf, rock climb..."
    },
    "0x0162": {
      "name": "ClearPartner",
      "decomp_name": "ClearHasPartner",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Deactivates the following event flag, so you can use the bike, surf, rock climb... again"
    },
    "0x0163": {
      "name": "CheckStepFlag",
      "decomp_name": "CheckStepFlag",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Checks if player has moved one step, stores the result in Variable"
    },
    "0x0164": {
      "name": "SetStepFlag",
      "decomp_name": "SetStepFlag",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Activates the Step system flag"
    },
    "0x0165": {
      "name": "ClearStepFlag",
      "decomp_name": "ClearStepFlag",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Clears the Step system flag"
    },
    "0x0166": {
      "name": "CheckGameIsCompleted",
      "decomp_name": "CheckGameCompleted",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the game has been completed, stores 0 otherwise"
    },
    "0x0167": {
      "name": "GameCompleted",
      "decomp_name": "SetGameCompleted",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Activates the completed game flag"
    },
    "0x0168": {
      "name": "DoorAnimation",
      "decomp_name": "ScrCmd_168",
      "parameters": [
        2,
        2,
        2,
        2,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "FLEX",
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Matrix X",
        "u16: Matrix Y",
        "Flex: Map X",
        "Flex: Map Y",
        "u8: Door ID"
      ],
      "description": "Prepares a building located at Map X and Map Y coordinates in a map located at Matrix X and Matrix Y in the current matrix for animation, with Door ID animation ID"
    },
    "0x0169": {
      "name": "WaitDoor",
      "decomp_name": "ScrCmd_169",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Door ID"
      ],
      "description": "Wait animation of building with Door ID animation ID"
    },
    "0x016A": {
      "name": "FreeDoor",
      "decomp_name": "ScrCmd_16A",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Door ID"
      ],
      "description": "Free animation of building with Door ID animation ID"
    },
    "0x016B": {
      "name": "OpenDoor",
      "decomp_name": "ScrCmd_16B",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Door ID"
      ],
      "description": "Triggers first animation of building with Door ID animation ID"
    },
    "0x016C": {
      "name": "CloseDoor",
      "decomp_name": "ScrCmd_16C",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Door ID"
      ],
      "description": "Triggers second animation of building with Door ID animation ID"
    },
    "0x016D": {
      "name": "GetDaycareNames",
      "decomp_name": "BufferDaycareMonNicknames",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Stores first daycare Pok\u00e9mon nickname in string buffer 0, the second daycare Pok\u00e9mon nickname in string buffer 1 and the first Pok\u00e9mon trainer's name in buffer 2"
    },
    "0x016E": {
      "name": "GetDaycareStatus",
      "decomp_name": "GetDaycareState",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "If daycare Pok\u00e9mon have an egg, stores 1 in Variable. Otherwise it stores 0 if no Pok\u00e9mon is in the daycare, 2 if only one Pok\u00e9mon is in the daycare or 3 if there are two Pok\u00e9mon"
    },
    "0x016F": {
      "name": "InitPastoriaGym",
      "decomp_name": "InitPersistedMapFeaturesForPastoriaGym",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Initializes Pastoria Gym internal data and 3D model animations"
    },
    "0x0170": {
      "name": "PastoriaGymButton",
      "decomp_name": "ScrCmd_170",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Checks if a button 3D model is at player position and moves the water level"
    },
    "0x0171": {
      "name": "InitHearthomeGym",
      "decomp_name": "InitPersistedMapFeaturesForHearthomeGym",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Initializes Hearthome Gym internal data and 3D model animations"
    },
    "0x0172": {
      "name": "HearthomeGymLift",
      "decomp_name": "ScrCmd_172",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Triggers a elevator to move up or down"
    },
    "0x0173": {
      "name": "InitCanalaveGym",
      "decomp_name": "InitPersistedMapFeaturesForCanalaveGym",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Initializes Canalave Gym internal data and 3D model animations"
    },
    "0x0174": {
      "name": "InitVeilstoneGym",
      "decomp_name": "InitPersistedMapFeaturesForVeilstoneGym",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Initializes Veilstone Gym internal data and 3D model animations"
    },
    "0x0175": {
      "name": "InitSunyshoreGym",
      "decomp_name": "InitPersistedMapFeaturesForSunyshoreGym",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Room"
      ],
      "description": "Initializes Sunyshore Gym Room map internal data and 3D model animations"
    },
    "0x0176": {
      "name": "SunyshoreGymGear",
      "decomp_name": "ScrCmd_176",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Rotation"
      ],
      "description": "Rotates Sunyshore Gym gears +90\u00ba if Rotation is 0, -90\u00ba if Rotation is 1 or +180\u00ba if Rotation is 2"
    },
    "0x0177": {
      "name": "GetPartyCount",
      "decomp_name": "GetPartyCount",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current number of Pok\u00e9mon in party"
    },
    "0x0178": {
      "name": "BagScreen",
      "decomp_name": "ScrCmd_178",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Mode"
      ],
      "description": "Opens the bag with only Normal pocket avalible if Mode is 0, otherwise only with the Berries pocket avalible"
    },
    "0x0179": {
      "name": "GetBagSelection",
      "decomp_name": "ScrCmd_179",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the selected item after a BagScreen command, or zero if user cancels the selection"
    },
    "0x017A": {
      "name": "CheckPocketItems",
      "decomp_name": "ScrCmd_17A",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pocket",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if bag's Pocket has at least one item there, stores 0 otherwise"
    },
    "0x017B": {
      "name": "TextBerry",
      "decomp_name": "ScrCmd_17B",
      "parameters": [
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Item",
        "Flex: Number"
      ],
      "description": "Stores the name of Item berry in String Buffer, returning a plural noun if Number is greater than 1"
    },
    "0x017C": {
      "name": "TextNature",
      "decomp_name": "ScrCmd_17C",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Nature"
      ],
      "description": "Stores the name of Nature in String Buffer"
    },
    "0x017D": {
      "name": "GetBerryGrowth",
      "decomp_name": "ScrCmd_17D",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the current berry growth phase of the invoking event in Variable"
    },
    "0x017E": {
      "name": "GetBerrySpecies",
      "decomp_name": "ScrCmd_17E",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the berry item ID corresponding on the current invoking event berry tree in Variable"
    },
    "0x017F": {
      "name": "GetBerryMulch",
      "decomp_name": "ScrCmd_17F",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the mulch item ID corresponding on the current invoking event berry tree in Variable"
    },
    "0x0180": {
      "name": "GetBerryDryness",
      "decomp_name": "ScrCmd_180",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the dryness grade corresponding on the current invoking event berry tree in Variable"
    },
    "0x0181": {
      "name": "CheckBerryAmount",
      "decomp_name": "ScrCmd_181",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the amount of berries in the berry tree of the invoking event in Variable"
    },
    "0x0182": {
      "name": "SetBerryMulch",
      "decomp_name": "ScrCmd_182",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Item"
      ],
      "description": "Sets Item mulch to the berry of the invoking event"
    },
    "0x0183": {
      "name": "SetBerrySpecies",
      "decomp_name": "ScrCmd_183",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Item"
      ],
      "description": "Sets Item berry species to the berry of the invoking event"
    },
    "0x0184": {
      "name": "WateringAnimation",
      "decomp_name": "ScrCmd_184",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Action"
      ],
      "description": "Sets the player the watering form if Action is 0, and the normal form if Action is 1"
    },
    "0x0185": {
      "name": "HarvestBerries",
      "decomp_name": "ScrCmd_185",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Picks up the berries of invoking event, and returns the tree to growth phase 0"
    },
    "0x0186": {
      "name": "SetOWDefaultPosition",
      "decomp_name": "SetObjectEventPos",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Sets Event ID spawn position to global coords X and Y"
    },
    "0x0187": {
      "name": "SetOWPosition",
      "decomp_name": "ScrCmd_187",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: X",
        "Flex: Z",
        "Flex: Y",
        "Flex: Dir"
      ],
      "description": "Moves Event ID to global coords X, Y, Z with Dir direction"
    },
    "0x0188": {
      "name": "SetOWDefaultMovement",
      "decomp_name": "SetObjectEventMovementType",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: Movement ID"
      ],
      "description": "Sets Event ID's default move code to Movement ID"
    },
    "0x0189": {
      "name": "SetOWDefaultDirection",
      "decomp_name": "SetObjectEventDir",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: Direction ID"
      ],
      "description": "Sets Event ID's default direction to Direction ID"
    },
    "0x018A": {
      "name": "SetWarpPosition",
      "decomp_name": "SetWarpEventPos",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Warp ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Moves Warp ID to global coords X and Y"
    },
    "0x018B": {
      "name": "SetSpawnablePosition",
      "decomp_name": "ScrCmd_18B",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Spawnable ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Moves Spawnable ID to global coords X and Y"
    },
    "0x018C": {
      "name": "SetOWDirection",
      "decomp_name": "ScrCmd_18C",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: Direction ID"
      ],
      "description": "Sets Event ID's current direction to Direction ID"
    },
    "0x018D": {
      "name": "CMD_397",
      "decomp_name": "ScrCmd_18D",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x018E": {
      "name": "CMD_398",
      "decomp_name": "ScrCmd_18E",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x018F": {
      "name": "CMD_399",
      "decomp_name": "ScrCmd_18F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0190": {
      "name": "WaitTimeOrAB",
      "decomp_name": "WaitABPressTime",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Time"
      ],
      "description": "Stops script execution until Time frames have passed or until user presses A or B buttons"
    },
    "0x0191": {
      "name": "PokemonSelectionScreen",
      "decomp_name": "ScrCmd_191",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Calls the Pok\u00e9mon selection screen"
    },
    "0x0192": {
      "name": "CMD_402",
      "decomp_name": "ScrCmd_192",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0193": {
      "name": "GetSelectedPartySlot",
      "decomp_name": "GetSelectedPartySlot",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the selected party slot in a party Pok\u00e9mon screen, or 0xFF is user cancelled the selection"
    },
    "0x0194": {
      "name": "CMD_404",
      "decomp_name": "ScrCmd_194",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0195": {
      "name": "CMD_405",
      "decomp_name": "ScrCmd_195",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0196": {
      "name": "CMD_406",
      "decomp_name": "ScrCmd_196",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0197": {
      "name": "CMD_407",
      "decomp_name": "ScrCmd_197",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0198": {
      "name": "GetPartyPokemonID",
      "decomp_name": "GetPartyMonSpecies",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Party Position",
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the Pok\u00e9mon at Party Position"
    },
    "0x0199": {
      "name": "CheckTradedPokemon",
      "decomp_name": "ScrCmd_199",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Party Position",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if trainer ID and secret ID of the Pok\u00e9mon at Party Position are the player's ones, stores 1 otherwise"
    },
    "0x019A": {
      "name": "CountPartyBornPokemon",
      "decomp_name": "GetPartyCountHatched",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of Pok\u00e9mon in the Pok\u00e9mon party, excluding the eggs"
    },
    "0x019B": {
      "name": "CountRemainingPokemon",
      "decomp_name": "CountAliveMonsExcept",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable how many alive Pok\u00e9mon would remain in the Pok\u00e9mon party if Pok\u00e9mon at Party Position disappeared"
    },
    "0x019C": {
      "name": "CountTotalAlivePokemon",
      "decomp_name": "ScrCmd_19C",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of Pok\u00e9mon in the Pok\u00e9mon party and PC boxes, excluding the eggs and fainted Pok\u00e9mon"
    },
    "0x019D": {
      "name": "CountPartyEggs",
      "decomp_name": "ScrCmd_19D",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of eggs in the Pok\u00e9mon party"
    },
    "0x019E": {
      "name": "CMD_414",
      "decomp_name": "ScrCmd_19E",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x019F": {
      "name": "CMD_415",
      "decomp_name": "ScrCmd_19F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01A0": {
      "name": "CMD_416",
      "decomp_name": "ScrCmd_1A0",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01A1": {
      "name": "CMD_417",
      "decomp_name": "ScrCmd_Unused_1A1",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01A2": {
      "name": "CMD_418",
      "decomp_name": "ScrCmd_Unused_1A2",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01A3": {
      "name": "TakeMoneyFlex",
      "decomp_name": "RemoveMoney2",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Money"
      ],
      "description": "Subtracts Money from the player's money"
    },
    "0x01A4": {
      "name": "CMD_420",
      "decomp_name": "MoveMonToPartyFromDaycareSlot",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01A5": {
      "name": "CMD_421",
      "decomp_name": "Dummy1A5",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01A6": {
      "name": "CMD_422",
      "decomp_name": "Dummy1A6",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01A7": {
      "name": "CMD_423",
      "decomp_name": "Dummy1A7",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01A8": {
      "name": "CMD_424",
      "decomp_name": "ResetDaycarePersonalityAndStepCounter",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01A9": {
      "name": "CMD_425",
      "decomp_name": "GiveEggFromDaycare",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01AA": {
      "name": "CMD_426",
      "decomp_name": "BufferDaycarePriceBySlot",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01AB": {
      "name": "CompareMoneyFlex",
      "decomp_name": "CheckMoney2",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Money"
      ],
      "description": "Returns 1 to Variable if the player has Money or more money, returns 0 otherwise"
    },
    "0x01AC": {
      "name": "EggHatchScreen",
      "decomp_name": "ScrCmd_1AC",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the egg hatching screen with an egg in the Pok\u00e9mon party that has 0 steps left for hatching"
    },
    "0x01AD": {
      "name": "DummyDaycare",
      "decomp_name": "Dummy1AD",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Unused"
      ],
      "description": "Nothing"
    },
    "0x01AE": {
      "name": "CheckDaycareLevel",
      "decomp_name": "BufferDaycareGainedLevelsBySlot",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Position"
      ],
      "description": "Stores at string buffer 0 the nickname and at string buffer 1 the level of the Pok\u00e9mon at Position daycare position, and also stores the level in Variable"
    },
    "0x01AF": {
      "name": "CMD_431",
      "decomp_name": "BufferPartyMonNicknameReturnSpecies",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01B0": {
      "name": "CMD_432",
      "decomp_name": "StorePartyMonIntoDaycare",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01B1": {
      "name": "UnvanishOverworld",
      "decomp_name": "ScrCmd_1B1",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID"
      ],
      "description": "Makes Event ID visible again if it was invisible"
    },
    "0x01B2": {
      "name": "VanishOverworld",
      "decomp_name": "ScrCmd_1B2",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID"
      ],
      "description": "Makes Event ID invisible, but still collisionable"
    },
    "0x01B3": {
      "name": "MailScreen",
      "decomp_name": "ScrCmd_1B3",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the mail screen"
    },
    "0x01B4": {
      "name": "CountMail",
      "decomp_name": "ScrCmd_1B4",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of mails in the mailbox"
    },
    "0x01B5": {
      "name": "CMD_437",
      "decomp_name": "ScrCmd_1B5",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01B6": {
      "name": "GetTimePeriod",
      "decomp_name": "GetTimeOfDay",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current time period of the day"
    },
    "0x01B7": {
      "name": "GetRandom",
      "decomp_name": "GetRandom",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Range"
      ],
      "description": "Generates a random number between 0 and Range - 1, and stores it in Variable"
    },
    "0x01B8": {
      "name": "DummyGetRandom",
      "decomp_name": "GetRandom2",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Range"
      ],
      "description": "Generates a random number between 0 and Range - 1, and stores it in Variable"
    },
    "0x01B9": {
      "name": "GetPokemonHappiness",
      "decomp_name": "GetPartyMonFriendship",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the happiness of Pok\u00e9mon in Party Position"
    },
    "0x01BA": {
      "name": "AddHappiness",
      "decomp_name": "ScrCmd_1BA",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Happiness",
        "Flex: Party Position"
      ],
      "description": "Adds Happiness to the happiness of Pok\u00e9mon in Party Position"
    },
    "0x01BB": {
      "name": "SubHappiness",
      "decomp_name": "ScrCmd_1BB",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Happiness",
        "Flex: Party Position"
      ],
      "description": "Subs Happiness to the happiness of Pok\u00e9mon in Party Position"
    },
    "0x01BC": {
      "name": "CMD_444",
      "decomp_name": "BufferDaycareNicknameLevelGender",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "Flex: ???",
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x01BD": {
      "name": "GetPlayerDirection",
      "decomp_name": "GetPlayerDir",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the direction the player is looking at"
    },
    "0x01BE": {
      "name": "CMD_446",
      "decomp_name": "GetDaycareCompatibilityLevel",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x01BF": {
      "name": "CMD_447",
      "decomp_name": "CheckDaycareHasEgg",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01C0": {
      "name": "CheckBornPokemonInParty",
      "decomp_name": "CheckPartyHasSpecies",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Pok\u00e9mon is currently in the Pok\u00e9mon party, stores 0 otherwise"
    },
    "0x01C1": {
      "name": "ComparePokemonPlayerSize",
      "decomp_name": "CalcSizeContestResult",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores 0 in Variable if Pok\u00e9mon at Party Position has not a bigger relative size than player's record, stores 1 if it's the same size and stores 2 if it has a bigger relative size"
    },
    "0x01C2": {
      "name": "SetPokemonSizeRecord",
      "decomp_name": "UpdateSizeContestRecord",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Stores the relative size of Pok\u00e9mon at Party Position as player's record"
    },
    "0x01C3": {
      "name": "TextPartyPokemonSize",
      "decomp_name": "BufferPartyPokemonSize",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Integer String Buffer",
        "Flex: Decimal String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the integer part of Pok\u00e9mon at Party Position size in Integer String Buffer (1 to 3 digits) and the decimal part of the size in Decimal String Buffer (1 digit)"
    },
    "0x01C4": {
      "name": "TextPokemonSizeRecord",
      "decomp_name": "BufferSizeContestRecord",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Integer String Buffer",
        "Flex: Decimal String Buffer",
        "Flex: Pok\u00e9mon ID"
      ],
      "description": "Stores the integer part of player's record size, normalized to Pok\u00e9mon ID range, in Integer String Buffer (1 to 3 digits) and the decimal part of the size in Decimal String Buffer (1 digit)"
    },
    "0x01C5": {
      "name": "InitPokemonSizeRecord",
      "decomp_name": "InitSizeContestRecord",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Initializes player's record size with a minimum required value"
    },
    "0x01C6": {
      "name": "CMD_454",
      "decomp_name": "SelectPartyMonMove",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01C7": {
      "name": "CMD_455",
      "decomp_name": "GetSelectedPartyMonMove",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01C8": {
      "name": "GetMoveCount",
      "decomp_name": "GetPartyMonMoveCount",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the total amount of moves that the Pok\u00e9mon at Party Position has"
    },
    "0x01C9": {
      "name": "DeleteMove",
      "decomp_name": "ScrCmd_1C9",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Deletes the move in Move Slot from the Pok\u00e9mon at Party Position"
    },
    "0x01CA": {
      "name": "GetPartyPokemonMove",
      "decomp_name": "GetPartyMonMove",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Stores in Variable the ID of the move in Move Slot from the Pok\u00e9mon at Party Position"
    },
    "0x01CB": {
      "name": "TextPartyPokemonMove",
      "decomp_name": "ScrCmd_1CB",
      "parameters": [
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Stores the name of the move in Move Slot from the Pok\u00e9mon at Party Position in String Buffer"
    },
    "0x01CC": {
      "name": "CMD_460",
      "decomp_name": "GiveJournal",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01CD": {
      "name": "CreateJournalData",
      "decomp_name": "CreateJournalEvent",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "Flex: Unused",
        "Flex: Unused",
        "Flex: Unused"
      ],
      "description": "nan"
    },
    "0x01CE": {
      "name": "CMD_462",
      "decomp_name": "ScrCmd_Unused_1CE",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01CF": {
      "name": "Strength",
      "decomp_name": "Strength",
      "parameters": [
        255,
        1,
        0,
        0,
        1,
        0,
        2,
        1,
        2
      ],
      "parameter_types": [],
      "parameter_values": [
        "Command format depends on the first parameter:\nu8: 0\nu8: 1\nu8: 2"
      ],
      "description": "Function depends on the first parameter:\n0: Disables Strength so player can no longer move boulders\n1: Allows the player to automatically move Strength boulders\n2: Checks if Strength is activated, store answer in Variable"
    },
    "0x01D0": {
      "name": "Flash",
      "decomp_name": "Flash",
      "parameters": [
        255,
        1,
        0,
        0,
        1,
        0,
        2,
        1,
        2
      ],
      "parameter_types": [],
      "parameter_values": [
        "Command format depends on the first parameter:\nu8: 0\nu8: 1\nu8: 2"
      ],
      "description": "Function depends on the first parameter:\n0: Clears the Flash system flag\n1: Sets the Flash system flag\n2: Checks if Flash is activated, store answer in Variable"
    },
    "0x01D1": {
      "name": "Defog",
      "decomp_name": "Defog",
      "parameters": [
        255,
        1,
        0,
        0,
        1,
        0,
        2,
        1,
        2
      ],
      "parameter_types": [],
      "parameter_values": [
        "Command format depends on the first parameter:\nu8: 0\nu8: 1\nu8: 2"
      ],
      "description": "Function depends on the first parameter:\n0: Clears the Defog system flag\n1: Sets the Defog system flag\n2: Checks if Defog is activated, store answer in Variable"
    },
    "0x01D2": {
      "name": "CMD_466",
      "decomp_name": "ScrCmd_1D2",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01D3": {
      "name": "CMD_467",
      "decomp_name": "CanFitAccessory",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01D4": {
      "name": "CMD_468",
      "decomp_name": "ScrCmd_Unused_1D4",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01D5": {
      "name": "CMD_469",
      "decomp_name": "ScrCmd_1D5",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01D6": {
      "name": "CMD_470",
      "decomp_name": "CheckBackdrop",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01D7": {
      "name": "CMD_471",
      "decomp_name": "ScrCmd_1D7",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01D8": {
      "name": "CMD_472",
      "decomp_name": "ScrCmd_1D8",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01D9": {
      "name": "CMD_473",
      "decomp_name": "ScrCmd_1D9",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x01DA": {
      "name": "CMD_474",
      "decomp_name": "ScrCmd_1DA",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01DB": {
      "name": "CMD_475",
      "decomp_name": "ScrCmd_1DB",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Init",
        "u16: Mode"
      ],
      "description": "nan"
    },
    "0x01DC": {
      "name": "CMD_476",
      "decomp_name": "ScrCmd_1DC",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01DD": {
      "name": "CMD_477",
      "decomp_name": "ScrCmd_1DD",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: ???",
        "Flex: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x01DE": {
      "name": "CMD_478",
      "decomp_name": "ScrCmd_1DE",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "Var: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x01DF": {
      "name": "CMD_479",
      "decomp_name": "ScrCmd_1DF",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x01E0": {
      "name": "CMD_480",
      "decomp_name": "ScrCmd_1E0",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x01E1": {
      "name": "CMD_481",
      "decomp_name": "ScrCmd_1E1",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x01E2": {
      "name": "CMD_482",
      "decomp_name": "ScrCmd_1E2",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x01E3": {
      "name": "CMD_483",
      "decomp_name": "ScrCmd_1E3",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x01E4": {
      "name": "CMD_484",
      "decomp_name": "ScrCmd_1E4",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x01E5": {
      "name": "CMD_485",
      "decomp_name": "IncrementGameRecord",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Stat ID"
      ],
      "description": "Increments the chosen Game Stat by 1."
    },
    "0x01E6": {
      "name": "CMD_486",
      "decomp_name": "ScrCmd_Unused_1E6",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: ???",
        "Var: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x01E7": {
      "name": "CMD_487",
      "decomp_name": "ScrCmd_Unused_1E7",
      "parameters": [
        2,
        2,
        2,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: ???",
        "u16: ???",
        "u16: ???",
        "u8: ???"
      ],
      "description": "nan"
    },
    "0x01E8": {
      "name": "CheckCompleteSinnohDex",
      "decomp_name": "CheckLocalDexCompleted",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if every Pok\u00e9mon in the Sinnoh Pok\u00e9dex has been seen, stores 0 otherwise"
    },
    "0x01E9": {
      "name": "CheckCompleteNationalDex",
      "decomp_name": "CheckNationalDexCompleted",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if every Pok\u00e9mon in the National Pok\u00e9dex has been caught, stores 0 otherwise"
    },
    "0x01EA": {
      "name": "RegisterSinnohPokedex",
      "decomp_name": "ScrCmd_1EA",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01EB": {
      "name": "RegisterNationalPokedex",
      "decomp_name": "ScrCmd_1EB",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01EC": {
      "name": "CMD_492",
      "decomp_name": "AddTrophyGardenMon",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01ED": {
      "name": "CMD_493",
      "decomp_name": "GetTrophyGardenSlot1Species",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01EE": {
      "name": "CMD_494",
      "decomp_name": "ScrCmd_1EE",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01EF": {
      "name": "CMD_495",
      "decomp_name": "ScrCmd_Unused_1EF",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01F0": {
      "name": "CMD_496",
      "decomp_name": "ScrCmd_1F0",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x01F1": {
      "name": "GetFossilCount",
      "decomp_name": "ScrCmd_1F1",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of fossils in the bag"
    },
    "0x01F2": {
      "name": "CMD_498",
      "decomp_name": "ScrCmd_1F2",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Does absolutely nothing."
    },
    "0x01F3": {
      "name": "CMD_499",
      "decomp_name": "ScrCmd_1F3",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Does absolutely nothing."
    },
    "0x01F4": {
      "name": "GetPokeNameFromFossil",
      "decomp_name": "ScrCmd_1F4",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Item ID"
      ],
      "description": "Stores in Variable the ID of the Pok\u00e9mon to which Item ID fossil belongs"
    },
    "0x01F5": {
      "name": "CheckFossil",
      "decomp_name": "ScrCmd_1F5",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Position",
        "Var: Item ID",
        "Flex: Amount"
      ],
      "description": "Stores in Item ID the ID of the first fossil in the bag that the player has at least Amount quantity of, and stores in Position the amount of fossils in the bag before the first fossil, that met the quantity condition"
    },
    "0x01F6": {
      "name": "CountPokemonUnderLevel",
      "decomp_name": "ScrCmd_1F6",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Level"
      ],
      "description": "Stores in Variable the amount of Pok\u00e9mon in party whose level is equal or lower than Level"
    },
    "0x01F7": {
      "name": "SurvivePoison",
      "decomp_name": "SurvivePoison",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "If Pok\u00e9mon at Party Position is poisoned and at 1 HP, it cures the poison and stores 1 in Variable, otherwise it stores 0"
    },
    "0x01F8": {
      "name": "FinishOverworldScreen",
      "decomp_name": "ScrCmd_1F8",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Terminates map overworld process"
    },
    "0x01F9": {
      "name": "DummyGetVar",
      "decomp_name": "Dummy1F9",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Does nothing."
    },
    "0x01FA": {
      "name": "MessageAllFromArchive",
      "decomp_name": "ScrCmd_Unused_1FA",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Text Archive",
        "Flex: Text Slot"
      ],
      "description": "Display line Text Slot from Text Archive text file, all at once"
    },
    "0x01FB": {
      "name": "MessageFromArchive",
      "decomp_name": "ScrCmd_1FB",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Text Archive",
        "Flex: Text Slot"
      ],
      "description": "Display line Text Slot from Text Archive text file"
    },
    "0x01FC": {
      "name": "CMD_508",
      "decomp_name": "ScrCmd_Unused_1FC",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: ???",
        "u16: ???",
        "u16: ???",
        "u16: ???"
      ],
      "description": "nan"
    },
    "0x01FD": {
      "name": "CMD_509",
      "decomp_name": "ScrCmd_Unused_1FD",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: ???",
        "u16: ???",
        "u16: ???",
        "u16: ???"
      ],
      "description": "nan"
    },
    "0x01FE": {
      "name": "CMD_510",
      "decomp_name": "ScrCmd_1FE",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???"
      ],
      "description": "nan"
    },
    "0x01FF": {
      "name": "CMD_511",
      "decomp_name": "ScrCmd_1FF",
      "parameters": [
        1,
        2,
        2,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???",
        "Var: Variable",
        "u16: ???",
        "u8: ???"
      ],
      "description": "nan"
    },
    "0x0200": {
      "name": "GetPreviousHeaderID",
      "decomp_name": "GetPreviousMapID",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the header ID of the previous map accessed"
    },
    "0x0201": {
      "name": "GetCurrentHeaderID",
      "decomp_name": "GetCurrentMapID",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current header ID"
    },
    "0x0202": {
      "name": "SetSafariFlag",
      "decomp_name": "ScrCmd_202",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Flag"
      ],
      "description": "If Flag is 0 safari encounters are activated, if Flag is 1 safari encounters are deactivated"
    },
    "0x0203": {
      "name": "BattleRoomWarp",
      "decomp_name": "ScrCmd_203",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "FLEX",
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Map",
        "u16: Door",
        "Flex: X",
        "Flex: Y",
        "u16: Dir"
      ],
      "description": "Warps to X and Y position of Map header with initial Dir direction, using Door warp"
    },
    "0x0204": {
      "name": "ExitBattleRoom",
      "decomp_name": "ScrCmd_204",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Returns to previous map once wireless communication ends"
    },
    "0x0205": {
      "name": "GeonetScreen",
      "decomp_name": "ScrCmd_205",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the Geonet screen"
    },
    "0x0206": {
      "name": "GreatMarshBinoculars",
      "decomp_name": "StartGreatMarshLookout",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Brings up the view of the Great Marsh and the daily Pokemon as seen from the viewing platform."
    },
    "0x0207": {
      "name": "CMD_519",
      "decomp_name": "ScrCmd_207",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0208": {
      "name": "ShowPokemonPic",
      "decomp_name": "DrawPokemonPreview",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Gender"
      ],
      "description": "Opens a window with the picture of Pok\u00e9mon with Gender gender and registers the Pok\u00e9mon in the Pok\u00e9dex as seen"
    },
    "0x0209": {
      "name": "HidePokemonPic",
      "decomp_name": "ScrCmd_209",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Hides the window of a Pok\u00e9mon picture"
    },
    "0x020A": {
      "name": "CMD_522",
      "decomp_name": "ScrCmd_20A",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x020B": {
      "name": "CMD_523",
      "decomp_name": "ScrCmd_20B",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x020C": {
      "name": "CMD_524",
      "decomp_name": "ScrCmd_20C",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x020D": {
      "name": "SpearPillarSequence",
      "decomp_name": "ScrCmd_20D",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Operation to perform",
        "Var: Variable"
      ],
      "description": "Starts a pre-scripted Spear Pillar sequence"
    },
    "0x020E": {
      "name": "KeepSafariTrain",
      "decomp_name": "InitPersistedMapFeaturesForGreatMarsh",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets the safari train in the same sector where it was the last time it was moved"
    },
    "0x020F": {
      "name": "SafariTrainAnimation",
      "decomp_name": "ScrCmd_20F",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "INTEGER"
      ],
      "parameter_values": [
        "Var: Position",
        "u16: Move Type"
      ],
      "description": "Moves the safari train 3D model from its current position to Position safari sector, with the player not riding on it if Move Type is 3 or the player riding on the train otherwise"
    },
    "0x0210": {
      "name": "CheckSafariTrainMovement",
      "decomp_name": "ScrCmd_210",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: Position",
        "Var: Variable"
      ],
      "description": "Stores 5 in Variable if the safari train is currently at Position safari sector, stores 6 otherwise"
    },
    "0x0211": {
      "name": "IgnoreHeights",
      "decomp_name": "SetPlayerHeightCalculationEnabled",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Flag"
      ],
      "description": "If Flag Value is 0, the player becomes able to walk ignoring terrain heights, otherwise the flag is cleared and the mode is deactivated"
    },
    "0x0212": {
      "name": "GetPokemonNature",
      "decomp_name": "ScrCmd_212",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the nature of the Pok\u00e9mon at Party Position"
    },
    "0x0213": {
      "name": "CheckPartyNature",
      "decomp_name": "ScrCmd_213",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Nature ID"
      ],
      "description": "Stores in Variable the position of the first Pok\u00e9mon with a given Nature ID in the player's party."
    },
    "0x0214": {
      "name": "CheckSpiritombCounter",
      "decomp_name": "GetSpiritombCounter",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current underground talk counter value"
    },
    "0x0215": {
      "name": "ClearAmitySquareSteps",
      "decomp_name": "ClearAmitySquareStepCount",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets the Amity Square step counter to zero"
    },
    "0x0216": {
      "name": "CheckAmitySquareSteps",
      "decomp_name": "GetAmitySquareStepCount",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of steps walked in the Amity Square"
    },
    "0x0217": {
      "name": "GetAmitySquareAccessory",
      "decomp_name": "CalcAmitySquareFoundAccessory",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Pok\u00e9mon"
      ],
      "description": "Stores in Variable a random accessory item ID corresponding to a specific Pok\u00e9mon"
    },
    "0x0218": {
      "name": "CMD_536",
      "decomp_name": "ScrCmd_218",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0219": {
      "name": "CMD_537",
      "decomp_name": "SetNewsPressDeadline",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x021A": {
      "name": "CMD_538",
      "decomp_name": "GetNewsPressDeadline",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x021B": {
      "name": "CMD_539",
      "decomp_name": "EnableSwarms",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x021C": {
      "name": "AddRoamingPokemon",
      "decomp_name": "ActivateRoamingPokemon",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ID"
      ],
      "description": "Activates a roaming Pokemon depending on the ID"
    },
    "0x021D": {
      "name": "UnionGroup",
      "decomp_name": "ScrCmd_21D",
      "parameters": [
        255,
        2,
        0,
        2,
        2,
        1,
        0,
        2,
        0,
        3,
        0,
        4,
        1,
        2
      ],
      "parameter_types": [],
      "parameter_values": [
        "Command format depends on the first parameter:\nu16: 0"
      ],
      "description": "Function depends on the first parameter:\n0: Checks if group ID exists, returns answer in Variable\n1: Checks if group ID is accesible, returns answer in Variable\n2: Writes group ID name in String Buffer\n3: Writes leader's name of Group ID in String Buffer\n4: Opens keyboard, stores 1 in Variable if user cancels, 2 if group name already exists, 0 otherwise\n5: Enter in group ID\n6: Creates a group"
    },
    "0x021E": {
      "name": "CMD_542",
      "decomp_name": "Dummy21E",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x021F": {
      "name": "CMD_543",
      "decomp_name": "ScrCmd_21F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0220": {
      "name": "CMD_544",
      "decomp_name": "ScrCmd_220",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0221": {
      "name": "RememberMoveScreen",
      "decomp_name": "ScrCmd_221",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Shows a list of moves that the Pok\u00e9mon at the selected Party Position can remember."
    },
    "0x0222": {
      "name": "DummyMoveCommand",
      "decomp_name": "ScrCmd_222",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Empty code."
    },
    "0x0223": {
      "name": "ResponseRememberMove",
      "decomp_name": "ScrCmd_223",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Response"
      ],
      "description": "Assigns 0 to Response variable if the last Remember Move screen taught a move to one of the player's Pok\u00e9mon. Assigns 0xFF if player cancelled the operation."
    },
    "0x0224": {
      "name": "TeachMoveScreen",
      "decomp_name": "ScrCmd_224",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Move ID"
      ],
      "description": "Shows a list with just the chosen Move ID, to be taught to Pok\u00e9mon at given Party Position."
    },
    "0x0225": {
      "name": "ResponseTeachMove",
      "decomp_name": "ScrCmd_225",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Response"
      ],
      "description": "Assigns 0 to Response variable if the last Teach Move screen taught a new move to one of the player's Pok\u00e9mon. Assigns 0xFF if player cancelled the operation."
    },
    "0x0226": {
      "name": "InitTrade",
      "decomp_name": "StartNpcTrade",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Trade ID"
      ],
      "description": "Initializes Trade ID trade data"
    },
    "0x0227": {
      "name": "GetOfferedPokemon",
      "decomp_name": "GetNpcTradeSpecies",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the offered Pok\u00e9mon of the current trade data"
    },
    "0x0228": {
      "name": "GetRequestedPokemon",
      "decomp_name": "GetNpcTradeRequestedSpecies",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the requested Pok\u00e9mon of the current trade data"
    },
    "0x0229": {
      "name": "TradePokemonScreen",
      "decomp_name": "ScrCmd_229",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position"
      ],
      "description": "Opens the trade Pok\u00e9mon screen, giving the Pok\u00e9mon at Party Position and receiving the offered Pok\u00e9mon of the current trade data"
    },
    "0x022A": {
      "name": "EndTrade",
      "decomp_name": "FinishNpcTrade",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Frees the current trade data from the memory"
    },
    "0x022B": {
      "name": "ActivateInternationalDex",
      "decomp_name": "ScrCmd_22B",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Allows the Pok\u00e9dex to show international entries for some registered Pok\u00e9mon"
    },
    "0x022C": {
      "name": "ActivateDimorphismDex",
      "decomp_name": "ScrCmd_22C",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Allows the Pok\u00e9dex to compare genders between Pok\u00e9mon"
    },
    "0x022D": {
      "name": "NationalDex",
      "decomp_name": "GetSetNationalDexEnabled",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Command format depends on the first parameter:\nu8: 1",
        "Var: Unused",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n1: Activates the National Pok\u00e9dex mode\n2: Stores 1 in Variable if player has the National Pok\u00e9dex, otherwise it stores 0"
    },
    "0x022E": {
      "name": "CountPokemonRibbons",
      "decomp_name": "ScrCmd_22E",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the amount of ribbons that the Pok\u00e9mon in Party Position has"
    },
    "0x022F": {
      "name": "CountPartyRibbons",
      "decomp_name": "ScrCmd_22F",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total amount of different ribbons in the current Pok\u00e9mon party"
    },
    "0x0230": {
      "name": "CheckRibbon",
      "decomp_name": "GetPartyMonRibbon",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position",
        "Flex: Ribbon"
      ],
      "description": "Stores 1 in Variable if the Pok\u00e9mon in Party Position has the Ribbon ribbon, stores 0 otherwise"
    },
    "0x0231": {
      "name": "GiveRibbon",
      "decomp_name": "SetPartyMonRibbon",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Ribbon"
      ],
      "description": "Gives the Ribbon ribbon to Pok\u00e9mon in Party Position"
    },
    "0x0232": {
      "name": "TextRibbon",
      "decomp_name": "ScrCmd_232",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Ribbon"
      ],
      "description": "Stores the name of the Ribbon in String Buffer"
    },
    "0x0233": {
      "name": "CountPokemonEVs",
      "decomp_name": "ScrCmd_233",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the total amount of effort values of Pok\u00e9mon in Party Position"
    },
    "0x0234": {
      "name": "GetDayOfWeek",
      "decomp_name": "GetDayOfWeek",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current day of the week"
    },
    "0x0235": {
      "name": "CMD_565",
      "decomp_name": "ScrCmd_235",
      "parameters": [
        255,
        2,
        0,
        1,
        2,
        1,
        3,
        2,
        2,
        2,
        2,
        0,
        3,
        3,
        2,
        2,
        2,
        4,
        2,
        2,
        2,
        5,
        3,
        2,
        2,
        2,
        6,
        1,
        2
      ],
      "parameter_types": [],
      "parameter_values": [
        "Command format depends on the first parameter:\nu16: 0"
      ],
      "description": "nan"
    },
    "0x0236": {
      "name": "CMD_566",
      "decomp_name": "ScrCmd_236",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x0237": {
      "name": "CMD_567",
      "decomp_name": "ScrCmd_237",
      "parameters": [
        2,
        2,
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "VARIABLE",
        "VARIABLE",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Command format depends on the first parameter:\nu16: 0",
        "Flex: ???",
        "Var: Variable",
        "Var: Variable",
        "Flex: ???",
        "Flex: ???",
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x0238": {
      "name": "CMD_568",
      "decomp_name": "ScrCmd_238",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Variable: ???"
      ],
      "description": "nan"
    },
    "0x0239": {
      "name": "ShowRulesList",
      "decomp_name": "ScrCmd_239",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "???"
    },
    "0x023A": {
      "name": "GetPokemonFootprint",
      "decomp_name": "GetPartyMonFootprintType",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: ???",
        "Var: ???",
        "Flex: Party Position"
      ],
      "description": "???"
    },
    "0x023B": {
      "name": "PCHealAnimation",
      "decomp_name": "ScrCmd_23B",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9Balls"
      ],
      "description": "Triggers the Pok\u00e9mon Center healing animation with Pok\u00e9Balls number of player's Pok\u00e9mon"
    },
    "0x023C": {
      "name": "ElevatorAnimation",
      "decomp_name": "ScrCmd_23C",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Direction",
        "Flex: Count"
      ],
      "description": "Triggers the animation of building #498 up (if Direction is 0) or down (if Direction is 1) Count consecutive times"
    },
    "0x023D": {
      "name": "ShipAnimation",
      "decomp_name": "ScrCmd_23D",
      "parameters": [
        1,
        1,
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Ship Direction",
        "u8: Player Orientation",
        "u16: Destination Header",
        "u16: Destination X",
        "u16: Destination Z"
      ],
      "description": "???"
    },
    "0x023E": {
      "name": "MysteryGiftGive",
      "decomp_name": "MysteryGiftGive",
      "parameters": [
        255,
        2,
        0,
        0,
        1,
        1,
        2,
        2,
        1,
        2,
        3,
        1,
        2,
        4,
        0,
        5,
        2,
        2,
        2,
        6,
        2,
        2,
        2,
        7,
        0,
        8,
        0
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE",
        "INTEGER",
        "INTEGER",
        "VARIABLE",
        "INTEGER",
        "INTEGER",
        "VARIABLE",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE",
        "VARIABLE",
        "INTEGER",
        "INTEGER",
        "VARIABLE",
        "VARIABLE",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "Command format depends on the first parameter:\nu16: 0\nu16: 1",
        "Var: Variable",
        "Var: Variable",
        "Var: Variable",
        "Var: Text File",
        "Var: Text Line",
        "Var: Text File",
        "Var: Text Line"
      ],
      "description": "Function depends on the first parameter:\n0: Initializes the data for receiving a Mystery Gift\n1: Checks if there is a Mystery Gift, stores answer in Variable\n2: Stores the Mystery Gift ID in Variable\n3: Checks if player can receive the Mystery Gift, stores answer in Variable\n4: Gives the Mystery Gift to the player\n5: Shows the succeed text at Text File file and Text Line slot\n6: Shows the unable text at Text File file and Text Line slot\n7: Ends the Mystery Gift process\n8: Saves data and ends the Mystery Gift process"
    },
    "0x023F": {
      "name": "CMD_575",
      "decomp_name": "Dummy23F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0240": {
      "name": "CMD_576",
      "decomp_name": "Dummy240",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0241": {
      "name": "CMD_577",
      "decomp_name": "Dummy241",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0242": {
      "name": "CMD_578",
      "decomp_name": "Dummy242",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0243": {
      "name": "CMD_579",
      "decomp_name": "ScrCmd_243",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0244": {
      "name": "CMD_580",
      "decomp_name": "ScrCmd_244",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0245": {
      "name": "CMD_581",
      "decomp_name": "ScrCmd_245",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0246": {
      "name": "CheckVersion",
      "decomp_name": "ScrCmd_246",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Returns 0xC to Variable"
    },
    "0x0247": {
      "name": "FirstPokemonInParty",
      "decomp_name": "GetFirstNonEggInParty",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the slot of the first Pok\u00e9mon in the party that is not an egg"
    },
    "0x0248": {
      "name": "GetPartyPokemonTypes",
      "decomp_name": "ScrCmd_248",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Type1",
        "Var: Type2",
        "Flex: Party Slot"
      ],
      "description": "Gets the types of the Pok\u00e9mon at a given Party Slot and stores them in Type1 and Type2 respectively."
    },
    "0x0249": {
      "name": "CMD_585",
      "decomp_name": "ScrCmd_249",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x024A": {
      "name": "CMD_586",
      "decomp_name": "GetCapturedFlagCount",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x024B": {
      "name": "CMD_587",
      "decomp_name": "ScrCmd_24B",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x024C": {
      "name": "CMD_588",
      "decomp_name": "ScrCmd_24C",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x024D": {
      "name": "CMD_589",
      "decomp_name": "ScrCmd_24D",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x024E": {
      "name": "GetLottoNumber",
      "decomp_name": "GetJubilifeLotteryTrainerID",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores Lotto random number in Variable"
    },
    "0x024F": {
      "name": "CheckWinLotto",
      "decomp_name": "CheckForJubilifeLotteryWinner",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: MatchPos",
        "Var: Digits",
        "Var: PC",
        "Flex: Winning Number"
      ],
      "description": "Takes a Winning Number as input and responds as follows.\nIf no matching Pok\u00e9mon could be found or an error occurs: \nMatchPos: 0; Digits: 0; PC: 0.\n\nFor all other cases:\n\nIf the matching Pok\u00e9mon is in the Player's party, PC will be assigned 0.\nOtherwise, if it's in the Player's Storage System, PC will be assigned 1.\n\nMatchPos stores the zero-based position of the winning Pok\u00e9mon (either as Party pos or Storage System pos, depending on the value of PC).\n\nWhen there's a match, the Digits var is assigned the number of matching digits of the Winning Pok\u00e9mon's PID.\nIn case of multiple matches, priority is always given to the one with the most matching digits."
    },
    "0x0250": {
      "name": "InitLotto",
      "decomp_name": "RandomizeJubilifeLottery",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Generates two random numbers and assigns them to two system lottery variables."
    },
    "0x0251": {
      "name": "CMD_593",
      "decomp_name": "BufferMonNicknameFromPC",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0252": {
      "name": "CountPCFreeSpace",
      "decomp_name": "GetPCBoxesFreeSlotCount",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the amount of free Pok\u00e9mon slots in PC boxes"
    },
    "0x0253": {
      "name": "CMD_595",
      "decomp_name": "SetClearInCatchingShowFlag",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0254": {
      "name": "CMD_596",
      "decomp_name": "CheckHasEnoughMonForCatchingShow",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0255": {
      "name": "CMD_597",
      "decomp_name": "MoveCatchingShowMonsToPCBoxes",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0256": {
      "name": "CMD_598",
      "decomp_name": "CalcCatchingShowPoints",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0257": {
      "name": "CMD_599",
      "decomp_name": "ShowAccessoryShop",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0258": {
      "name": "CMD_600",
      "decomp_name": "ScrCmd_258",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0259": {
      "name": "CMD_601",
      "decomp_name": "ScrCmd_259",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x025A": {
      "name": "CMD_602",
      "decomp_name": "ScrCmd_25A",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x025B": {
      "name": "CMD_603",
      "decomp_name": "InitPersistedMapFeaturesForPlatformLift",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x025C": {
      "name": "CMD_604",
      "decomp_name": "TriggerPlatformLift",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x025D": {
      "name": "CMD_605",
      "decomp_name": "CheckPlatformLiftNotUsedWhenEnteredMap",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "???: Variable"
      ],
      "description": "nan"
    },
    "0x025E": {
      "name": "CMD_606",
      "decomp_name": "ScrCmd_25E",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Its behavior varies depending on the value of flag 2429.\n\n0: Before rescuing the Lake Trio from Galactic Labs. It sets up the machines and animates them.\n1: After rescuing the Lake Trio from Galactic Labs. The machines are off."
    },
    "0x025F": {
      "name": "CMD_607",
      "decomp_name": "ScrCmd_25F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Waits for the Galactic Labs machines to complete their animations, then shuts them all down."
    },
    "0x0260": {
      "name": "CMD_608",
      "decomp_name": "ScrCmd_260",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0261": {
      "name": "TextAccessory",
      "decomp_name": "BufferAccessoryName",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Accesory"
      ],
      "description": "Stores Accessory's name in String Buffer"
    },
    "0x0262": {
      "name": "CheckPokemonInParty",
      "decomp_name": "CheckPartyHasSpecies2",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Pok\u00e9mon (or its egg) is currently in the Pok\u00e9mon party, stores 0 otherwise"
    },
    "0x0263": {
      "name": "SetDeoxysForm",
      "decomp_name": "ChangeDeoxysForm",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Form"
      ],
      "description": "Sets every Deoxys in the Pok\u00e9mon party the Form form"
    },
    "0x0264": {
      "name": "CombeeCheck",
      "decomp_name": "CheckPartyCombeeGenderCount",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Checks if player has a Combee/Vespiquen in their party and stores the result in Variable:\nStores 2 if player has at least one male and one female;\nStores 1 if player has one male only or one female only;\nStores 0 if no Combee is found."
    },
    "0x0265": {
      "name": "CMD_613",
      "decomp_name": "HidePoketch",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0266": {
      "name": "CMD_614",
      "decomp_name": "ShowPoketch",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0267": {
      "name": "SlotMachine",
      "decomp_name": "ScrCmd_267",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": "???"
    },
    "0x0268": {
      "name": "GetHour",
      "decomp_name": "GetHour",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores current hour from RTC in Variable"
    },
    "0x0269": {
      "name": "ShakeOverworld",
      "decomp_name": "ScrCmd_269",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: Count",
        "Flex: Speed",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Makes Event ID overworld to shake Count times in Time frames, moving X horizontally and Y vertically each shake"
    },
    "0x026A": {
      "name": "BlinkOverworld",
      "decomp_name": "ScrCmd_26A",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Event ID",
        "Flex: Count",
        "Flex: Time"
      ],
      "description": "???"
    },
    "0x026B": {
      "name": "CheckRegis",
      "decomp_name": "CheckHasAllLegendaryTitansInParty",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the 3 Regis in the party, stores 0 otherwise"
    },
    "0x026C": {
      "name": "CMD_620",
      "decomp_name": "TryGetRandomMassageGirlAccessory",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x026D": {
      "name": "MessageUnown",
      "decomp_name": "ScrCmd_26D",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Text Slot"
      ],
      "description": "Display line Text Slot from the text file with the Unown font"
    },
    "0x026E": {
      "name": "CheckGBACartidge",
      "decomp_name": "GetGBACartridgeVersion",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the current GBA cartridge ID in Variable"
    },
    "0x026F": {
      "name": "ResetSpiritombCounter",
      "decomp_name": "ClearSpiritombCounter",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Resets the underground talking counter to zero"
    },
    "0x0270": {
      "name": "SetMatrixAlternativeMap",
      "decomp_name": "SetHiddenLocation",
      "parameters": [
        2,
        1
      ],
      "parameter_types": [
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "Flex: Alternative ID",
        "u8: Status"
      ],
      "description": "Permanently changes a worldmap matrix cell corresponding to Alternative ID if Status is 1, reverts the change if 0"
    },
    "0x0271": {
      "name": "WriteStone",
      "decomp_name": "ScrCmd_271",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Opens the keyboard for writing in the Route 224 stone, stores 1 in Variable if user cancels the proccess"
    },
    "0x0272": {
      "name": "TextStoneName",
      "decomp_name": "ScrCmd_272",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Stores the name that the player wrote in the Route 224 stone in String Buffer"
    },
    "0x0273": {
      "name": "CMD_627",
      "decomp_name": "ScrCmd_273",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0274": {
      "name": "CMD_628",
      "decomp_name": "HasCoinsFromValue",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0275": {
      "name": "CMD_629",
      "decomp_name": "CheckBonusRoundStreak",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0276": {
      "name": "CMD_630",
      "decomp_name": "GoToIfCannotAddCoins",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0277": {
      "name": "CMD_631",
      "decomp_name": "GetDailyRandomLevel",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0278": {
      "name": "CMD_632",
      "decomp_name": "ScrCmd_278",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Result",
        "Flex: Party Slot"
      ],
      "description": "Stores into Result the level of the Pok\u00e9mon at a given Party Slot."
    },
    "0x0279": {
      "name": "CMD_633",
      "decomp_name": "ScrCmd_Unused_279",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x027A": {
      "name": "SunyshoreBinoculars",
      "decomp_name": "ScrCmd_27A",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Brings up the view of the Pokemon League Castle as seen from the Vista Lighthouse in Sunyshore City."
    },
    "0x027B": {
      "name": "CMD_635",
      "decomp_name": "InitDailyRandomLevel",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x027C": {
      "name": "CMD_636",
      "decomp_name": "ScrCmd_27C",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x027D": {
      "name": "CMD_637",
      "decomp_name": "ScrCmd_27D",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x027E": {
      "name": "CMD_638",
      "decomp_name": "CheckIsDepartmentStoreRegular",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x027F": {
      "name": "CMD_639",
      "decomp_name": "ScrCmd_27F",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0280": {
      "name": "TextNumberSp",
      "decomp_name": "ScrCmd_280",
      "parameters": [
        1,
        2,
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Number",
        "u8: Alignment Type",
        "u8: Digits"
      ],
      "description": "Stores a Number in String Buffer with Alignment Type alignment and Digits length"
    },
    "0x0281": {
      "name": "CMD_641",
      "decomp_name": "ScrCmd_281",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0282": {
      "name": "CheckBirthday",
      "decomp_name": "ScrCmd_282",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the current day is the player's birthday, stores 0 otherwise"
    },
    "0x0283": {
      "name": "MusicVolumeSet",
      "decomp_name": "SetInitialVolumeForSequence",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Music ID",
        "Flex: Volume"
      ],
      "description": "Identifies the BGM Player which is playing Music ID and sets its Volume"
    },
    "0x0284": {
      "name": "CountSeenUnown",
      "decomp_name": "GetUnownFormsSeenCount",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of different seen Unown forms"
    },
    "0x0285": {
      "name": "CMD_645",
      "decomp_name": "ScrCmd_285",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0286": {
      "name": "CMD_646",
      "decomp_name": "GetUndergroundItemsGivenAway",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0287": {
      "name": "CMD_647",
      "decomp_name": "GetUndergroundFossilsUnearthed",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0288": {
      "name": "CMD_648",
      "decomp_name": "GetUndergroundTrapsSet",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0289": {
      "name": "CMD_649",
      "decomp_name": "ScrCmd_289",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x028A": {
      "name": "CMD_650",
      "decomp_name": "ScrCmd_28A",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x028B": {
      "name": "CheckEventValidity",
      "decomp_name": "CheckDistributionEvent",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: Event ID",
        "Var: Variable"
      ],
      "description": "Stores 1 into Variable in the following cases:\n- Variable 16451 [0x4043] equals 4617\n- Variable 16452 [0x4044] equals 4370\n- Variable 16453 [0x4045] equals 4387\n- Variable 16454 [0x4046] equals 4355\n\nStores 0 otherwise."
    },
    "0x028C": {
      "name": "CMD_652",
      "decomp_name": "DrawPokemonPreviewFromPartySlot",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x028D": {
      "name": "CMD_653",
      "decomp_name": "ScrCmd_28D",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x028E": {
      "name": "CMD_654",
      "decomp_name": "ScrCmd_28E",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x028F": {
      "name": "CountLeagueVictories",
      "decomp_name": "ScrCmd_28F",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Output"
      ],
      "description": "Retrieves the number of times the player has beaten the Pok\u00e9mon League from the savedata file and stores the result in the Output variable. If the data cannot be retrieved or is invalid, sets the return value to 0."
    },
    "0x0290": {
      "name": "CMD_656",
      "decomp_name": "ScrCmd_290",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0291": {
      "name": "CMD_657",
      "decomp_name": "ScrCmd_291",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0292": {
      "name": "CMD_658",
      "decomp_name": "ScrCmd_292",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0293": {
      "name": "CMD_659",
      "decomp_name": "GetUndergroundTalkCounter",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0294": {
      "name": "CMD_660",
      "decomp_name": "ShowBattlePoints",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0295": {
      "name": "CMD_661",
      "decomp_name": "HideBattlePoints",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0296": {
      "name": "CMD_662",
      "decomp_name": "UpdateBPDisplay",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0297": {
      "name": "GetBP",
      "decomp_name": "ScrCmd_297",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of Battle Frontier points the player has in their wallet."
    },
    "0x0298": {
      "name": "AddBP",
      "decomp_name": "ScrCmd_298",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Number"
      ],
      "description": "Adds the chosen Number of Battle Frontier points to Player's wallet."
    },
    "0x0299": {
      "name": "SubBP",
      "decomp_name": "ScrCmd_299",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Number"
      ],
      "description": "Removes the chosen Number of Battle Frontier points from Player's wallet."
    },
    "0x029A": {
      "name": "CompareBP",
      "decomp_name": "ScrCmd_29A",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Number",
        "Var: Variable"
      ],
      "description": "Stores 1 into Variable if Player has at least the chosen Number of Battle Frontier points in their wallet, 0 otherwise."
    },
    "0x029B": {
      "name": "CMD_667",
      "decomp_name": "ScrCmd_29B",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x029C": {
      "name": "CMD_668",
      "decomp_name": "ScrCmd_29C",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x029D": {
      "name": "CMD_669",
      "decomp_name": "AddMenuEntry",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x029E": {
      "name": "CMD_670",
      "decomp_name": "ScrCmd_29E",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x029F": {
      "name": "ShakeCamera",
      "decomp_name": "ScrCmd_29F",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Type"
      ],
      "description": "Shakes the screen vertically (if Type is 0) or horizontally (if Type is 1)"
    },
    "0x02A0": {
      "name": "Battle2vs2",
      "decomp_name": "StartTagBattle",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Partner Trainer ID",
        "Flex: Trainer 1 ID",
        "Flex: Trainer 2 ID"
      ],
      "description": "Starts a double battle with Partner Trainer ID versus Trainer 1 ID and Trainer 2 ID"
    },
    "0x02A1": {
      "name": "CMD_673",
      "decomp_name": "ScrCmd_Unused_2A1",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02A2": {
      "name": "CMD_674",
      "decomp_name": "TrySetUnusedUndergroundField",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02A3": {
      "name": "CMD_675",
      "decomp_name": "ScrCmd_2A3",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02A4": {
      "name": "CMD_676",
      "decomp_name": "ScrCmd_2A4",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02A5": {
      "name": "PartyPokemonTradeScreen",
      "decomp_name": "ScrCmd_2A5",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Opens the party Pok\u00e9mon screen for a trade"
    },
    "0x02A6": {
      "name": "CMD_678",
      "decomp_name": "GetGameCornerPrizeData",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02A7": {
      "name": "CMD_679",
      "decomp_name": "ScrCmd_2A7",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02A8": {
      "name": "CMD_680",
      "decomp_name": "SubstractCoinsFromVar",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02A9": {
      "name": "CMD_681",
      "decomp_name": "HasCoinsFromVar",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02AA": {
      "name": "CMD_682",
      "decomp_name": "ScrCmd_2AA",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02AB": {
      "name": "CMD_683",
      "decomp_name": "ScrCmd_2AB",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02AC": {
      "name": "ActivateMysteryGift",
      "decomp_name": "UnlockMysteryGift",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Shows Mystery Gift option in Start Menu."
    },
    "0x02AD": {
      "name": "GetOWMovement",
      "decomp_name": "ScrCmd_2AD",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: Overworld"
      ],
      "description": "Stores Overworld's Movement ID into passed Variable"
    },
    "0x02AE": {
      "name": "CountPlayingSeq",
      "decomp_name": "IsSequencePlaying",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "VARIABLE"
      ],
      "parameter_values": [
        "u16: SSEQ ID",
        "Var: Answer"
      ],
      "description": "Retrieves the Player of the given SSEQ and stores the number of SSEQs it is playing into Answer."
    },
    "0x02AF": {
      "name": "CMD_687",
      "decomp_name": "ScrCmd_2AF",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02B0": {
      "name": "CMD_688",
      "decomp_name": "ScrCmd_2B0",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02B1": {
      "name": "CMD_689",
      "decomp_name": "ScrCmd_2B1",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02B2": {
      "name": "CMD_690",
      "decomp_name": "ScrCmd_2B2",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02B3": {
      "name": "TextSeal",
      "decomp_name": "ScrCmd_2B3",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Seal ID"
      ],
      "description": "Stores the name of Seal ID seal in String Buffer"
    },
    "0x02B4": {
      "name": "DummyLockAll",
      "decomp_name": "LockLastTalked",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Locks every event in the map and waits the invoking overworld to finish its movement for locking it"
    },
    "0x02B5": {
      "name": "CMD_693",
      "decomp_name": "ScrCmd_2B5",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02B6": {
      "name": "CMD_694",
      "decomp_name": "ScrCmd_2B6",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02B7": {
      "name": "CMD_695",
      "decomp_name": "ScrCmd_2B7",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02B8": {
      "name": "CMD_696",
      "decomp_name": "ScrCmd_2B8",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02B9": {
      "name": "CMD_697",
      "decomp_name": "ShowUnionRoomMenu",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02BA": {
      "name": "CMD_698",
      "decomp_name": "ScrCmd_2BA",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02BB": {
      "name": "CMD_699",
      "decomp_name": "ScrCmd_2BB",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02BC": {
      "name": "LastBattleCheckCaught",
      "decomp_name": "CheckDidNotCapture",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the last Pok\u00e9mon battle resulted in a successful capture, 1 otherwise."
    },
    "0x02BD": {
      "name": "SpWildBattle",
      "decomp_name": "StartLegendaryBattle",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Level"
      ],
      "description": "Starts a legendary battle against a Pok\u00e9mon of predefined Level"
    },
    "0x02BE": {
      "name": "CheckTrainerCardLevel",
      "decomp_name": "ScrCmd_2BE",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current trainer card level"
    },
    "0x02BF": {
      "name": "DummyRideBike",
      "decomp_name": "ScrCmd_2BF",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Nothing"
    },
    "0x02C0": {
      "name": "CMD_704",
      "decomp_name": "ScrCmd_2C0",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02C1": {
      "name": "ShowSaveBox",
      "decomp_name": "ScrCmd_2C1",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Displays the save data box (current map name, player's name, the amount of badges, the Pok\u00e9dex counter and the play time)"
    },
    "0x02C2": {
      "name": "HideSaveBox",
      "decomp_name": "ScrCmd_2C2",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Hides the save data box"
    },
    "0x02C3": {
      "name": "ScopeMode",
      "decomp_name": "ScrCmd_Unused_2C3",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Mode"
      ],
      "description": "If Mode is 1, activates the scope mode, otherwise the command deactivates the scope mode"
    },
    "0x02C4": {
      "name": "CMD_708",
      "decomp_name": "ScrCmd_2C4",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02C5": {
      "name": "CMD_709",
      "decomp_name": "ScrCmd_2C5",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02C6": {
      "name": "SpinTradeScreen",
      "decomp_name": "ScrCmd_2C6",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Starts the Spin Trade screen."
    },
    "0x02C7": {
      "name": "CMD_711",
      "decomp_name": "ScrCmd_2C7",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x02C8": {
      "name": "CMD_712",
      "decomp_name": "ScrCmd_2C8",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x02C9": {
      "name": "InitEternaGym",
      "decomp_name": "InitPersistedMapFeaturesForEternaGym",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Initializes Eterna Gym internal data and 3D model animations"
    },
    "0x02CA": {
      "name": "EternaGymClockAnim",
      "decomp_name": "ScrCmd_2CA",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Triggers the Eterna Gym next flower clock animation"
    },
    "0x02CB": {
      "name": "CMD_715",
      "decomp_name": "CountRepeatedSpeciesInParty",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: ???",
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x02CC": {
      "name": "CMD_716",
      "decomp_name": "ScrCmd_2CC",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: ???",
        "Flex: ???",
        "u16: ???"
      ],
      "description": "nan"
    },
    "0x02CD": {
      "name": "SetDarkFog",
      "decomp_name": "ScrCmd_2CD",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets weather #26 to the current map"
    },
    "0x02CE": {
      "name": "ClearDarkFog",
      "decomp_name": "ScrCmd_Unused_2CE",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Sets the default weather to the current map"
    },
    "0x02CF": {
      "name": "CMD_719",
      "decomp_name": "ScrCmd_2CF",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x02D0": {
      "name": "CMD_720",
      "decomp_name": "ScrCmd_2D0",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x02D1": {
      "name": "CMD_721",
      "decomp_name": "ScrCmd_2D1",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x02D2": {
      "name": "CMD_722",
      "decomp_name": "ScrCmd_2D2",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: ???",
        "Flex: ???",
        "u16: ???"
      ],
      "description": "nan"
    },
    "0x02D3": {
      "name": "CMD_723",
      "decomp_name": "ScrCmd_2D3",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x02D4": {
      "name": "CMD_724",
      "decomp_name": "ScrCmd_2D4",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???",
        "Var: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x02D5": {
      "name": "CMD_725",
      "decomp_name": "ScrCmd_2D5",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x02D6": {
      "name": "CMD_726",
      "decomp_name": "ScrCmd_2D6",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02D7": {
      "name": "CMD_727",
      "decomp_name": "ScrCmd_2D7",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x02D8": {
      "name": "CMD_728",
      "decomp_name": "PokeMartFrontier",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: Mart ID"
      ],
      "description": "nan"
    },
    "0x02D9": {
      "name": "CMD_729",
      "decomp_name": "ScrCmd_2D9",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: ???",
        "Flex: ???",
        "u16: ???"
      ],
      "description": "nan"
    },
    "0x02DA": {
      "name": "CMD_730",
      "decomp_name": "ScrCmd_2DA",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x02DB": {
      "name": "CMD_731",
      "decomp_name": "ScrCmd_2DB",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???",
        "Var: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x02DC": {
      "name": "CMD_732",
      "decomp_name": "ScrCmd_2DC",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x02DD": {
      "name": "CMD_733",
      "decomp_name": "FindPartySlotWithSpecies",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Var: Variable"
      ],
      "description": "Stores into Variable the Party position of specified Pok\u00e9mon, provided it is actually in the Pok\u00e9mon party."
    },
    "0x02DE": {
      "name": "CMD_734",
      "decomp_name": "ScrCmd_2DE",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "u16: ???",
        "u16: ???",
        "u16: ???"
      ],
      "description": "nan"
    },
    "0x02DF": {
      "name": "CMD_735",
      "decomp_name": "CalcAmitySquareBerryAndAccessoryManOptionID",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x02E0": {
      "name": "CMD_736",
      "decomp_name": "CheckAmitySquareManGiftIsAccesory",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: giftID",
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x02E1": {
      "name": "CMD_737",
      "decomp_name": "GetAmitySquareBerryOrAccessoryIDFromMan",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: berryAndAccessoryManOptionID",
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x02E2": {
      "name": "ScratchOffScreen",
      "decomp_name": "ScrCmd_2E2",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Loads and displays Scratch-off card interface."
    },
    "0x02E3": {
      "name": "ReleaseScriptApp",
      "decomp_name": "ScrCmd_2E3",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Releases resources that were previously allocated by a script command that runs an app."
    },
    "0x02E4": {
      "name": "CMD_740",
      "decomp_name": "ScrCmd_2E4",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x02E5": {
      "name": "CheckLearnableTutorMoves",
      "decomp_name": "CheckHasLearnableTutorMoves",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Tutor ID",
        "Variable: Answer"
      ],
      "description": "Checks if Pok\u00e9mon at Party Position can learn any move from the Tutor with chosen Tutor ID. Assigns 1 to Answer if yes, 0 otherwise."
    },
    "0x02E6": {
      "name": "ShowTutorMovesList",
      "decomp_name": "ShowMoveTutorMoveSelectionMenu",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Tutor ID",
        "Variable: Player Selection"
      ],
      "description": "Shows a list of moves that the Pok\u00e9mon at Party Position can learn from the Tutor with the specified Tutor ID. If Party Position is 0xFF, all moves from that Tutor are listed. Stores the player's Selection in the output variable."
    },
    "0x02E7": {
      "name": "LearnMoveScreen",
      "decomp_name": "OpenSummaryScreenTeachMove",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Move"
      ],
      "description": "Loads up a dedicated screen to teach the specified Move to the Pok\u00e9mon at the selected Party Position."
    },
    "0x02E8": {
      "name": "LearnMoveGetSelection",
      "decomp_name": "GetSummarySelectedMoveSlot",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the selected move slot after a LearnMoveScreen command, or 4 if player cancels the selection."
    },
    "0x02E9": {
      "name": "ChangePartyPokemonMove",
      "decomp_name": "ResetMoveSlot",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Move Slot",
        "Flex: New Move ID"
      ],
      "description": "Stores a New Move ID into the Move Slot of the Pok\u00e9mon at the chosen Party Position."
    },
    "0x02EA": {
      "name": "CheckAffordMove",
      "decomp_name": "CheckCanAffordMove",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: selectedMove",
        "Var: canTeach"
      ],
      "description": "Check if the player has enough shards to pay a Move Tutor to teach the given Move. Assigns 1 to Answer if yes, 0 otherwise."
    },
    "0x02EB": {
      "name": "PayTutorShards",
      "decomp_name": "PayShardsCost",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Move"
      ],
      "description": "Subtracts shards from the Player's inventory depending on the amount requested by the tutor for the specified Move."
    },
    "0x02EC": {
      "name": "ShowMovePriceBoard",
      "decomp_name": "ShowShardsCost",
      "parameters": [
        1,
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: X",
        "u8: Y",
        "Flex: Move",
        "Variable: Player Selection"
      ],
      "description": "Prepares a price board menu at X and Y screen coordinates for the chosen Move. Stores the player's Selection in the output variable."
    },
    "0x02ED": {
      "name": "CloseMovePriceBoard",
      "decomp_name": "CloseShardsCostWindow",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Closes the Move price board."
    },
    "0x02EE": {
      "name": "CMD_750",
      "decomp_name": "JudgeStats",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Var: totalIVs",
        "Var: highestIVIndex",
        "Var: highestIVValue"
      ],
      "description": "nan"
    },
    "0x02EF": {
      "name": "CMD_751",
      "decomp_name": "ScrCmd_2EF",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02F0": {
      "name": "InitVilla",
      "decomp_name": "InitPersistedMapFeaturesForVilla",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Initializes Villa internal data and 3D model animations"
    },
    "0x02F1": {
      "name": "ChangePokemonForm",
      "decomp_name": "ScrCmd_2F1",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Party Position",
        "Flex: Form"
      ],
      "description": "Changes the form value of the Pok\u00e9mon at Party Position to Form"
    },
    "0x02F2": {
      "name": "InitDistortionWorld",
      "decomp_name": "InitPersistedMapFeaturesForDistortionWorld",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Initializes Distortion World internal data and 3D model animations"
    },
    "0x02F3": {
      "name": "CMD_755",
      "decomp_name": "ScrCmd_2F3",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: ???",
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x02F4": {
      "name": "CMD_756",
      "decomp_name": "ScrCmd_2F4",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02F5": {
      "name": "CMD_757",
      "decomp_name": "BufferNumberPaddingDigits",
      "parameters": [
        1,
        4,
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: templateArg",
        "u32: value",
        "u8: paddingMode",
        "u8: maxDigits"
      ],
      "description": "StringTemplate_SetNumber(*strTemplate, templateArg, value, maxDigits, paddingMode, 1); see pokeplatinum for details"
    },
    "0x02F6": {
      "name": "CMD_758",
      "decomp_name": "ScrCmd_2F6",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Flex: ???",
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x02F7": {
      "name": "CMD_759",
      "decomp_name": "ScrCmd_2F7",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: ???"
      ],
      "description": "nan"
    },
    "0x02F8": {
      "name": "CMD_760",
      "decomp_name": "SetScene22",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x02F9": {
      "name": "LoadFieldAudio",
      "decomp_name": "SetFieldScene",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Music ID"
      ],
      "description": "Loads Field scene sound data (GROUP_SE_FIELD in the SDAT) and starts playing SSEQ with Music ID."
    },
    "0x02FA": {
      "name": "GetPlayingBGM",
      "decomp_name": "GetCurrentBGM",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores into Variable the ID of the current playing SSEQ."
    },
    "0x02FB": {
      "name": "SpearPillarSequence2",
      "decomp_name": "ScrCmd_2FB",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Starts part 2 of the Spear Pillar Sequence (Giratina Cutscene)"
    },
    "0x02FC": {
      "name": "CMD_764",
      "decomp_name": "ScrCmd_2FC",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x02FD": {
      "name": "CMD_765",
      "decomp_name": "ScrCmd_2FD",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: ???",
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x02FE": {
      "name": "CMD_766",
      "decomp_name": "GetItemQuantity",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Var: Quantity"
      ],
      "description": "FLEX as param0 could be wrong, might be u16 instead"
    },
    "0x02FF": {
      "name": "CMD_767",
      "decomp_name": "ScrCmd_2FF",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x0300": {
      "name": "CMD_768",
      "decomp_name": "ScrCmd_300",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0301": {
      "name": "CMD_769",
      "decomp_name": "ScrCmd_301",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0302": {
      "name": "CheckUsedRotomAppliances",
      "decomp_name": "GetRotomFormsInSave",
      "parameters": [
        2,
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Heat",
        "Var: Wash",
        "Var: Frost",
        "Var: Fan",
        "Var: Mow"
      ],
      "description": "Stores in Heat, Wash, Frost, Fan and Mow 1 if that appliance is being used by a Rotom, or 0 if the appliance is free"
    },
    "0x0303": {
      "name": "CMD_771",
      "decomp_name": "GetPartyRotomCountAndFirst",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Count",
        "Var: PartySlot"
      ],
      "description": "nan"
    },
    "0x0304": {
      "name": "CMD_772",
      "decomp_name": "SetRotomForm",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Party Slot",
        "Var: move Slot",
        "Var: ???",
        "Var: form"
      ],
      "description": "nan"
    },
    "0x0305": {
      "name": "CMD_773",
      "decomp_name": "GetPartyMonForm2",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Slot",
        "Var: Form"
      ],
      "description": "nan"
    },
    "0x0306": {
      "name": "CMD_774",
      "decomp_name": "ShowListMenuRememberCursor",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: rememberedListOffset",
        "Var: Cursor Position"
      ],
      "description": "nan"
    },
    "0x0307": {
      "name": "CMD_775",
      "decomp_name": "ScrCmd_307",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "returns PoffinCase_CountEmptySlots"
    },
    "0x0308": {
      "name": "CMD_776",
      "decomp_name": "AddCameraOverrideObject",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0309": {
      "name": "CMD_777",
      "decomp_name": "RemoveCameraOverrideObject",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x030A": {
      "name": "CMD_778",
      "decomp_name": "IncrementTrainerScore",
      "parameters": [
        2
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u16: Score"
      ],
      "description": "nan"
    },
    "0x030B": {
      "name": "CMD_779",
      "decomp_name": "ScrCmd_30B",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x030C": {
      "name": "CMD_780",
      "decomp_name": "ScrCmd_30C",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x030D": {
      "name": "CMD_781",
      "decomp_name": "ScrCmd_30D",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x030E": {
      "name": "CMD_782",
      "decomp_name": "ScrCmd_30E",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x030F": {
      "name": "CMD_783",
      "decomp_name": "ScrCmd_30F",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x0310": {
      "name": "CMD_784",
      "decomp_name": "ScrCmd_310",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0311": {
      "name": "CMD_785",
      "decomp_name": "ScrCmd_311",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x0312": {
      "name": "CMD_786",
      "decomp_name": "ScrCmd_312",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x0313": {
      "name": "CMD_787",
      "decomp_name": "ScrCmd_313",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0314": {
      "name": "GetBattleOutcome",
      "decomp_name": "ScrCmd_314",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the result of the last battle Variable"
    },
    "0x0315": {
      "name": "GetCurrentWeather",
      "decomp_name": "ScrCmd_315",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "Stores the current weather in Variable"
    },
    "0x0316": {
      "name": "CMD_790",
      "decomp_name": "ScrCmd_316",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0317": {
      "name": "GetPlayerPositionFull",
      "decomp_name": "GetPlayer3DPos",
      "parameters": [
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: X",
        "Var: Z",
        "Var: Y"
      ],
      "description": "Saves the current player position in X, Z, and Y."
    },
    "0x0318": {
      "name": "WildBattleFateful",
      "decomp_name": "StartFatefulEncounter",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Level"
      ],
      "description": "Starts a static encounter battle against a Pok\u00e9mon of predefined Level"
    },
    "0x0319": {
      "name": "GiratinaBattle",
      "decomp_name": "StartGiratinaOriginBattle",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Flex: Level"
      ],
      "description": "Starts a Distortion World wild battle against a Pok\u00e9mon with level Level"
    },
    "0x031A": {
      "name": "RegisterSeenPokemon",
      "decomp_name": "SetSpeciesSeen",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon"
      ],
      "description": "Marks Pok\u00e9mon in the Pok\u00e9dex as seen if it hasn't been caught"
    },
    "0x031B": {
      "name": "CMD_795",
      "decomp_name": "ScrCmd_31B",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???"
      ],
      "description": "something to do with TVBroadcast"
    },
    "0x031C": {
      "name": "CMD_796",
      "decomp_name": "CheckPartyHasFatefulEncounter",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX"
      ],
      "parameter_values": [
        "Var: Variable",
        "Flex: species"
      ],
      "description": "nan"
    },
    "0x031D": {
      "name": "CMD_797",
      "decomp_name": "ScrCmd_31D",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x031E": {
      "name": "CMD_798",
      "decomp_name": "ScrCmd_31E",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Party Slot",
        "Var: Variable"
      ],
      "description": "Restores the base form of the Pok\u00e9mon at the chosen Party Slot if it is Rotom, Giratina or Shaymin.\n\nAdditionally, if the Pok\u00e9mon is holding a Griseous Orb, it attempts to put it back into the Player's bag.\nStores 0xFFFF into Variable if this fails, 0 if it succeeds or the mon has a different item."
    },
    "0x031F": {
      "name": "CMD_799",
      "decomp_name": "ResetDistortionWorldPersistedCameraAngles",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0320": {
      "name": "PortalAnimation",
      "decomp_name": "ScrCmd_320",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "Prepares 3D data of Distortion World's portal and plays the animation (also with sound effect 0x5D3 #1491)."
    },
    "0x0321": {
      "name": "CMD_801",
      "decomp_name": "ScrCmd_321",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0322": {
      "name": "CMD_802",
      "decomp_name": "ScrCmd_322",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0323": {
      "name": "CMD_803",
      "decomp_name": "ScrCmd_323",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x0324": {
      "name": "CMD_804",
      "decomp_name": "ScrCmd_324",
      "parameters": [
        1,
        1,
        1,
        1,
        2,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "INTEGER",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "Var: ???",
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x0325": {
      "name": "CMD_805",
      "decomp_name": "ScrCmd_325",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x0326": {
      "name": "CMD_806",
      "decomp_name": "ScrCmd_326",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x0327": {
      "name": "CMD_807",
      "decomp_name": "ShowListMenuSetWidth",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Width"
      ],
      "description": "nan"
    },
    "0x0328": {
      "name": "CMD_808",
      "decomp_name": "SetPartyGiratinaForm",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0329": {
      "name": "CMD_809",
      "decomp_name": "ScrCmd_329",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "VARIABLE",
        "VARIABLE",
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???",
        "Var: ???",
        "Var: ???",
        "Var: ???"
      ],
      "description": "something about TVBroadcast"
    },
    "0x032A": {
      "name": "CMD_810",
      "decomp_name": "ScrCmd_32A",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x032B": {
      "name": "CheckEventRegigigas",
      "decomp_name": "CheckPartyHasFatefulEncounterRegigigas",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: Return Value"
      ],
      "description": "Return Value is 1 if Player has an event Regigigas in their party, 0 otherwise."
    },
    "0x032C": {
      "name": "CMD_812",
      "decomp_name": "ScrCmd_32C",
      "parameters": [
        2,
        2,
        2,
        2
      ],
      "parameter_types": [
        "VARIABLE",
        "FLEX",
        "FLEX",
        "FLEX"
      ],
      "parameter_values": [
        "Var: ???",
        "Flex: ???",
        "Flex: ???",
        "Flex: ???"
      ],
      "description": "nan"
    },
    "0x032D": {
      "name": "CMD_813",
      "decomp_name": "ScrCmd_32D",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x032E": {
      "name": "CMD_814",
      "decomp_name": "ScrCmd_32E",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x032F": {
      "name": "CMD_815",
      "decomp_name": "CheckPartyHasHeldItem",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "nan"
    },
    "0x0330": {
      "name": "CMD_816",
      "decomp_name": "ScrCmd_330",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0331": {
      "name": "CMD_817",
      "decomp_name": "ScrCmd_331",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0332": {
      "name": "CMD_818",
      "decomp_name": "ScrCmd_332",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0333": {
      "name": "SetFieldVolume",
      "decomp_name": "ScrCmd_333",
      "parameters": [
        2
      ],
      "parameter_types": [
        "FLEX"
      ],
      "parameter_values": [
        "Flex: Volume"
      ],
      "description": "Sets PLAYER_FIELD's Volume to passed value."
    },
    "0x0334": {
      "name": "CMD_820",
      "decomp_name": "AddToGameRecord",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0335": {
      "name": "CMD_821",
      "decomp_name": "AddToGameRecordBigValue",
      "parameters": [
        2,
        4
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u16: ???",
        "u32: ???"
      ],
      "description": "nan"
    },
    "0x0336": {
      "name": "CMD_822",
      "decomp_name": "ScrCmd_336",
      "parameters": [
        2
      ],
      "parameter_types": [
        "VARIABLE"
      ],
      "parameter_values": [
        "Var: ???"
      ],
      "description": "nan"
    },
    "0x0337": {
      "name": "CheckPokemonIsSeen",
      "decomp_name": "CheckHasSeenSpecies",
      "parameters": [
        2,
        2
      ],
      "parameter_types": [
        "FLEX",
        "VARIABLE"
      ],
      "parameter_values": [
        "Flex: Pok\u00e9mon",
        "Var: Variable"
      ],
      "description": "Checks if Pok\u00e9mon is registered as seen in the Pok\u00e9dex, stores the answer in Variable"
    },
    "0x0338": {
      "name": "CMD_824",
      "decomp_name": "ScrCmd_338",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x0339": {
      "name": "CMD_825",
      "decomp_name": "ScrCmd_339",
      "parameters": [],
      "parameter_types": [],
      "parameter_values": [],
      "description": "nan"
    },
    "0x033A": {
      "name": "CMD_826",
      "decomp_name": "SetMenuYOriginSide",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???"
      ],
      "description": "nan"
    },
    "0x033B": {
      "name": "CMD_827",
      "decomp_name": "ScrCmd_33B",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: ???"
      ],
      "description": "nan"
    },
    "0x033C": {
      "name": "TextItemLowercase",
      "decomp_name": "ScrCmd_33C",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's lowercase name in String Buffer"
    },
    "0x033D": {
      "name": "TextItemPlural",
      "decomp_name": "BufferItemNamePlural",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's plural noun in String Buffer"
    },
    "0x033E": {
      "name": "CMD_830",
      "decomp_name": "ScrCmd_33E",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Underground goods"
      ],
      "description": "???"
    },
    "0x033F": {
      "name": "CMD_831",
      "decomp_name": "ScrCmd_33F",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Underground trap"
      ],
      "description": "???"
    },
    "0x0340": {
      "name": "CMD_832",
      "decomp_name": "ScrCmd_340",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Underground treasure"
      ],
      "description": "???"
    },
    "0x0341": {
      "name": "CMD_833",
      "decomp_name": "ScrCmd_341",
      "parameters": [
        1,
        2,
        2,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX",
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: ???",
        "u16: ???",
        "u8: ???"
      ],
      "description": "???"
    },
    "0x0342": {
      "name": "CMD_834",
      "decomp_name": "BufferPlayerCounterpartStarterSpeciesNameWithArticle",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "???"
    },
    "0x0343": {
      "name": "CMD_835",
      "decomp_name": "ScrCmd_343",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Accesory"
      ],
      "description": "???"
    },
    "0x0344": {
      "name": "TextTrainerClass",
      "decomp_name": "ScrCmd_344",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Trainer class"
      ],
      "description": "Stores Trainer class' lowercase noun in String Buffer"
    },
    "0x0345": {
      "name": "TextSealPlural",
      "decomp_name": "ScrCmd_345",
      "parameters": [
        1,
        2
      ],
      "parameter_types": [
        "INTEGER",
        "FLEX"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "Flex: Seal"
      ],
      "description": "Stores Seal's plural noun in String Buffer"
    },
    "0x0346": {
      "name": "TextCapitalize",
      "decomp_name": "ScrCmd_346",
      "parameters": [
        1
      ],
      "parameter_types": [
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer"
      ],
      "description": "Capitalizes the string currently stored in String Buffer"
    },
    "0x0347": {
      "name": "DisplayFloor",
      "decomp_name": "ScrCmd_347",
      "parameters": [
        1,
        1
      ],
      "parameter_types": [
        "INTEGER",
        "INTEGER"
      ],
      "parameter_values": [
        "u8: String Buffer",
        "u8: Floor"
      ],
      "description": "Stores Floor's name in String Buffer"
    }
  }
}